<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 322 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_322{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_322{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_322{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s4_322{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_322{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s6_322{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_322{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s8_322{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s9_322{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s10_322{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s11_322{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s12_322{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s13_322{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_322"
>Choosing k</text>

<text 
x="55" 
y="122" 
class="s2_322"
>In the previous example, the choice of</text>

<text 
x="396" 
y="122" 
class="s3_322"
>k</text>

<text 
x="412" 
y="122" 
class="s2_322"
>was driven by factors outside of our control. In</text>

<text 
x="55" 
y="149" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_322"
>general, this won’t be the case. There is a wide variety of ways to choose a</text>

<text 
x="717" 
y="149" 
class="s3_322"
>k</text>

<text 
x="727" 
y="149" 
dx="0,0,0,0,0,0,0,0,0,0,0,-1.2" 
class="s2_322"
>. One that’s</text>

<text 
x="55" 
y="177" 
class="s2_322"
>reasonably easy to understand involves plotting the sum of squared errors (between each</text>

<text 
x="55" 
y="204" 
class="s2_322"
>point and the mean of its cluster) as a function of</text>

<text 
x="491" 
y="204" 
class="s3_322"
>k</text>

<text 
x="506" 
y="204" 
class="s2_322"
>and looking at where the graph</text>

<text 
x="55" 
y="232" 
class="s2_322"
>“bends”:</text>

<text 
x="76" 
y="277" 
class="s4_322"
>def</text>

<text 
x="108" 
y="277" 
class="s5_322"
>squared_clustering_errors</text>

<text 
x="306" 
y="277" 
class="s6_322"
>(</text>

<text 
x="314" 
y="277" 
class="s7_322"
>inputs</text>

<text 
x="361" 
y="277" 
class="s6_322"
>,</text>

<text 
x="377" 
y="277" 
class="s7_322"
>k</text>

<text 
x="385" 
y="277" 
class="s6_322"
>):</text>

<text 
x="108" 
y="292" 
dx="0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s8_322"
>"""finds the total squared error from k-means clustering the inputs"""</text>

<text 
x="108" 
y="308" 
class="s7_322"
>clusterer</text>

<text 
x="187" 
y="308" 
class="s6_322"
>=</text>

<text 
x="203" 
y="308" 
class="s7_322"
>KMeans</text>

<text 
x="250" 
y="308" 
class="s6_322"
>(</text>

<text 
x="258" 
y="308" 
class="s7_322"
>k</text>

<text 
x="266" 
y="308" 
class="s6_322"
>)</text>

<text 
x="108" 
y="323" 
class="s7_322"
>clusterer</text>

<text 
x="179" 
y="323" 
class="s6_322"
>.</text>

<text 
x="187" 
y="323" 
class="s7_322"
>train</text>

<text 
x="227" 
y="323" 
class="s6_322"
>(</text>

<text 
x="235" 
y="323" 
class="s7_322"
>inputs</text>

<text 
x="282" 
y="323" 
class="s6_322"
>)</text>

<text 
x="108" 
y="338" 
class="s7_322"
>means</text>

<text 
x="156" 
y="338" 
class="s6_322"
>=</text>

<text 
x="171" 
y="338" 
class="s7_322"
>clusterer</text>

<text 
x="242" 
y="338" 
class="s6_322"
>.</text>

<text 
x="250" 
y="338" 
class="s7_322"
>means</text>

<text 
x="108" 
y="354" 
class="s7_322"
>assignments</text>

<text 
x="203" 
y="354" 
class="s6_322"
>=</text>

<text 
x="219" 
y="354" 
class="s9_322"
>map</text>

<text 
x="242" 
y="354" 
class="s6_322"
>(</text>

<text 
x="250" 
y="354" 
class="s7_322"
>clusterer</text>

<text 
x="322" 
y="354" 
class="s6_322"
>.</text>

<text 
x="329" 
y="354" 
class="s7_322"
>classify</text>

<text 
x="393" 
y="354" 
class="s6_322"
>,</text>

<text 
x="408" 
y="354" 
class="s7_322"
>inputs</text>

<text 
x="456" 
y="354" 
class="s6_322"
>)</text>

<text 
x="108" 
y="385" 
class="s4_322"
>return</text>

<text 
x="163" 
y="385" 
class="s9_322"
>sum</text>

<text 
x="187" 
y="385" 
class="s6_322"
>(</text>

<text 
x="195" 
y="385" 
class="s7_322"
>squared_distance</text>

<text 
x="322" 
y="385" 
class="s6_322"
>(</text>

<text 
x="329" 
y="385" 
class="s9_322"
>input</text>

<text 
x="369" 
y="385" 
class="s6_322"
>,</text>

<text 
x="385" 
y="385" 
class="s7_322"
>means</text>

<text 
x="424" 
y="385" 
class="s6_322"
>[</text>

<text 
x="432" 
y="385" 
class="s7_322"
>cluster</text>

<text 
x="487" 
y="385" 
class="s6_322"
>])</text>

<text 
x="195" 
y="400" 
class="s4_322"
>for</text>

<text 
x="227" 
y="400" 
class="s9_322"
>input</text>

<text 
x="266" 
y="400" 
class="s6_322"
>,</text>

<text 
x="282" 
y="400" 
class="s7_322"
>cluster</text>

<text 
x="345" 
y="400" 
class="s10_322"
>in</text>

<text 
x="369" 
y="400" 
class="s9_322"
>zip</text>

<text 
x="393" 
y="400" 
class="s6_322"
>(</text>

<text 
x="401" 
y="400" 
class="s7_322"
>inputs</text>

<text 
x="448" 
y="400" 
class="s6_322"
>,</text>

<text 
x="464" 
y="400" 
class="s7_322"
>assignments</text>

<text 
x="551" 
y="400" 
class="s6_322"
>))</text>

<text 
x="76" 
y="431" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s11_322"
># now plot from 1 up to len(inputs) clusters</text>

<text 
x="76" 
y="462" 
class="s7_322"
>ks</text>

<text 
x="100" 
y="462" 
class="s6_322"
>=</text>

<text 
x="116" 
y="462" 
class="s9_322"
>range</text>

<text 
x="156" 
y="462" 
class="s6_322"
>(</text>

<text 
x="163" 
y="462" 
class="s12_322"
>1</text>

<text 
x="171" 
y="462" 
class="s6_322"
>,</text>

<text 
x="187" 
y="462" 
class="s9_322"
>len</text>

<text 
x="211" 
y="462" 
class="s6_322"
>(</text>

<text 
x="219" 
y="462" 
class="s7_322"
>inputs</text>

<text 
x="266" 
y="462" 
dx="0,0,4.6" 
class="s6_322"
>) +</text>

<text 
x="298" 
y="462" 
class="s12_322"
>1</text>

<text 
x="306" 
y="462" 
class="s6_322"
>)</text>

<text 
x="76" 
y="477" 
class="s7_322"
>errors</text>

<text 
x="132" 
y="477" 
dx="0,0,4.6" 
class="s6_322"
>= [</text>

<text 
x="156" 
y="477" 
class="s7_322"
>squared_clustering_errors</text>

<text 
x="353" 
y="477" 
class="s6_322"
>(</text>

<text 
x="361" 
y="477" 
class="s7_322"
>inputs</text>

<text 
x="408" 
y="477" 
class="s6_322"
>,</text>

<text 
x="424" 
y="477" 
class="s7_322"
>k</text>

<text 
x="432" 
y="477" 
class="s6_322"
>)</text>

<text 
x="448" 
y="477" 
class="s4_322"
>for</text>

<text 
x="480" 
y="477" 
class="s7_322"
>k</text>

<text 
x="495" 
y="477" 
class="s10_322"
>in</text>

<text 
x="519" 
y="477" 
class="s7_322"
>ks</text>

<text 
x="535" 
y="477" 
class="s6_322"
>]</text>

<text 
x="76" 
y="508" 
class="s7_322"
>plt</text>

<text 
x="100" 
y="508" 
class="s6_322"
>.</text>

<text 
x="108" 
y="508" 
class="s7_322"
>plot</text>

<text 
x="140" 
y="508" 
class="s6_322"
>(</text>

<text 
x="148" 
y="508" 
class="s7_322"
>ks</text>

<text 
x="163" 
y="508" 
class="s6_322"
>,</text>

<text 
x="179" 
y="508" 
class="s7_322"
>errors</text>

<text 
x="227" 
y="508" 
class="s6_322"
>)</text>

<text 
x="76" 
y="523" 
class="s7_322"
>plt</text>

<text 
x="100" 
y="523" 
class="s6_322"
>.</text>

<text 
x="108" 
y="523" 
class="s7_322"
>xticks</text>

<text 
x="156" 
y="523" 
class="s6_322"
>(</text>

<text 
x="163" 
y="523" 
class="s7_322"
>ks</text>

<text 
x="179" 
y="523" 
class="s6_322"
>)</text>

<text 
x="76" 
y="539" 
class="s7_322"
>plt</text>

<text 
x="100" 
y="539" 
class="s6_322"
>.</text>

<text 
x="108" 
y="539" 
class="s7_322"
>xlabel</text>

<text 
x="156" 
y="539" 
class="s6_322"
>(</text>

<text 
x="163" 
y="539" 
class="s13_322"
>"k"</text>

<text 
x="187" 
y="539" 
class="s6_322"
>)</text>

<text 
x="76" 
y="554" 
class="s7_322"
>plt</text>

<text 
x="100" 
y="554" 
class="s6_322"
>.</text>

<text 
x="108" 
y="554" 
class="s7_322"
>ylabel</text>

<text 
x="156" 
y="554" 
class="s6_322"
>(</text>

<text 
x="163" 
y="554" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s13_322"
>"total squared error"</text>

<text 
x="329" 
y="554" 
class="s6_322"
>)</text>

<text 
x="76" 
y="569" 
class="s7_322"
>plt</text>

<text 
x="100" 
y="569" 
class="s6_322"
>.</text>

<text 
x="108" 
y="569" 
class="s7_322"
>title</text>

<text 
x="148" 
y="569" 
class="s6_322"
>(</text>

<text 
x="156" 
y="569" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s13_322"
>"Total Error vs. # of Clusters"</text>

<text 
x="401" 
y="569" 
class="s6_322"
>)</text>

<text 
x="76" 
y="585" 
class="s7_322"
>plt</text>

<text 
x="100" 
y="585" 
class="s6_322"
>.</text>

<text 
x="108" 
y="585" 
class="s7_322"
>show</text>

<text 
x="140" 
y="585" 
class="s6_322"
>()</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
