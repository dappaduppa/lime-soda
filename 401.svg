<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 401 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_401{
stroke: #000000;
stroke-width: 1.0996486;
stroke-linecap: square;
stroke-linejoin: miter;
}

.s1_401{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_401{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_401{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_401{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s5_401{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s6_401{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_401{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s8_401{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s9_401{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s10_401{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s11_401{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_401"
>Example: Analyzing Status Updates</text>

<text 
x="55" 
y="122" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_401"
>The content VP was impressed with the word counts and asks what else you can learn</text>

<text 
x="55" 
y="149" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_401"
>from people’s status updates. You manage to extract a data set of status updates that look</text>

<text 
x="55" 
y="177" 
class="s2_401"
>like:</text>

<text 
x="76" 
y="222" 
class="s3_401"
>{</text>

<text 
x="84" 
y="222" 
class="s4_401"
>"id"</text>

<text 
x="116" 
y="222" 
class="s3_401"
>:</text>

<text 
x="132" 
y="222" 
class="s5_401"
>1</text>

<text 
x="140" 
y="222" 
class="s3_401"
>,</text>

<text 
x="84" 
y="237" 
class="s4_401"
>"username"</text>

<text 
x="171" 
y="237" 
class="s3_401"
>:</text>

<text 
x="187" 
y="237" 
class="s4_401"
>"joelgrus"</text>

<text 
x="266" 
y="237" 
class="s3_401"
>,</text>

<text 
x="84" 
y="253" 
class="s4_401"
>"text"</text>

<text 
x="140" 
y="253" 
class="s3_401"
>:</text>

<text 
x="156" 
y="253" 
dx="0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_401"
>"Is anyone interested in a data science book?"</text>

<text 
x="519" 
y="253" 
class="s3_401"
>,</text>

<text 
x="84" 
y="268" 
class="s4_401"
>"created_at"</text>

<text 
x="187" 
y="268" 
class="s3_401"
>:</text>

<text 
x="203" 
y="268" 
class="s6_401"
>datetime</text>

<text 
x="266" 
y="268" 
class="s3_401"
>.</text>

<text 
x="274" 
y="268" 
class="s6_401"
>datetime</text>

<text 
x="337" 
y="268" 
class="s3_401"
>(</text>

<text 
x="345" 
y="268" 
class="s5_401"
>2013</text>

<text 
x="377" 
y="268" 
class="s3_401"
>,</text>

<text 
x="393" 
y="268" 
class="s5_401"
>12</text>

<text 
x="408" 
y="268" 
class="s3_401"
>,</text>

<text 
x="424" 
y="268" 
class="s5_401"
>21</text>

<text 
x="440" 
y="268" 
class="s3_401"
>,</text>

<text 
x="456" 
y="268" 
class="s5_401"
>11</text>

<text 
x="472" 
y="268" 
class="s3_401"
>,</text>

<text 
x="487" 
y="268" 
class="s5_401"
>47</text>

<text 
x="503" 
y="268" 
class="s3_401"
>,</text>

<text 
x="519" 
y="268" 
class="s5_401"
>0</text>

<text 
x="527" 
y="268" 
class="s3_401"
>),</text>

<text 
x="84" 
y="283" 
class="s4_401"
>"liked_by"</text>

<text 
x="171" 
y="283" 
dx="0,0,4.6" 
class="s3_401"
>: [</text>

<text 
x="195" 
y="283" 
class="s4_401"
>"data_guy"</text>

<text 
x="274" 
y="283" 
class="s3_401"
>,</text>

<text 
x="290" 
y="283" 
class="s4_401"
>"data_gal"</text>

<text 
x="369" 
y="283" 
class="s3_401"
>,</text>

<text 
x="385" 
y="283" 
class="s4_401"
>"mike"</text>

<text 
x="432" 
y="283" 
dx="0,0,4.6" 
class="s3_401"
>] }</text>

<text 
x="55" 
y="336" 
dx="0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_401"
>Let’s say we need to figure out which day of the week people talk the most about data</text>

<text 
x="55" 
y="364" 
class="s2_401"
>science. In order to find this, we’ll just count how many data science updates there are on</text>

<text 
x="55" 
y="391" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0" 
class="s2_401"
>each day of the week. This means we’ll need to group by the day of week, so that’s our</text>

<text 
x="55" 
y="419" 
dx="0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_401"
>key. And if we emit a value of</text>

<text 
x="326" 
y="419" 
class="s7_401"
>1</text>

<text 
x="342" 
y="419" 
class="s2_401"
>for each update that contains “data science,” we can</text>

<text 
x="55" 
y="448" 
class="s2_401"
>simply get the total number using</text>

<text 
x="355" 
y="448" 
class="s7_401"
>sum</text>

<text 
x="387" 
y="448" 
class="s2_401"
>:</text>

<text 
x="76" 
y="496" 
class="s8_401"
>def</text>

<text 
x="108" 
y="496" 
class="s9_401"
>data_science_day_mapper</text>

<text 
x="290" 
y="496" 
class="s3_401"
>(</text>

<text 
x="298" 
y="496" 
class="s6_401"
>status_update</text>

<text 
x="401" 
y="496" 
class="s3_401"
>):</text>

<text 
x="108" 
y="511" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0" 
class="s10_401"
>"""yields (day_of_week, 1) if status_update contains "data science" """</text>

<text 
x="108" 
y="527" 
class="s8_401"
>if</text>

<text 
x="132" 
y="527" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s4_401"
>"data science"</text>

<text 
x="250" 
y="527" 
class="s11_401"
>in</text>

<text 
x="274" 
y="527" 
class="s6_401"
>status_update</text>

<text 
x="377" 
y="527" 
class="s3_401"
>[</text>

<text 
x="385" 
y="527" 
class="s4_401"
>"text"</text>

<text 
x="432" 
y="527" 
class="s3_401"
>].</text>

<text 
x="448" 
y="527" 
class="s6_401"
>lower</text>

<text 
x="487" 
y="527" 
class="s3_401"
>():</text>

<text 
x="140" 
y="542" 
class="s6_401"
>day_of_week</text>

<text 
x="235" 
y="542" 
class="s3_401"
>=</text>

<text 
x="250" 
y="542" 
class="s6_401"
>status_update</text>

<text 
x="353" 
y="542" 
class="s3_401"
>[</text>

<text 
x="361" 
y="542" 
class="s4_401"
>"created_at"</text>

<text 
x="456" 
y="542" 
class="s3_401"
>].</text>

<text 
x="472" 
y="542" 
class="s6_401"
>weekday</text>

<text 
x="527" 
y="542" 
class="s3_401"
>()</text>

<text 
x="140" 
y="557" 
class="s8_401"
>yield</text>

<text 
x="187" 
y="557" 
class="s3_401"
>(</text>

<text 
x="195" 
y="557" 
class="s6_401"
>day_of_week</text>

<text 
x="282" 
y="557" 
class="s3_401"
>,</text>

<text 
x="298" 
y="557" 
class="s5_401"
>1</text>

<text 
x="306" 
y="557" 
class="s3_401"
>)</text>

<text 
x="76" 
y="588" 
class="s6_401"
>data_science_days</text>

<text 
x="219" 
y="588" 
class="s3_401"
>=</text>

<text 
x="235" 
y="588" 
class="s6_401"
>map_reduce</text>

<text 
x="314" 
y="588" 
class="s3_401"
>(</text>

<text 
x="322" 
y="588" 
class="s6_401"
>status_updates</text>

<text 
x="432" 
y="588" 
class="s3_401"
>,</text>

<text 
x="322" 
y="604" 
class="s6_401"
>data_science_day_mapper</text>

<text 
x="503" 
y="604" 
class="s3_401"
>,</text>

<text 
x="322" 
y="619" 
class="s6_401"
>sum_reducer</text>

<text 
x="408" 
y="619" 
class="s3_401"
>)</text>

<text 
x="55" 
y="672" 
class="s2_401"
>As a slightly more complicated example, imagine we need to find out for each user the</text>

<text 
x="55" 
y="699" 
class="s2_401"
>most common word that she puts in her status updates. There are three possible</text>

<text 
x="55" 
y="727" 
class="s2_401"
>approaches that spring to mind for the</text>

<text 
x="395" 
y="727" 
class="s7_401"
>mapper</text>

<text 
x="458" 
y="727" 
class="s2_401"
>:</text>

<path d="M61.6,757l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_401" />
<text 
x="82" 
y="766" 
class="s2_401"
>Put the username in the key; put the words and counts in the values.</text>

<path d="M61.6,804.3l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_401" />
<text 
x="82" 
y="814" 
class="s2_401"
>Put the word in key; put the usernames and counts in the values.</text>

<path d="M61.6,851.6l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_401" />
<text 
x="82" 
y="861" 
class="s2_401"
>Put the username and word in the key; put the counts in the values.</text>

<text 
x="55" 
y="909" 
class="s2_401"
>If you think about it a bit more, we definitely want to group by</text>

<text 
x="612" 
y="909" 
class="s7_401"
>username</text>

<text 
x="696" 
y="909" 
class="s2_401"
>, because we</text>

<text 
x="55" 
y="939" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_401"
>want to consider each person’s words separately. And we don’t want to group by</text>

<text 
x="769" 
y="939" 
class="s7_401"
>word</text>

<text 
x="811" 
y="939" 
class="s2_401"
>,</text>

<text 
x="55" 
y="969" 
class="s2_401"
>since our reducer will need to see all the words for each person to find out which is the</text>

<text 
x="55" 
y="996" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_401"
>most popular. This means that the first option is the right choice:</text>

<text 
x="76" 
y="1041" 
class="s8_401"
>def</text>

<text 
x="108" 
y="1041" 
class="s9_401"
>words_per_user_mapper</text>

<text 
x="274" 
y="1041" 
class="s3_401"
>(</text>

<text 
x="282" 
y="1041" 
class="s6_401"
>status_update</text>

<text 
x="385" 
y="1041" 
class="s3_401"
>):</text>

<text 
x="108" 
y="1057" 
class="s6_401"
>user</text>

<text 
x="148" 
y="1057" 
class="s3_401"
>=</text>

<text 
x="163" 
y="1057" 
class="s6_401"
>status_update</text>

<text 
x="266" 
y="1057" 
class="s3_401"
>[</text>

<text 
x="274" 
y="1057" 
class="s4_401"
>"username"</text>

<text 
x="353" 
y="1057" 
class="s3_401"
>]</text>

<text 
x="108" 
y="1072" 
class="s8_401"
>for</text>

<text 
x="140" 
y="1072" 
class="s6_401"
>word</text>

<text 
x="179" 
y="1072" 
class="s11_401"
>in</text>

<text 
x="203" 
y="1072" 
class="s6_401"
>tokenize</text>

<text 
x="266" 
y="1072" 
class="s3_401"
>(</text>

<text 
x="274" 
y="1072" 
class="s6_401"
>status_update</text>

<text 
x="377" 
y="1072" 
class="s3_401"
>[</text>

<text 
x="385" 
y="1072" 
class="s4_401"
>"text"</text>

<text 
x="432" 
y="1072" 
class="s3_401"
>]):</text>

<text 
x="140" 
y="1088" 
class="s8_401"
>yield</text>

<text 
x="187" 
y="1088" 
class="s3_401"
>(</text>

<text 
x="195" 
y="1088" 
class="s6_401"
>user</text>

<text 
x="227" 
y="1088" 
dx="0,0,4.6" 
class="s3_401"
>, (</text>

<text 
x="250" 
y="1088" 
class="s6_401"
>word</text>

<text 
x="282" 
y="1088" 
class="s3_401"
>,</text>

<text 
x="298" 
y="1088" 
class="s5_401"
>1</text>

<text 
x="306" 
y="1088" 
class="s3_401"
>))</text>

<text 
x="76" 
y="1118" 
class="s8_401"
>def</text>

<text 
x="108" 
y="1118" 
class="s9_401"
>most_popular_word_reducer</text>

<text 
x="306" 
y="1118" 
class="s3_401"
>(</text>

<text 
x="314" 
y="1118" 
class="s6_401"
>user</text>

<text 
x="345" 
y="1118" 
class="s3_401"
>,</text>

<text 
x="361" 
y="1118" 
class="s6_401"
>words_and_counts</text>

<text 
x="487" 
y="1118" 
class="s3_401"
>):</text>

<text 
x="108" 
y="1134" 
dx="0,0,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s10_401"
>"""given a sequence of (word, count) pairs,</text>

<text 
x="108" 
y="1149" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s10_401"
>return the word with the highest total count"""</text>

<text 
x="108" 
y="1180" 
class="s6_401"
>word_counts</text>

<text 
x="203" 
y="1180" 
class="s3_401"
>=</text>

<text 
x="219" 
y="1180" 
class="s6_401"
>Counter</text>

<text 
x="274" 
y="1180" 
class="s3_401"
>()</text>

<text 
x="108" 
y="1195" 
class="s8_401"
>for</text>

<text 
x="140" 
y="1195" 
class="s6_401"
>word</text>

<text 
x="171" 
y="1195" 
class="s3_401"
>,</text>

<text 
x="187" 
y="1195" 
class="s6_401"
>count</text>

<text 
x="235" 
y="1195" 
class="s11_401"
>in</text>

<text 
x="258" 
y="1195" 
class="s6_401"
>words_and_counts</text>

<text 
x="385" 
y="1195" 
class="s3_401"
>:</text>

<text 
x="140" 
y="1211" 
class="s6_401"
>word_counts</text>

<text 
x="227" 
y="1211" 
class="s3_401"
>[</text>

<text 
x="235" 
y="1211" 
class="s6_401"
>word</text>

<text 
x="266" 
y="1211" 
dx="0,0,4.6,0" 
class="s3_401"
>] +=</text>

<text 
x="306" 
y="1211" 
class="s6_401"
>count</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
