<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 166 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_166{
fill: #BEBEBE;
}

.s1_166{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_166{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_166{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_166{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s5_166{
font-size: 17.60px;
font-family: LiberationMono-Italic_10;
fill: #8E0012;
}
.s6_166{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #737373;
}
.s7_166{
font-size: 16.50px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s8_166{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s9_166{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s10_166{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s11_166{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s12_166{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #330099;
}
.s13_166{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #330099;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<path fill-rule="evenodd" d="M93.5,735L816,735c3,0,5.5,2.4,5.5,5.5l0,96.8c0,3,-2.5,5.5,-5.5,5.5l-722.5,0c-3,0,-5.5,-2.5,-5.5,-5.5l0,-96.8c0,-3.1,2.5,-5.5,5.5,-5.5m0,1.1l722.5,0c2.4,0,4.4,1.9,4.4,4.4l0,96.8c0,2.4,-2,4.4,-4.4,4.4l-722.5,0c-2.4,0,-4.4,-2,-4.4,-4.4l0,-96.8c0,-2.5,2,-4.4,4.4,-4.4Z" class="g1_166" />
<text 
x="55" 
y="77" 
class="s1_166"
>Example: O’Reilly Books About Data</text>

<text 
x="55" 
y="115" 
dx="0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>A potential investor in DataSciencester thinks data is just a fad. To prove him wrong, you</text>

<text 
x="55" 
y="143" 
class="s2_166"
>decide to examine how many data books O’Reilly has published over time. After digging</text>

<text 
x="55" 
y="170" 
class="s2_166"
>through its website, you find that it has many pages of data books (and videos), reachable</text>

<text 
x="55" 
y="198" 
class="s2_166"
>through 30-items-at-a-time directory pages with URLs like:</text>

<text 
x="76" 
y="243" 
class="s3_166"
>http://shop.oreilly.com/category/browse-subjects/data.do?</text>

<text 
x="76" 
y="258" 
class="s3_166"
>sortby=publicationDate&amp;page=1</text>

<text 
x="55" 
y="311" 
class="s2_166"
>Unless you want to be a jerk (and unless you want your scraper to get banned), whenever</text>

<text 
x="55" 
y="338" 
class="s2_166"
>you want to scrape data from a website you should first check to see if it has some sort of</text>

<text 
x="55" 
y="366" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>access policy. Looking at:</text>

<text 
x="76" 
y="411" 
class="s3_166"
>http://oreilly.com/terms/</text>

<text 
x="55" 
y="464" 
class="s2_166"
>there seems to be nothing prohibiting this project. In order to be good citizens, we should</text>

<text 
x="55" 
y="491" 
class="s2_166"
>also check for a</text>

<text 
x="199" 
y="491" 
dx="0,-0.8,0,0,0,0,0,0,0,0" 
class="s4_166"
>robots.txt</text>

<text 
x="287" 
y="491" 
class="s2_166"
>file that tells webcrawlers how to behave. The important lines in</text>

<text 
x="55" 
y="519" 
class="s5_166"
>http://shop.oreilly.com/robots.txt</text>

<text 
x="419" 
y="519" 
class="s2_166"
>are:</text>

<text 
x="76" 
y="566" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0" 
class="s3_166"
>Crawl-delay: 30</text>

<text 
x="76" 
y="582" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0" 
class="s3_166"
>Request-rate: 1/30</text>

<text 
x="55" 
y="634" 
class="s2_166"
>The first tells us that we should wait 30 seconds between requests, the second that we</text>

<text 
x="55" 
y="662" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>should request only one page every 30 seconds. So basically they’re two different ways of</text>

<text 
x="55" 
y="689" 
class="s2_166"
>saying the same thing. (There are other lines that indicate directories not to scrape, but</text>

<text 
x="55" 
y="717" 
dx="0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>they don’t include our URL, so we’re OK there.)</text>

<text 
x="421" 
y="760" 
dx="0,1.1,1.1,1.1" 
class="s6_166"
>NOTE</text>

<text 
x="97" 
y="789" 
dx="0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_166"
>There’s always the possibility that O’Reilly will at some point revamp its website and break all the logic in</text>

<text 
x="97" 
y="809" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_166"
>this section. I will do what I can to prevent that, of course, but I don’t have a ton of influence over there.</text>

<text 
x="97" 
y="829" 
class="s7_166"
>Although, if every one of you were to convince everyone you know to buy a copy of this book…</text>

<text 
x="55" 
y="874" 
dx="0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>To figure out how to extract the data, let’s download one of those pages and feed it to</text>

<text 
x="55" 
y="902" 
class="s2_166"
>Beautiful Soup:</text>

<text 
x="76" 
y="947" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0" 
class="s8_166"
># you don't have to split the url like this unless it needs to fit in a book</text>

<text 
x="76" 
y="962" 
class="s9_166"
>url</text>

<text 
x="108" 
y="962" 
class="s3_166"
>=</text>

<text 
x="124" 
y="962" 
class="s10_166"
>"http://shop.oreilly.com/category/browse-subjects/"</text>

<text 
x="535" 
y="962" 
dx="0,0,4.6" 
class="s3_166"
>+ \</text>

<text 
x="124" 
y="978" 
class="s10_166"
>"data.do?sortby=publicationDate&amp;page=1"</text>

<text 
x="76" 
y="993" 
class="s9_166"
>soup</text>

<text 
x="116" 
y="993" 
class="s3_166"
>=</text>

<text 
x="132" 
y="993" 
class="s9_166"
>BeautifulSoup</text>

<text 
x="235" 
y="993" 
class="s3_166"
>(</text>

<text 
x="242" 
y="993" 
class="s9_166"
>requests</text>

<text 
x="306" 
y="993" 
class="s3_166"
>.</text>

<text 
x="314" 
y="993" 
class="s9_166"
>get</text>

<text 
x="337" 
y="993" 
class="s3_166"
>(</text>

<text 
x="345" 
y="993" 
class="s9_166"
>url</text>

<text 
x="369" 
y="993" 
class="s3_166"
>).</text>

<text 
x="385" 
y="993" 
class="s9_166"
>text</text>

<text 
x="416" 
y="993" 
class="s3_166"
>,</text>

<text 
x="432" 
y="993" 
class="s10_166"
>'html5lib'</text>

<text 
x="511" 
y="993" 
class="s3_166"
>)</text>

<text 
x="55" 
y="1046" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.3,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>If you view the source of the page (in your browser, right-click and select “View source”</text>

<text 
x="55" 
y="1073" 
dx="0,0,0,0,0,-1.3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>or “View page source” or whatever option looks the most like that), you’ll see that each</text>

<text 
x="55" 
y="1101" 
class="s2_166"
>book (or video) seems to be uniquely contained in a</text>

<text 
x="516" 
y="1101" 
class="s11_166"
>&lt;td&gt;</text>

<text 
x="564" 
y="1101" 
class="s2_166"
>table cell element whose</text>

<text 
x="786" 
y="1101" 
class="s11_166"
>class</text>

<text 
x="55" 
y="1131" 
class="s2_166"
>is</text>

<text 
x="75" 
y="1131" 
class="s11_166"
>thumbtext</text>

<text 
x="170" 
y="1131" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_166"
>. Here is (an abridged version of) the relevant HTML for one book:</text>

<text 
x="76" 
y="1178" 
class="s12_166"
>&lt;td</text>

<text 
x="108" 
y="1178" 
class="s13_166"
>class=</text>

<text 
x="156" 
y="1178" 
class="s10_166"
>"thumbtext"</text>

<text 
x="242" 
y="1178" 
class="s12_166"
>&gt;</text>

<text 
x="92" 
y="1193" 
class="s12_166"
>&lt;div</text>

<text 
x="132" 
y="1193" 
class="s13_166"
>class=</text>

<text 
x="179" 
y="1193" 
class="s10_166"
>"thumbcontainer"</text>

<text 
x="306" 
y="1193" 
class="s12_166"
>&gt;</text>

<text 
x="108" 
y="1209" 
class="s12_166"
>&lt;div</text>

<text 
x="148" 
y="1209" 
class="s13_166"
>class=</text>

<text 
x="195" 
y="1209" 
class="s10_166"
>"thumbdiv"</text>

<text 
x="274" 
y="1209" 
class="s12_166"
>&gt;</text>

<text 
x="124" 
y="1224" 
class="s12_166"
>&lt;a</text>

<text 
x="148" 
y="1224" 
class="s13_166"
>href=</text>

<text 
x="187" 
y="1224" 
class="s10_166"
>"/product/9781118903407.do"</text>

<text 
x="401" 
y="1224" 
class="s12_166"
>&gt;</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
