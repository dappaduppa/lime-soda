<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 259 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_259{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_259{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_259{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_259{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_259{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s6_259{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_259{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s8_259{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s9_259{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s10_259{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s11_259{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_259"
>Fitting the Model</text>

<text 
x="55" 
y="122" 
class="s2_259"
>As we did in the simple linear model, we’ll choose</text>

<text 
x="507" 
y="122" 
class="s3_259"
>beta</text>

<text 
x="555" 
y="122" 
class="s2_259"
>to minimize the sum of squared</text>

<text 
x="55" 
y="151" 
class="s2_259"
>errors. Finding an exact solution is not simple to do by hand, which means we’ll need to</text>

<text 
x="55" 
y="179" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_259"
>use gradient descent. We’ll start by creating an error function to minimize. For stochastic</text>

<text 
x="55" 
y="206" 
class="s2_259"
>gradient descent, we’ll just want the squared error corresponding to a single prediction:</text>

<text 
x="76" 
y="251" 
class="s4_259"
>def</text>

<text 
x="108" 
y="251" 
class="s5_259"
>error</text>

<text 
x="148" 
y="251" 
class="s6_259"
>(</text>

<text 
x="156" 
y="251" 
class="s7_259"
>x_i</text>

<text 
x="179" 
y="251" 
class="s6_259"
>,</text>

<text 
x="195" 
y="251" 
class="s7_259"
>y_i</text>

<text 
x="219" 
y="251" 
class="s6_259"
>,</text>

<text 
x="235" 
y="251" 
class="s7_259"
>beta</text>

<text 
x="266" 
y="251" 
class="s6_259"
>):</text>

<text 
x="108" 
y="267" 
class="s4_259"
>return</text>

<text 
x="163" 
y="267" 
class="s7_259"
>y_i</text>

<text 
x="195" 
y="267" 
class="s6_259"
>-</text>

<text 
x="211" 
y="267" 
class="s7_259"
>predict</text>

<text 
x="266" 
y="267" 
class="s6_259"
>(</text>

<text 
x="274" 
y="267" 
class="s7_259"
>x_i</text>

<text 
x="298" 
y="267" 
class="s6_259"
>,</text>

<text 
x="314" 
y="267" 
class="s7_259"
>beta</text>

<text 
x="345" 
y="267" 
class="s6_259"
>)</text>

<text 
x="76" 
y="298" 
class="s4_259"
>def</text>

<text 
x="108" 
y="298" 
class="s5_259"
>squared_error</text>

<text 
x="211" 
y="298" 
class="s6_259"
>(</text>

<text 
x="219" 
y="298" 
class="s7_259"
>x_i</text>

<text 
x="242" 
y="298" 
class="s6_259"
>,</text>

<text 
x="258" 
y="298" 
class="s7_259"
>y_i</text>

<text 
x="282" 
y="298" 
class="s6_259"
>,</text>

<text 
x="298" 
y="298" 
class="s7_259"
>beta</text>

<text 
x="329" 
y="298" 
class="s6_259"
>):</text>

<text 
x="108" 
y="313" 
class="s4_259"
>return</text>

<text 
x="163" 
y="313" 
class="s7_259"
>error</text>

<text 
x="203" 
y="313" 
class="s6_259"
>(</text>

<text 
x="211" 
y="313" 
class="s7_259"
>x_i</text>

<text 
x="235" 
y="313" 
class="s6_259"
>,</text>

<text 
x="250" 
y="313" 
class="s7_259"
>y_i</text>

<text 
x="274" 
y="313" 
class="s6_259"
>,</text>

<text 
x="290" 
y="313" 
class="s7_259"
>beta</text>

<text 
x="322" 
y="313" 
dx="0,0,4.6,0" 
class="s6_259"
>) **</text>

<text 
x="361" 
y="313" 
class="s8_259"
>2</text>

<text 
x="55" 
y="366" 
class="s2_259"
>If you know calculus, you can compute:</text>

<text 
x="76" 
y="411" 
class="s4_259"
>def</text>

<text 
x="108" 
y="411" 
class="s5_259"
>squared_error_gradient</text>

<text 
x="282" 
y="411" 
class="s6_259"
>(</text>

<text 
x="290" 
y="411" 
class="s7_259"
>x_i</text>

<text 
x="314" 
y="411" 
class="s6_259"
>,</text>

<text 
x="329" 
y="411" 
class="s7_259"
>y_i</text>

<text 
x="353" 
y="411" 
class="s6_259"
>,</text>

<text 
x="369" 
y="411" 
class="s7_259"
>beta</text>

<text 
x="401" 
y="411" 
class="s6_259"
>):</text>

<text 
x="108" 
y="426" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0" 
class="s9_259"
>"""the gradient (with respect to beta)</text>

<text 
x="108" 
y="442" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s9_259"
>corresponding to the ith squared error term"""</text>

<text 
x="108" 
y="457" 
class="s4_259"
>return</text>

<text 
x="163" 
y="457" 
class="s6_259"
>[-</text>

<text 
x="179" 
y="457" 
class="s8_259"
>2</text>

<text 
x="195" 
y="457" 
class="s6_259"
>*</text>

<text 
x="211" 
y="457" 
class="s7_259"
>x_ij</text>

<text 
x="250" 
y="457" 
class="s6_259"
>*</text>

<text 
x="266" 
y="457" 
class="s7_259"
>error</text>

<text 
x="306" 
y="457" 
class="s6_259"
>(</text>

<text 
x="314" 
y="457" 
class="s7_259"
>x_i</text>

<text 
x="337" 
y="457" 
class="s6_259"
>,</text>

<text 
x="353" 
y="457" 
class="s7_259"
>y_i</text>

<text 
x="377" 
y="457" 
class="s6_259"
>,</text>

<text 
x="393" 
y="457" 
class="s7_259"
>beta</text>

<text 
x="424" 
y="457" 
class="s6_259"
>)</text>

<text 
x="171" 
y="473" 
class="s4_259"
>for</text>

<text 
x="203" 
y="473" 
class="s7_259"
>x_ij</text>

<text 
x="242" 
y="473" 
class="s10_259"
>in</text>

<text 
x="266" 
y="473" 
class="s7_259"
>x_i</text>

<text 
x="290" 
y="473" 
class="s6_259"
>]</text>

<text 
x="55" 
y="525" 
class="s2_259"
>Otherwise, you’ll need to take my word for it.</text>

<text 
x="55" 
y="564" 
class="s2_259"
>At this point, we’re ready to find the optimal beta using stochastic gradient descent:</text>

<text 
x="76" 
y="609" 
class="s4_259"
>def</text>

<text 
x="108" 
y="609" 
class="s5_259"
>estimate_beta</text>

<text 
x="211" 
y="609" 
class="s6_259"
>(</text>

<text 
x="219" 
y="609" 
class="s7_259"
>x</text>

<text 
x="227" 
y="609" 
class="s6_259"
>,</text>

<text 
x="242" 
y="609" 
class="s7_259"
>y</text>

<text 
x="250" 
y="609" 
class="s6_259"
>):</text>

<text 
x="108" 
y="624" 
class="s7_259"
>beta_initial</text>

<text 
x="211" 
y="624" 
dx="0,0,4.6" 
class="s6_259"
>= [</text>

<text 
x="235" 
y="624" 
class="s7_259"
>random</text>

<text 
x="282" 
y="624" 
class="s6_259"
>.</text>

<text 
x="290" 
y="624" 
class="s7_259"
>random</text>

<text 
x="337" 
y="624" 
class="s6_259"
>()</text>

<text 
x="361" 
y="624" 
class="s4_259"
>for</text>

<text 
x="393" 
y="624" 
class="s7_259"
>x_i</text>

<text 
x="424" 
y="624" 
class="s10_259"
>in</text>

<text 
x="448" 
y="624" 
class="s7_259"
>x</text>

<text 
x="456" 
y="624" 
class="s6_259"
>[</text>

<text 
x="464" 
y="624" 
class="s8_259"
>0</text>

<text 
x="472" 
y="624" 
class="s6_259"
>]]</text>

<text 
x="108" 
y="640" 
class="s4_259"
>return</text>

<text 
x="163" 
y="640" 
class="s7_259"
>minimize_stochastic</text>

<text 
x="314" 
y="640" 
class="s6_259"
>(</text>

<text 
x="322" 
y="640" 
class="s7_259"
>squared_error</text>

<text 
x="424" 
y="640" 
class="s6_259"
>,</text>

<text 
x="322" 
y="655" 
class="s7_259"
>squared_error_gradient</text>

<text 
x="495" 
y="655" 
class="s6_259"
>,</text>

<text 
x="322" 
y="671" 
class="s7_259"
>x</text>

<text 
x="329" 
y="671" 
class="s6_259"
>,</text>

<text 
x="345" 
y="671" 
class="s7_259"
>y</text>

<text 
x="353" 
y="671" 
class="s6_259"
>,</text>

<text 
x="322" 
y="686" 
class="s7_259"
>beta_initial</text>

<text 
x="416" 
y="686" 
class="s6_259"
>,</text>

<text 
x="322" 
y="701" 
class="s8_259"
>0.001</text>

<text 
x="361" 
y="701" 
class="s6_259"
>)</text>

<text 
x="76" 
y="732" 
class="s7_259"
>random</text>

<text 
x="124" 
y="732" 
class="s6_259"
>.</text>

<text 
x="132" 
y="732" 
class="s7_259"
>seed</text>

<text 
x="163" 
y="732" 
class="s6_259"
>(</text>

<text 
x="171" 
y="732" 
class="s8_259"
>0</text>

<text 
x="179" 
y="732" 
class="s6_259"
>)</text>

<text 
x="76" 
y="748" 
class="s7_259"
>beta</text>

<text 
x="116" 
y="748" 
class="s6_259"
>=</text>

<text 
x="132" 
y="748" 
class="s7_259"
>estimate_beta</text>

<text 
x="235" 
y="748" 
class="s6_259"
>(</text>

<text 
x="242" 
y="748" 
class="s7_259"
>x</text>

<text 
x="250" 
y="748" 
class="s6_259"
>,</text>

<text 
x="266" 
y="748" 
class="s7_259"
>daily_minutes_good</text>

<text 
x="408" 
y="748" 
class="s6_259"
>)</text>

<text 
x="424" 
y="748" 
dx="0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s11_259"
># [30.63, 0.972, -1.868, 0.911]</text>

<text 
x="55" 
y="800" 
class="s2_259"
>This means our model looks like:</text>

<image preserveAspectRatio="none" x="55" y="819" width="799" height="27" xlink:href="259/img/1.png" />


<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
