<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 379 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_379{
stroke: #000000;
stroke-width: 1.0996486;
stroke-linecap: square;
stroke-linejoin: miter;
}

.s1_379{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_379{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_379{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s4_379{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_379{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_379{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s7_379{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s8_379{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s9_379{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s10_379{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s11_379{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s12_379{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
dx="0,0,0,0,-2.3,0" 
class="s1_379"
>UPDATE</text>

<text 
x="55" 
y="122" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_379"
>Sometimes you need to update the data that’s already in the database. For instance, if</text>

<text 
x="55" 
y="149" 
class="s2_379"
>Dunn acquires another friend, you might need to do this:</text>

<text 
x="76" 
y="194" 
class="s3_379"
>UPDATE</text>

<text 
x="132" 
y="194" 
class="s4_379"
>users</text>

<text 
x="76" 
y="210" 
class="s3_379"
>SET</text>

<text 
x="108" 
y="210" 
class="s4_379"
>num_friends</text>

<text 
x="203" 
y="210" 
class="s5_379"
>=</text>

<text 
x="219" 
y="210" 
class="s6_379"
>3</text>

<text 
x="76" 
y="225" 
class="s3_379"
>WHERE</text>

<text 
x="124" 
y="225" 
class="s4_379"
>user_id</text>

<text 
x="187" 
y="225" 
class="s5_379"
>=</text>

<text 
x="203" 
y="225" 
class="s6_379"
>1</text>

<text 
x="211" 
y="225" 
class="s5_379"
>;</text>

<text 
x="55" 
y="278" 
class="s2_379"
>The key features are:</text>

<path d="M61.6,305.9l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_379" />
<text 
x="82" 
y="315" 
class="s2_379"
>What table to update</text>

<path d="M61.6,353.2l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_379" />
<text 
x="82" 
y="363" 
class="s2_379"
>Which rows to update</text>

<path d="M61.6,400.5l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_379" />
<text 
x="82" 
y="410" 
class="s2_379"
>Which fields to update</text>

<path d="M61.6,447.8l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_379" />
<text 
x="82" 
y="457" 
class="s2_379"
>What their new values should be</text>

<text 
x="55" 
y="506" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_379"
>We’ll add a similar</text>

<text 
x="227" 
y="506" 
class="s7_379"
>update</text>

<text 
x="296" 
y="506" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_379"
>method to NotQuiteABase. Its first argument will be a</text>

<text 
x="779" 
y="506" 
class="s7_379"
>dict</text>

<text 
x="55" 
y="535" 
class="s2_379"
>whose keys are the columns to update and whose values are the new values for those</text>

<text 
x="55" 
y="563" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0" 
class="s2_379"
>fields. And its second argument is a</text>

<text 
x="374" 
y="563" 
class="s7_379"
>predicate</text>

<text 
x="474" 
y="563" 
class="s2_379"
>that returns</text>

<text 
x="579" 
y="563" 
class="s7_379"
>True</text>

<text 
x="627" 
y="563" 
class="s2_379"
>for rows that should be</text>

<text 
x="55" 
y="593" 
class="s2_379"
>updated,</text>

<text 
x="135" 
y="593" 
class="s7_379"
>False</text>

<text 
x="193" 
y="593" 
class="s2_379"
>otherwise:</text>

<text 
x="108" 
y="640" 
class="s3_379"
>def</text>

<text 
x="140" 
y="640" 
class="s8_379"
>update</text>

<text 
x="187" 
y="640" 
class="s5_379"
>(</text>

<text 
x="195" 
y="640" 
class="s9_379"
>self</text>

<text 
x="227" 
y="640" 
class="s5_379"
>,</text>

<text 
x="242" 
y="640" 
class="s4_379"
>updates</text>

<text 
x="298" 
y="640" 
class="s5_379"
>,</text>

<text 
x="314" 
y="640" 
class="s4_379"
>predicate</text>

<text 
x="385" 
y="640" 
class="s5_379"
>):</text>

<text 
x="140" 
y="655" 
class="s3_379"
>for</text>

<text 
x="171" 
y="655" 
class="s4_379"
>row</text>

<text 
x="203" 
y="655" 
class="s10_379"
>in</text>

<text 
x="227" 
y="655" 
class="s9_379"
>self</text>

<text 
x="258" 
y="655" 
class="s5_379"
>.</text>

<text 
x="266" 
y="655" 
class="s4_379"
>rows</text>

<text 
x="298" 
y="655" 
class="s5_379"
>:</text>

<text 
x="171" 
y="671" 
class="s3_379"
>if</text>

<text 
x="195" 
y="671" 
class="s4_379"
>predicate</text>

<text 
x="266" 
y="671" 
class="s5_379"
>(</text>

<text 
x="274" 
y="671" 
class="s4_379"
>row</text>

<text 
x="298" 
y="671" 
class="s5_379"
>):</text>

<text 
x="203" 
y="686" 
class="s3_379"
>for</text>

<text 
x="235" 
y="686" 
class="s4_379"
>column</text>

<text 
x="282" 
y="686" 
class="s5_379"
>,</text>

<text 
x="298" 
y="686" 
class="s4_379"
>new_value</text>

<text 
x="377" 
y="686" 
class="s10_379"
>in</text>

<text 
x="401" 
y="686" 
class="s4_379"
>updates</text>

<text 
x="456" 
y="686" 
class="s5_379"
>.</text>

<text 
x="464" 
y="686" 
class="s4_379"
>iteritems</text>

<text 
x="535" 
y="686" 
class="s5_379"
>():</text>

<text 
x="235" 
y="701" 
class="s4_379"
>row</text>

<text 
x="258" 
y="701" 
class="s5_379"
>[</text>

<text 
x="266" 
y="701" 
class="s4_379"
>column</text>

<text 
x="314" 
y="701" 
dx="0,0,4.6" 
class="s5_379"
>] =</text>

<text 
x="345" 
y="701" 
class="s4_379"
>new_value</text>

<text 
x="55" 
y="754" 
class="s2_379"
>after which we can simply do this:</text>

<text 
x="76" 
y="799" 
class="s4_379"
>users</text>

<text 
x="116" 
y="799" 
class="s5_379"
>.</text>

<text 
x="124" 
y="799" 
class="s4_379"
>update</text>

<text 
x="171" 
y="799" 
class="s5_379"
>({</text>

<text 
x="187" 
y="799" 
class="s11_379"
>'num_friends'</text>

<text 
x="298" 
y="799" 
class="s5_379"
>:</text>

<text 
x="314" 
y="799" 
class="s6_379"
>3</text>

<text 
x="322" 
y="799" 
class="s5_379"
>},</text>

<text 
x="456" 
y="799" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,4.6" 
class="s12_379"
># set num_friends = 3</text>

<text 
x="179" 
y="815" 
class="s3_379"
>lambda</text>

<text 
x="235" 
y="815" 
class="s4_379"
>row</text>

<text 
x="258" 
y="815" 
class="s5_379"
>:</text>

<text 
x="274" 
y="815" 
class="s4_379"
>row</text>

<text 
x="298" 
y="815" 
class="s5_379"
>[</text>

<text 
x="306" 
y="815" 
class="s11_379"
>'user_id'</text>

<text 
x="377" 
y="815" 
dx="0,0,4.6,0" 
class="s5_379"
>] ==</text>

<text 
x="416" 
y="815" 
class="s6_379"
>1</text>

<text 
x="424" 
y="815" 
class="s5_379"
>)</text>

<text 
x="456" 
y="815" 
dx="0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6" 
class="s12_379"
># in rows where user_id == 1</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
