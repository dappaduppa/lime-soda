<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 381 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_381{
stroke: #000000;
stroke-width: 1.0996486;
stroke-linecap: square;
stroke-linejoin: miter;
}

.s1_381{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_381{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_381{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_381{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_381{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_381{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_381{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #35586C;
}
.s8_381{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s9_381{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s10_381{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s11_381{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s12_381{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s13_381{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s14_381{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_381"
>SELECT</text>

<text 
x="55" 
y="122" 
dx="0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_381"
>Typically you don’t inspect SQL tables directly. Instead you query them with a</text>

<text 
x="752" 
y="122" 
class="s3_381"
>SELECT</text>

<text 
x="55" 
y="151" 
class="s2_381"
>statement:</text>

<text 
x="76" 
y="196" 
class="s4_381"
>SELECT</text>

<text 
x="132" 
y="196" 
class="s5_381"
>*</text>

<text 
x="148" 
y="196" 
class="s4_381"
>FROM</text>

<text 
x="187" 
y="196" 
class="s6_381"
>users</text>

<text 
x="227" 
y="196" 
class="s5_381"
>;</text>

<text 
x="456" 
y="196" 
dx="0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s7_381"
>-- get the entire contents</text>

<text 
x="76" 
y="212" 
class="s4_381"
>SELECT</text>

<text 
x="132" 
y="212" 
class="s5_381"
>*</text>

<text 
x="148" 
y="212" 
class="s4_381"
>FROM</text>

<text 
x="187" 
y="212" 
class="s6_381"
>users</text>

<text 
x="235" 
y="212" 
class="s4_381"
>LIMIT</text>

<text 
x="282" 
y="212" 
class="s8_381"
>2</text>

<text 
x="290" 
y="212" 
class="s5_381"
>;</text>

<text 
x="456" 
y="212" 
dx="0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s7_381"
>-- get the first two rows</text>

<text 
x="76" 
y="227" 
class="s4_381"
>SELECT</text>

<text 
x="132" 
y="227" 
class="s6_381"
>user_id</text>

<text 
x="195" 
y="227" 
class="s4_381"
>FROM</text>

<text 
x="235" 
y="227" 
class="s6_381"
>users</text>

<text 
x="274" 
y="227" 
class="s5_381"
>;</text>

<text 
x="456" 
y="227" 
dx="0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_381"
>-- only get specific columns</text>

<text 
x="76" 
y="243" 
class="s4_381"
>SELECT</text>

<text 
x="132" 
y="243" 
class="s6_381"
>user_id</text>

<text 
x="195" 
y="243" 
class="s4_381"
>FROM</text>

<text 
x="235" 
y="243" 
class="s6_381"
>users</text>

<text 
x="282" 
y="243" 
class="s4_381"
>WHERE</text>

<text 
x="329" 
y="243" 
class="s6_381"
>name</text>

<text 
x="369" 
y="243" 
class="s5_381"
>=</text>

<text 
x="385" 
y="243" 
class="s9_381"
>'Dunn'</text>

<text 
x="432" 
y="243" 
class="s5_381"
>;</text>

<text 
x="456" 
y="243" 
dx="0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0" 
class="s7_381"
>-- only get specific rows</text>

<text 
x="55" 
y="295" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_381"
>You can also use</text>

<text 
x="207" 
y="295" 
class="s3_381"
>SELECT</text>

<text 
x="276" 
y="295" 
class="s2_381"
>statements to calculate fields:</text>

<text 
x="76" 
y="343" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_381"
>SELECT LENGTH</text>

<text 
x="179" 
y="343" 
class="s5_381"
>(</text>

<text 
x="187" 
y="343" 
class="s6_381"
>name</text>

<text 
x="219" 
y="343" 
class="s5_381"
>)</text>

<text 
x="235" 
y="343" 
class="s4_381"
>AS</text>

<text 
x="258" 
y="343" 
class="s6_381"
>name_length</text>

<text 
x="353" 
y="343" 
class="s4_381"
>FROM</text>

<text 
x="393" 
y="343" 
class="s6_381"
>users</text>

<text 
x="432" 
y="343" 
class="s5_381"
>;</text>

<text 
x="55" 
y="396" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_381"
>We’ll give our</text>

<text 
x="186" 
y="396" 
class="s3_381"
>Table</text>

<text 
x="245" 
y="396" 
class="s2_381"
>class a</text>

<text 
x="308" 
y="396" 
class="s3_381"
>select()</text>

<text 
x="398" 
y="396" 
class="s2_381"
>method that returns a new</text>

<text 
x="632" 
y="396" 
class="s3_381"
>Table</text>

<text 
x="685" 
y="396" 
class="s2_381"
>. The method</text>

<text 
x="55" 
y="425" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0" 
class="s2_381"
>accepts two optional arguments:</text>

<path d="M61.6,453.3l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_381" />
<text 
x="82" 
y="463" 
class="s3_381"
>keep_columns</text>

<text 
x="214" 
y="463" 
class="s2_381"
>specifies the name of the columns you want to keep in the result. If you</text>

<text 
x="82" 
y="488" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_381"
>don’t supply it, the result contains all the columns.</text>

<path d="M61.6,525.9l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_381" />
<text 
x="82" 
y="535" 
class="s3_381"
>additional_columns</text>

<text 
x="277" 
y="535" 
class="s2_381"
>is a dictionary whose keys are new column names and whose</text>

<text 
x="82" 
y="561" 
class="s2_381"
>values are functions specifying how to compute the values of the new columns.</text>

<text 
x="55" 
y="609" 
class="s2_381"
>If you were to supply neither of them, you’d simply get back a copy of the table:</text>

<text 
x="108" 
y="654" 
class="s4_381"
>def</text>

<text 
x="140" 
y="654" 
class="s10_381"
>select</text>

<text 
x="187" 
y="654" 
class="s5_381"
>(</text>

<text 
x="195" 
y="654" 
class="s11_381"
>self</text>

<text 
x="227" 
y="654" 
class="s5_381"
>,</text>

<text 
x="242" 
y="654" 
class="s6_381"
>keep_columns</text>

<text 
x="337" 
y="654" 
class="s5_381"
>=</text>

<text 
x="345" 
y="654" 
class="s11_381"
>None</text>

<text 
x="377" 
y="654" 
class="s5_381"
>,</text>

<text 
x="393" 
y="654" 
class="s6_381"
>additional_columns</text>

<text 
x="535" 
y="654" 
class="s5_381"
>=</text>

<text 
x="543" 
y="654" 
class="s11_381"
>None</text>

<text 
x="574" 
y="654" 
class="s5_381"
>):</text>

<text 
x="140" 
y="685" 
class="s4_381"
>if</text>

<text 
x="163" 
y="685" 
class="s6_381"
>keep_columns</text>

<text 
x="266" 
y="685" 
class="s12_381"
>is</text>

<text 
x="290" 
y="685" 
class="s11_381"
>None</text>

<text 
x="322" 
y="685" 
class="s5_381"
>:</text>

<text 
x="401" 
y="685" 
dx="0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s13_381"
># if no columns specified,</text>

<text 
x="171" 
y="700" 
class="s6_381"
>keep_columns</text>

<text 
x="274" 
y="700" 
class="s5_381"
>=</text>

<text 
x="290" 
y="700" 
class="s11_381"
>self</text>

<text 
x="322" 
y="700" 
class="s5_381"
>.</text>

<text 
x="329" 
y="700" 
class="s6_381"
>columns</text>

<text 
x="401" 
y="700" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0" 
class="s13_381"
># return all columns</text>

<text 
x="140" 
y="731" 
class="s4_381"
>if</text>

<text 
x="163" 
y="731" 
class="s6_381"
>additional_columns</text>

<text 
x="314" 
y="731" 
class="s12_381"
>is</text>

<text 
x="337" 
y="731" 
class="s11_381"
>None</text>

<text 
x="369" 
y="731" 
class="s5_381"
>:</text>

<text 
x="171" 
y="747" 
class="s6_381"
>additional_columns</text>

<text 
x="322" 
y="747" 
dx="0,0,4.6,0" 
class="s5_381"
>= {}</text>

<text 
x="140" 
y="777" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0" 
class="s13_381"
># new table for results</text>

<text 
x="140" 
y="793" 
class="s6_381"
>result_table</text>

<text 
x="242" 
y="793" 
class="s5_381"
>=</text>

<text 
x="258" 
y="793" 
class="s6_381"
>Table</text>

<text 
x="298" 
y="793" 
class="s5_381"
>(</text>

<text 
x="306" 
y="793" 
class="s6_381"
>keep_columns</text>

<text 
x="408" 
y="793" 
class="s5_381"
>+</text>

<text 
x="424" 
y="793" 
class="s6_381"
>additional_columns</text>

<text 
x="567" 
y="793" 
class="s5_381"
>.</text>

<text 
x="574" 
y="793" 
class="s6_381"
>keys</text>

<text 
x="606" 
y="793" 
class="s5_381"
>())</text>

<text 
x="140" 
y="824" 
class="s4_381"
>for</text>

<text 
x="171" 
y="824" 
class="s6_381"
>row</text>

<text 
x="203" 
y="824" 
class="s12_381"
>in</text>

<text 
x="227" 
y="824" 
class="s11_381"
>self</text>

<text 
x="258" 
y="824" 
class="s5_381"
>.</text>

<text 
x="266" 
y="824" 
class="s6_381"
>rows</text>

<text 
x="298" 
y="824" 
class="s5_381"
>:</text>

<text 
x="171" 
y="839" 
class="s6_381"
>new_row</text>

<text 
x="235" 
y="839" 
dx="0,0,4.6" 
class="s5_381"
>= [</text>

<text 
x="258" 
y="839" 
class="s6_381"
>row</text>

<text 
x="282" 
y="839" 
class="s5_381"
>[</text>

<text 
x="290" 
y="839" 
class="s6_381"
>column</text>

<text 
x="337" 
y="839" 
class="s5_381"
>]</text>

<text 
x="353" 
y="839" 
class="s4_381"
>for</text>

<text 
x="385" 
y="839" 
class="s6_381"
>column</text>

<text 
x="440" 
y="839" 
class="s12_381"
>in</text>

<text 
x="464" 
y="839" 
class="s6_381"
>keep_columns</text>

<text 
x="559" 
y="839" 
class="s5_381"
>]</text>

<text 
x="171" 
y="854" 
class="s4_381"
>for</text>

<text 
x="203" 
y="854" 
class="s6_381"
>column_name</text>

<text 
x="290" 
y="854" 
class="s5_381"
>,</text>

<text 
x="306" 
y="854" 
class="s6_381"
>calculation</text>

<text 
x="401" 
y="854" 
class="s12_381"
>in</text>

<text 
x="424" 
y="854" 
class="s6_381"
>additional_columns</text>

<text 
x="567" 
y="854" 
class="s5_381"
>.</text>

<text 
x="574" 
y="854" 
class="s6_381"
>iteritems</text>

<text 
x="646" 
y="854" 
class="s5_381"
>():</text>

<text 
x="203" 
y="870" 
class="s6_381"
>new_row</text>

<text 
x="258" 
y="870" 
class="s5_381"
>.</text>

<text 
x="266" 
y="870" 
class="s6_381"
>append</text>

<text 
x="314" 
y="870" 
class="s5_381"
>(</text>

<text 
x="322" 
y="870" 
class="s6_381"
>calculation</text>

<text 
x="408" 
y="870" 
class="s5_381"
>(</text>

<text 
x="416" 
y="870" 
class="s6_381"
>row</text>

<text 
x="440" 
y="870" 
class="s5_381"
>))</text>

<text 
x="171" 
y="885" 
class="s6_381"
>result_table</text>

<text 
x="266" 
y="885" 
class="s5_381"
>.</text>

<text 
x="274" 
y="885" 
class="s6_381"
>insert</text>

<text 
x="322" 
y="885" 
class="s5_381"
>(</text>

<text 
x="329" 
y="885" 
class="s6_381"
>new_row</text>

<text 
x="385" 
y="885" 
class="s5_381"
>)</text>

<text 
x="140" 
y="916" 
class="s4_381"
>return</text>

<text 
x="195" 
y="916" 
class="s6_381"
>result_table</text>

<text 
x="55" 
y="969" 
class="s2_381"
>Our</text>

<text 
x="94" 
y="969" 
class="s3_381"
>select()</text>

<text 
x="184" 
y="969" 
class="s2_381"
>returns a new</text>

<text 
x="308" 
y="969" 
class="s3_381"
>Table</text>

<text 
x="361" 
y="969" 
class="s2_381"
>, while the typical SQL</text>

<text 
x="571" 
y="969" 
class="s3_381"
>SELECT</text>

<text 
x="640" 
y="969" 
class="s2_381"
>just produces some sort</text>

<text 
x="55" 
y="999" 
class="s2_381"
>of transient result set (unless you explicitly insert the results into a table).</text>

<text 
x="55" 
y="1037" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_381"
>We’ll also need</text>

<text 
x="196" 
y="1037" 
class="s3_381"
>where()</text>

<text 
x="276" 
y="1037" 
class="s2_381"
>and</text>

<text 
x="313" 
y="1037" 
class="s3_381"
>limit()</text>

<text 
x="392" 
y="1037" 
class="s2_381"
>methods. Both are pretty simple:</text>

<text 
x="108" 
y="1084" 
class="s4_381"
>def</text>

<text 
x="140" 
y="1084" 
class="s10_381"
>where</text>

<text 
x="179" 
y="1084" 
class="s5_381"
>(</text>

<text 
x="187" 
y="1084" 
class="s11_381"
>self</text>

<text 
x="219" 
y="1084" 
class="s5_381"
>,</text>

<text 
x="235" 
y="1084" 
class="s6_381"
>predicate</text>

<text 
x="306" 
y="1084" 
class="s5_381"
>=</text>

<text 
x="314" 
y="1084" 
class="s4_381"
>lambda</text>

<text 
x="369" 
y="1084" 
class="s6_381"
>row</text>

<text 
x="393" 
y="1084" 
class="s5_381"
>:</text>

<text 
x="408" 
y="1084" 
class="s11_381"
>True</text>

<text 
x="440" 
y="1084" 
class="s5_381"
>):</text>

<text 
x="140" 
y="1100" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0" 
class="s14_381"
>"""return only the rows that satisfy the supplied predicate"""</text>

<text 
x="140" 
y="1115" 
class="s6_381"
>where_table</text>

<text 
x="235" 
y="1115" 
class="s5_381"
>=</text>

<text 
x="250" 
y="1115" 
class="s6_381"
>Table</text>

<text 
x="290" 
y="1115" 
class="s5_381"
>(</text>

<text 
x="298" 
y="1115" 
class="s11_381"
>self</text>

<text 
x="329" 
y="1115" 
class="s5_381"
>.</text>

<text 
x="337" 
y="1115" 
class="s6_381"
>columns</text>

<text 
x="393" 
y="1115" 
class="s5_381"
>)</text>

<text 
x="140" 
y="1131" 
class="s6_381"
>where_table</text>

<text 
x="227" 
y="1131" 
class="s5_381"
>.</text>

<text 
x="235" 
y="1131" 
class="s6_381"
>rows</text>

<text 
x="274" 
y="1131" 
class="s5_381"
>=</text>

<text 
x="290" 
y="1131" 
class="s11_381"
>filter</text>

<text 
x="337" 
y="1131" 
class="s5_381"
>(</text>

<text 
x="345" 
y="1131" 
class="s6_381"
>predicate</text>

<text 
x="416" 
y="1131" 
class="s5_381"
>,</text>

<text 
x="432" 
y="1131" 
class="s11_381"
>self</text>

<text 
x="464" 
y="1131" 
class="s5_381"
>.</text>

<text 
x="472" 
y="1131" 
class="s6_381"
>rows</text>

<text 
x="503" 
y="1131" 
class="s5_381"
>)</text>

<text 
x="140" 
y="1146" 
class="s4_381"
>return</text>

<text 
x="195" 
y="1146" 
class="s6_381"
>where_table</text>

<text 
x="108" 
y="1177" 
class="s4_381"
>def</text>

<text 
x="140" 
y="1177" 
class="s10_381"
>limit</text>

<text 
x="179" 
y="1177" 
class="s5_381"
>(</text>

<text 
x="187" 
y="1177" 
class="s11_381"
>self</text>

<text 
x="219" 
y="1177" 
class="s5_381"
>,</text>

<text 
x="235" 
y="1177" 
class="s6_381"
>num_rows</text>

<text 
x="298" 
y="1177" 
class="s5_381"
>):</text>

<text 
x="140" 
y="1192" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s14_381"
>"""return only the first num_rows rows"""</text>

<text 
x="140" 
y="1208" 
class="s6_381"
>limit_table</text>

<text 
x="235" 
y="1208" 
class="s5_381"
>=</text>

<text 
x="250" 
y="1208" 
class="s6_381"
>Table</text>

<text 
x="290" 
y="1208" 
class="s5_381"
>(</text>

<text 
x="298" 
y="1208" 
class="s11_381"
>self</text>

<text 
x="329" 
y="1208" 
class="s5_381"
>.</text>

<text 
x="337" 
y="1208" 
class="s6_381"
>columns</text>

<text 
x="393" 
y="1208" 
class="s5_381"
>)</text>

<text 
x="140" 
y="1223" 
class="s6_381"
>limit_table</text>

<text 
x="227" 
y="1223" 
class="s5_381"
>.</text>

<text 
x="235" 
y="1223" 
class="s6_381"
>rows</text>

<text 
x="274" 
y="1223" 
class="s5_381"
>=</text>

<text 
x="290" 
y="1223" 
class="s11_381"
>self</text>

<text 
x="322" 
y="1223" 
class="s5_381"
>.</text>

<text 
x="329" 
y="1223" 
class="s6_381"
>rows</text>

<text 
x="361" 
y="1223" 
class="s5_381"
>[:</text>

<text 
x="377" 
y="1223" 
class="s6_381"
>num_rows</text>

<text 
x="440" 
y="1223" 
class="s5_381"
>]</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
