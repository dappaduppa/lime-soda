<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 370 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_370{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s2_370{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s3_370{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s4_370{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s5_370{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s6_370{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s7_370{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s8_370{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s9_370{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s10_370{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s11_370{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="74" 
class="s1_370"
>after which, we can create a matrix of user interests simply by</text>

<text 
x="606" 
y="74" 
class="s2_370"
>map</text>

<text 
x="637" 
y="74" 
class="s1_370"
>-ping this function</text>

<text 
x="55" 
y="104" 
class="s1_370"
>against the list of lists of interests:</text>

<text 
x="76" 
y="149" 
class="s3_370"
>user_interest_matrix</text>

<text 
x="242" 
y="149" 
class="s4_370"
>=</text>

<text 
x="258" 
y="149" 
class="s5_370"
>map</text>

<text 
x="282" 
y="149" 
class="s4_370"
>(</text>

<text 
x="290" 
y="149" 
class="s3_370"
>make_user_interest_vector</text>

<text 
x="487" 
y="149" 
class="s4_370"
>,</text>

<text 
x="503" 
y="149" 
class="s3_370"
>users_interests</text>

<text 
x="622" 
y="149" 
class="s4_370"
>)</text>

<text 
x="55" 
y="202" 
class="s1_370"
>Now</text>

<text 
x="103" 
y="202" 
class="s2_370"
>user_interest_matrix[i][j]</text>

<text 
x="383" 
y="202" 
class="s1_370"
>equals 1 if user</text>

<text 
x="522" 
y="202" 
class="s2_370"
>i</text>

<text 
x="538" 
y="202" 
class="s1_370"
>specified interest</text>

<text 
x="693" 
y="202" 
class="s2_370"
>j</text>

<text 
x="703" 
y="202" 
class="s1_370"
>, 0 otherwise.</text>

<text 
x="55" 
y="243" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_370"
>Because we have a small data set, it’s no problem to compute the pairwise similarities</text>

<text 
x="55" 
y="270" 
class="s1_370"
>between all of our users:</text>

<text 
x="76" 
y="315" 
class="s3_370"
>user_similarities</text>

<text 
x="219" 
y="315" 
dx="0,0,4.6,0" 
class="s4_370"
>= [[</text>

<text 
x="250" 
y="315" 
class="s3_370"
>cosine_similarity</text>

<text 
x="385" 
y="315" 
class="s4_370"
>(</text>

<text 
x="393" 
y="315" 
class="s3_370"
>interest_vector_i</text>

<text 
x="527" 
y="315" 
class="s4_370"
>,</text>

<text 
x="543" 
y="315" 
class="s3_370"
>interest_vector_j</text>

<text 
x="677" 
y="315" 
class="s4_370"
>)</text>

<text 
x="250" 
y="331" 
class="s6_370"
>for</text>

<text 
x="282" 
y="331" 
class="s3_370"
>interest_vector_j</text>

<text 
x="424" 
y="331" 
class="s7_370"
>in</text>

<text 
x="448" 
y="331" 
class="s3_370"
>user_interest_matrix</text>

<text 
x="606" 
y="331" 
class="s4_370"
>]</text>

<text 
x="242" 
y="346" 
class="s6_370"
>for</text>

<text 
x="274" 
y="346" 
class="s3_370"
>interest_vector_i</text>

<text 
x="416" 
y="346" 
class="s7_370"
>in</text>

<text 
x="440" 
y="346" 
class="s3_370"
>user_interest_matrix</text>

<text 
x="598" 
y="346" 
class="s4_370"
>]</text>

<text 
x="55" 
y="399" 
class="s1_370"
>after which,</text>

<text 
x="165" 
y="399" 
class="s2_370"
>user_similarities[i][j]</text>

<text 
x="413" 
y="399" 
class="s1_370"
>gives us the similarity between users</text>

<text 
x="742" 
y="399" 
class="s8_370"
>i</text>

<text 
x="753" 
y="399" 
class="s1_370"
>and</text>

<text 
x="790" 
y="399" 
class="s8_370"
>j</text>

<text 
x="797" 
y="399" 
class="s1_370"
>.</text>

<text 
x="55" 
y="440" 
class="s1_370"
>For instance,</text>

<text 
x="174" 
y="440" 
class="s2_370"
>user_similarities[0][9]</text>

<text 
x="422" 
y="440" 
class="s1_370"
>is 0.57, as those two users share interests in</text>

<text 
x="55" 
y="469" 
class="s1_370"
>Hadoop, Java, and Big Data. On the other hand,</text>

<text 
x="481" 
y="469" 
class="s2_370"
>user_similarities[0][8]</text>

<text 
x="729" 
y="469" 
class="s1_370"
>is only 0.19,</text>

<text 
x="55" 
y="499" 
class="s1_370"
>as users 0 and 8 share only one interest, Big Data.</text>

<text 
x="55" 
y="538" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9" 
class="s1_370"
>In particular,</text>

<text 
x="173" 
y="538" 
class="s2_370"
>user_similarities[i]</text>

<text 
x="389" 
y="538" 
class="s1_370"
>is the vector of user</text>

<text 
x="568" 
y="538" 
class="s8_370"
>i</text>

<text 
x="574" 
y="538" 
dx="0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_370"
>’s similarities to every other</text>

<text 
x="55" 
y="567" 
dx="0,0,0,0,-1.2,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2" 
class="s1_370"
>user. We can use this to write a function that finds the most similar users to a given user.</text>

<text 
x="55" 
y="595" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0" 
class="s1_370"
>We’ll make sure not to include the user herself, nor any users with zero similarity. And</text>

<text 
x="55" 
y="622" 
class="s1_370"
>we’ll sort the results from most similar to least similar:</text>

<text 
x="76" 
y="667" 
class="s6_370"
>def</text>

<text 
x="108" 
y="667" 
class="s9_370"
>most_similar_users_to</text>

<text 
x="274" 
y="667" 
class="s4_370"
>(</text>

<text 
x="282" 
y="667" 
class="s3_370"
>user_id</text>

<text 
x="337" 
y="667" 
class="s4_370"
>):</text>

<text 
x="108" 
y="683" 
class="s3_370"
>pairs</text>

<text 
x="156" 
y="683" 
dx="0,0,4.6,0" 
class="s4_370"
>= [(</text>

<text 
x="187" 
y="683" 
class="s3_370"
>other_user_id</text>

<text 
x="290" 
y="683" 
class="s4_370"
>,</text>

<text 
x="306" 
y="683" 
class="s3_370"
>similarity</text>

<text 
x="385" 
y="683" 
class="s4_370"
>)</text>

<text 
x="567" 
y="683" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0" 
class="s10_370"
># find other</text>

<text 
x="179" 
y="698" 
class="s6_370"
>for</text>

<text 
x="211" 
y="698" 
class="s3_370"
>other_user_id</text>

<text 
x="314" 
y="698" 
class="s4_370"
>,</text>

<text 
x="329" 
y="698" 
class="s3_370"
>similarity</text>

<text 
x="416" 
y="698" 
class="s7_370"
>in</text>

<text 
x="567" 
y="698" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0" 
class="s10_370"
># users with</text>

<text 
x="203" 
y="714" 
class="s5_370"
>enumerate</text>

<text 
x="274" 
y="714" 
class="s4_370"
>(</text>

<text 
x="282" 
y="714" 
class="s3_370"
>user_similarities</text>

<text 
x="416" 
y="714" 
class="s4_370"
>[</text>

<text 
x="424" 
y="714" 
class="s3_370"
>user_id</text>

<text 
x="480" 
y="714" 
class="s4_370"
>])</text>

<text 
x="567" 
y="714" 
dx="0,0,4.6,0,0,0,0,0,0" 
class="s10_370"
># nonzero</text>

<text 
x="179" 
y="729" 
class="s6_370"
>if</text>

<text 
x="203" 
y="729" 
class="s3_370"
>user_id</text>

<text 
x="266" 
y="729" 
class="s4_370"
>!=</text>

<text 
x="290" 
y="729" 
class="s3_370"
>other_user_id</text>

<text 
x="401" 
y="729" 
class="s7_370"
>and</text>

<text 
x="432" 
y="729" 
class="s3_370"
>similarity</text>

<text 
x="519" 
y="729" 
class="s4_370"
>&gt;</text>

<text 
x="535" 
y="729" 
class="s11_370"
>0</text>

<text 
x="543" 
y="729" 
class="s4_370"
>]</text>

<text 
x="567" 
y="729" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s10_370"
># similarity</text>

<text 
x="108" 
y="760" 
class="s6_370"
>return</text>

<text 
x="163" 
y="760" 
class="s5_370"
>sorted</text>

<text 
x="211" 
y="760" 
class="s4_370"
>(</text>

<text 
x="219" 
y="760" 
class="s3_370"
>pairs</text>

<text 
x="258" 
y="760" 
class="s4_370"
>,</text>

<text 
x="567" 
y="760" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0" 
class="s10_370"
># sort them</text>

<text 
x="219" 
y="775" 
class="s3_370"
>key</text>

<text 
x="242" 
y="775" 
class="s4_370"
>=</text>

<text 
x="250" 
y="775" 
class="s6_370"
>lambda</text>

<text 
x="306" 
y="775" 
class="s4_370"
>(</text>

<text 
x="314" 
y="775" 
class="s3_370"
>_</text>

<text 
x="322" 
y="775" 
class="s4_370"
>,</text>

<text 
x="337" 
y="775" 
class="s3_370"
>similarity</text>

<text 
x="416" 
y="775" 
class="s4_370"
>):</text>

<text 
x="440" 
y="775" 
class="s3_370"
>similarity</text>

<text 
x="519" 
y="775" 
class="s4_370"
>,</text>

<text 
x="567" 
y="775" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s10_370"
># most similar</text>

<text 
x="219" 
y="791" 
class="s3_370"
>reverse</text>

<text 
x="274" 
y="791" 
class="s4_370"
>=</text>

<text 
x="282" 
y="791" 
class="s5_370"
>True</text>

<text 
x="314" 
y="791" 
class="s4_370"
>)</text>

<text 
x="567" 
y="791" 
dx="0,0,4.6,0,0,0,0" 
class="s10_370"
># first</text>

<text 
x="55" 
y="843" 
class="s1_370"
>For instance, if we call</text>

<text 
x="261" 
y="843" 
class="s2_370"
>most_similar_users_to(0)</text>

<text 
x="520" 
y="843" 
class="s1_370"
>we get:</text>

<text 
x="76" 
y="891" 
class="s4_370"
>[(</text>

<text 
x="92" 
y="891" 
class="s11_370"
>9</text>

<text 
x="100" 
y="891" 
class="s4_370"
>,</text>

<text 
x="116" 
y="891" 
class="s11_370"
>0.5669467095138409</text>

<text 
x="258" 
y="891" 
class="s4_370"
>),</text>

<text 
x="84" 
y="906" 
class="s4_370"
>(</text>

<text 
x="92" 
y="906" 
class="s11_370"
>1</text>

<text 
x="100" 
y="906" 
class="s4_370"
>,</text>

<text 
x="116" 
y="906" 
class="s11_370"
>0.3380617018914066</text>

<text 
x="258" 
y="906" 
class="s4_370"
>),</text>

<text 
x="84" 
y="922" 
class="s4_370"
>(</text>

<text 
x="92" 
y="922" 
class="s11_370"
>8</text>

<text 
x="100" 
y="922" 
class="s4_370"
>,</text>

<text 
x="116" 
y="922" 
class="s11_370"
>0.1889822365046136</text>

<text 
x="258" 
y="922" 
class="s4_370"
>),</text>

<text 
x="84" 
y="937" 
class="s4_370"
>(</text>

<text 
x="92" 
y="937" 
class="s11_370"
>13</text>

<text 
x="108" 
y="937" 
class="s4_370"
>,</text>

<text 
x="124" 
y="937" 
class="s11_370"
>0.1690308509457033</text>

<text 
x="266" 
y="937" 
class="s4_370"
>),</text>

<text 
x="84" 
y="952" 
class="s4_370"
>(</text>

<text 
x="92" 
y="952" 
class="s11_370"
>5</text>

<text 
x="100" 
y="952" 
class="s4_370"
>,</text>

<text 
x="116" 
y="952" 
class="s11_370"
>0.1543033499620919</text>

<text 
x="258" 
y="952" 
class="s4_370"
>)]</text>

<text 
x="55" 
y="1005" 
class="s1_370"
>How do we use this to suggest new interests to a user? For each interest, we can just add</text>

<text 
x="55" 
y="1033" 
dx="0,0,0,0,0,0,0,0,0,0,0,-0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_370"
>up the user-similarities of the other users interested in it:</text>

<text 
x="76" 
y="1078" 
class="s6_370"
>def</text>

<text 
x="108" 
y="1078" 
class="s9_370"
>user_based_suggestions</text>

<text 
x="282" 
y="1078" 
class="s4_370"
>(</text>

<text 
x="290" 
y="1078" 
class="s3_370"
>user_id</text>

<text 
x="345" 
y="1078" 
class="s4_370"
>,</text>

<text 
x="361" 
y="1078" 
class="s3_370"
>include_current_interests</text>

<text 
x="559" 
y="1078" 
class="s4_370"
>=</text>

<text 
x="567" 
y="1078" 
class="s5_370"
>False</text>

<text 
x="606" 
y="1078" 
class="s4_370"
>):</text>

<text 
x="108" 
y="1093" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0" 
class="s10_370"
># sum up the similarities</text>

<text 
x="108" 
y="1109" 
class="s3_370"
>suggestions</text>

<text 
x="203" 
y="1109" 
class="s4_370"
>=</text>

<text 
x="219" 
y="1109" 
class="s3_370"
>defaultdict</text>

<text 
x="306" 
y="1109" 
class="s4_370"
>(</text>

<text 
x="314" 
y="1109" 
class="s5_370"
>float</text>

<text 
x="353" 
y="1109" 
class="s4_370"
>)</text>

<text 
x="108" 
y="1124" 
class="s6_370"
>for</text>

<text 
x="140" 
y="1124" 
class="s3_370"
>other_user_id</text>

<text 
x="242" 
y="1124" 
class="s4_370"
>,</text>

<text 
x="258" 
y="1124" 
class="s3_370"
>similarity</text>

<text 
x="345" 
y="1124" 
class="s7_370"
>in</text>

<text 
x="369" 
y="1124" 
class="s3_370"
>most_similar_users_to</text>

<text 
x="535" 
y="1124" 
class="s4_370"
>(</text>

<text 
x="543" 
y="1124" 
class="s3_370"
>user_id</text>

<text 
x="598" 
y="1124" 
class="s4_370"
>):</text>

<text 
x="140" 
y="1139" 
class="s6_370"
>for</text>

<text 
x="171" 
y="1139" 
class="s3_370"
>interest</text>

<text 
x="242" 
y="1139" 
class="s7_370"
>in</text>

<text 
x="266" 
y="1139" 
class="s3_370"
>users_interests</text>

<text 
x="385" 
y="1139" 
class="s4_370"
>[</text>

<text 
x="393" 
y="1139" 
class="s3_370"
>other_user_id</text>

<text 
x="495" 
y="1139" 
class="s4_370"
>]:</text>

<text 
x="171" 
y="1155" 
class="s3_370"
>suggestions</text>

<text 
x="258" 
y="1155" 
class="s4_370"
>[</text>

<text 
x="266" 
y="1155" 
class="s3_370"
>interest</text>

<text 
x="329" 
y="1155" 
dx="0,0,4.6,0" 
class="s4_370"
>] +=</text>

<text 
x="369" 
y="1155" 
class="s3_370"
>similarity</text>

<text 
x="108" 
y="1186" 
dx="0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0,0,0,0,4.6,0,0,0" 
class="s10_370"
># convert them to a sorted list</text>

<text 
x="108" 
y="1201" 
class="s3_370"
>suggestions</text>

<text 
x="203" 
y="1201" 
class="s4_370"
>=</text>

<text 
x="219" 
y="1201" 
class="s5_370"
>sorted</text>

<text 
x="266" 
y="1201" 
class="s4_370"
>(</text>

<text 
x="274" 
y="1201" 
class="s3_370"
>suggestions</text>

<text 
x="361" 
y="1201" 
class="s4_370"
>.</text>

<text 
x="369" 
y="1201" 
class="s3_370"
>items</text>

<text 
x="408" 
y="1201" 
class="s4_370"
>(),</text>

<text 
x="274" 
y="1216" 
class="s3_370"
>key</text>

<text 
x="298" 
y="1216" 
class="s4_370"
>=</text>

<text 
x="306" 
y="1216" 
class="s6_370"
>lambda</text>

<text 
x="361" 
y="1216" 
class="s4_370"
>(</text>

<text 
x="369" 
y="1216" 
class="s3_370"
>_</text>

<text 
x="377" 
y="1216" 
class="s4_370"
>,</text>

<text 
x="393" 
y="1216" 
class="s3_370"
>weight</text>

<text 
x="440" 
y="1216" 
class="s4_370"
>):</text>

<text 
x="464" 
y="1216" 
class="s3_370"
>weight</text>

<text 
x="511" 
y="1216" 
class="s4_370"
>,</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
