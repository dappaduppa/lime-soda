<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 376 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_376{
}

.s1_376{
font-size: 44.01px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_376{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_376{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<path d="M55,117.7l799.4,0l0,1.1L55,118.8l0,-1.1Z" class="g1_376" />
<text 
x="55" 
y="94" 
dx="0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_376"
>Chapter 23. Databases and SQL</text>

<text 
x="65" 
y="193" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4" 
class="s2_376"
>Memory is man’s greatest friend and worst enemy.</text>

<text 
x="65" 
y="229" 
class="s2_376"
>Gilbert Parker</text>

<text 
x="55" 
y="267" 
class="s2_376"
>The data you need will often live in</text>

<text 
x="373" 
y="267" 
class="s3_376"
>databases</text>

<text 
x="461" 
y="267" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_376"
>, systems designed for efficiently storing</text>

<text 
x="55" 
y="294" 
class="s2_376"
>and querying data. The bulk of these are</text>

<text 
x="414" 
y="294" 
dx="0,-0.8,0,0,0,0,0,0,0,0" 
class="s3_376"
>relational</text>

<text 
x="505" 
y="294" 
class="s2_376"
>databases, such as Oracle, MySQL,</text>

<text 
x="55" 
y="322" 
dx="0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_376"
>and SQL Server, which store data in</text>

<text 
x="378" 
y="322" 
class="s3_376"
>tables</text>

<text 
x="436" 
y="322" 
class="s2_376"
>and are typically queried using Structured</text>

<text 
x="55" 
y="349" 
class="s2_376"
>Query Language (SQL), a declarative language for manipulating data.</text>

<text 
x="55" 
y="388" 
dx="0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_376"
>SQL is a pretty essential part of the data scientist’s toolkit. In this chapter, we’ll create</text>

<text 
x="55" 
y="415" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0" 
class="s2_376"
>NotQuiteABase, a Python implementation of something that’s not quite a database. We’ll</text>

<text 
x="55" 
y="443" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_376"
>also cover the basics of SQL while showing how they work in our not-quite database,</text>

<text 
x="55" 
y="470" 
class="s2_376"
>which is the most “from scratch” way I could think of to help you understand what they’re</text>

<text 
x="55" 
y="498" 
class="s2_376"
>doing. My hope is that solving problems in NotQuiteABase will give you a good sense of</text>

<text 
x="55" 
y="525" 
class="s2_376"
>how you might solve the same problems using SQL.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
