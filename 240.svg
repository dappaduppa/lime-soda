<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 240 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_240{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s2_240{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s3_240{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s4_240{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_240{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s6_240{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #00AA88;
}
.s7_240{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s8_240{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s9_240{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s10_240{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="171" 
y="64" 
class="s1_240"
>log_prob_if_spam</text>

<text 
x="306" 
y="64" 
class="s2_240"
>+=</text>

<text 
x="329" 
y="64" 
class="s1_240"
>math</text>

<text 
x="361" 
y="64" 
class="s2_240"
>.</text>

<text 
x="369" 
y="64" 
class="s1_240"
>log</text>

<text 
x="393" 
y="64" 
class="s2_240"
>(</text>

<text 
x="401" 
y="64" 
class="s3_240"
>1.0</text>

<text 
x="432" 
y="64" 
class="s2_240"
>-</text>

<text 
x="448" 
y="64" 
class="s1_240"
>prob_if_spam</text>

<text 
x="543" 
y="64" 
class="s2_240"
>)</text>

<text 
x="171" 
y="80" 
class="s1_240"
>log_prob_if_not_spam</text>

<text 
x="337" 
y="80" 
class="s2_240"
>+=</text>

<text 
x="361" 
y="80" 
class="s1_240"
>math</text>

<text 
x="393" 
y="80" 
class="s2_240"
>.</text>

<text 
x="401" 
y="80" 
class="s1_240"
>log</text>

<text 
x="424" 
y="80" 
class="s2_240"
>(</text>

<text 
x="432" 
y="80" 
class="s3_240"
>1.0</text>

<text 
x="464" 
y="80" 
class="s2_240"
>-</text>

<text 
x="480" 
y="80" 
class="s1_240"
>prob_if_not_spam</text>

<text 
x="606" 
y="80" 
class="s2_240"
>)</text>

<text 
x="108" 
y="111" 
class="s1_240"
>prob_if_spam</text>

<text 
x="211" 
y="111" 
class="s2_240"
>=</text>

<text 
x="227" 
y="111" 
class="s1_240"
>math</text>

<text 
x="258" 
y="111" 
class="s2_240"
>.</text>

<text 
x="266" 
y="111" 
class="s1_240"
>exp</text>

<text 
x="290" 
y="111" 
class="s2_240"
>(</text>

<text 
x="298" 
y="111" 
class="s1_240"
>log_prob_if_spam</text>

<text 
x="424" 
y="111" 
class="s2_240"
>)</text>

<text 
x="108" 
y="126" 
class="s1_240"
>prob_if_not_spam</text>

<text 
x="242" 
y="126" 
class="s2_240"
>=</text>

<text 
x="258" 
y="126" 
class="s1_240"
>math</text>

<text 
x="290" 
y="126" 
class="s2_240"
>.</text>

<text 
x="298" 
y="126" 
class="s1_240"
>exp</text>

<text 
x="322" 
y="126" 
class="s2_240"
>(</text>

<text 
x="329" 
y="126" 
class="s1_240"
>log_prob_if_not_spam</text>

<text 
x="487" 
y="126" 
class="s2_240"
>)</text>

<text 
x="108" 
y="141" 
class="s4_240"
>return</text>

<text 
x="163" 
y="141" 
class="s1_240"
>prob_if_spam</text>

<text 
x="266" 
y="141" 
dx="0,0,4.6" 
class="s2_240"
>/ (</text>

<text 
x="290" 
y="141" 
class="s1_240"
>prob_if_spam</text>

<text 
x="393" 
y="141" 
class="s2_240"
>+</text>

<text 
x="408" 
y="141" 
class="s1_240"
>prob_if_not_spam</text>

<text 
x="535" 
y="141" 
class="s2_240"
>)</text>

<text 
x="55" 
y="194" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_240"
>We can put this all together into our Naive Bayes Classifier:</text>

<text 
x="76" 
y="239" 
class="s4_240"
>class</text>

<text 
x="124" 
y="239" 
class="s6_240"
>NaiveBayesClassifier</text>

<text 
x="282" 
y="239" 
class="s2_240"
>:</text>

<text 
x="108" 
y="270" 
class="s4_240"
>def</text>

<text 
x="140" 
y="270" 
class="s7_240"
>__init__</text>

<text 
x="203" 
y="270" 
class="s2_240"
>(</text>

<text 
x="211" 
y="270" 
class="s8_240"
>self</text>

<text 
x="242" 
y="270" 
class="s2_240"
>,</text>

<text 
x="258" 
y="270" 
class="s1_240"
>k</text>

<text 
x="266" 
y="270" 
class="s2_240"
>=</text>

<text 
x="274" 
y="270" 
class="s3_240"
>0.5</text>

<text 
x="298" 
y="270" 
class="s2_240"
>):</text>

<text 
x="140" 
y="286" 
class="s8_240"
>self</text>

<text 
x="171" 
y="286" 
class="s2_240"
>.</text>

<text 
x="179" 
y="286" 
class="s1_240"
>k</text>

<text 
x="195" 
y="286" 
class="s2_240"
>=</text>

<text 
x="211" 
y="286" 
class="s1_240"
>k</text>

<text 
x="140" 
y="301" 
class="s8_240"
>self</text>

<text 
x="171" 
y="301" 
class="s2_240"
>.</text>

<text 
x="179" 
y="301" 
class="s1_240"
>word_probs</text>

<text 
x="266" 
y="301" 
dx="0,0,4.6,0" 
class="s2_240"
>= []</text>

<text 
x="108" 
y="332" 
class="s4_240"
>def</text>

<text 
x="140" 
y="332" 
class="s7_240"
>train</text>

<text 
x="179" 
y="332" 
class="s2_240"
>(</text>

<text 
x="187" 
y="332" 
class="s8_240"
>self</text>

<text 
x="219" 
y="332" 
class="s2_240"
>,</text>

<text 
x="235" 
y="332" 
class="s1_240"
>training_set</text>

<text 
x="329" 
y="332" 
class="s2_240"
>):</text>

<text 
x="140" 
y="363" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s9_240"
># count spam and non-spam messages</text>

<text 
x="140" 
y="378" 
class="s1_240"
>num_spams</text>

<text 
x="219" 
y="378" 
class="s2_240"
>=</text>

<text 
x="235" 
y="378" 
class="s8_240"
>len</text>

<text 
x="258" 
y="378" 
class="s2_240"
>([</text>

<text 
x="274" 
y="378" 
class="s1_240"
>is_spam</text>

<text 
x="274" 
y="393" 
class="s4_240"
>for</text>

<text 
x="306" 
y="393" 
class="s1_240"
>message</text>

<text 
x="361" 
y="393" 
class="s2_240"
>,</text>

<text 
x="377" 
y="393" 
class="s1_240"
>is_spam</text>

<text 
x="440" 
y="393" 
class="s10_240"
>in</text>

<text 
x="464" 
y="393" 
class="s1_240"
>training_set</text>

<text 
x="274" 
y="409" 
class="s4_240"
>if</text>

<text 
x="298" 
y="409" 
class="s1_240"
>is_spam</text>

<text 
x="353" 
y="409" 
class="s2_240"
>])</text>

<text 
x="140" 
y="424" 
class="s1_240"
>num_non_spams</text>

<text 
x="250" 
y="424" 
class="s2_240"
>=</text>

<text 
x="266" 
y="424" 
class="s8_240"
>len</text>

<text 
x="290" 
y="424" 
class="s2_240"
>(</text>

<text 
x="298" 
y="424" 
class="s1_240"
>training_set</text>

<text 
x="393" 
y="424" 
dx="0,0,4.6" 
class="s2_240"
>) -</text>

<text 
x="424" 
y="424" 
class="s1_240"
>num_spams</text>

<text 
x="140" 
y="455" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s9_240"
># run training data through our "pipeline"</text>

<text 
x="140" 
y="470" 
class="s1_240"
>word_counts</text>

<text 
x="235" 
y="470" 
class="s2_240"
>=</text>

<text 
x="250" 
y="470" 
class="s1_240"
>count_words</text>

<text 
x="337" 
y="470" 
class="s2_240"
>(</text>

<text 
x="345" 
y="470" 
class="s1_240"
>training_set</text>

<text 
x="440" 
y="470" 
class="s2_240"
>)</text>

<text 
x="140" 
y="486" 
class="s8_240"
>self</text>

<text 
x="171" 
y="486" 
class="s2_240"
>.</text>

<text 
x="179" 
y="486" 
class="s1_240"
>word_probs</text>

<text 
x="266" 
y="486" 
class="s2_240"
>=</text>

<text 
x="282" 
y="486" 
class="s1_240"
>word_probabilities</text>

<text 
x="424" 
y="486" 
class="s2_240"
>(</text>

<text 
x="432" 
y="486" 
class="s1_240"
>word_counts</text>

<text 
x="519" 
y="486" 
class="s2_240"
>,</text>

<text 
x="432" 
y="501" 
class="s1_240"
>num_spams</text>

<text 
x="503" 
y="501" 
class="s2_240"
>,</text>

<text 
x="432" 
y="517" 
class="s1_240"
>num_non_spams</text>

<text 
x="535" 
y="517" 
class="s2_240"
>,</text>

<text 
x="432" 
y="532" 
class="s8_240"
>self</text>

<text 
x="464" 
y="532" 
class="s2_240"
>.</text>

<text 
x="472" 
y="532" 
class="s1_240"
>k</text>

<text 
x="480" 
y="532" 
class="s2_240"
>)</text>

<text 
x="108" 
y="563" 
class="s4_240"
>def</text>

<text 
x="140" 
y="563" 
class="s7_240"
>classify</text>

<text 
x="203" 
y="563" 
class="s2_240"
>(</text>

<text 
x="211" 
y="563" 
class="s8_240"
>self</text>

<text 
x="242" 
y="563" 
class="s2_240"
>,</text>

<text 
x="258" 
y="563" 
class="s1_240"
>message</text>

<text 
x="314" 
y="563" 
class="s2_240"
>):</text>

<text 
x="140" 
y="578" 
class="s4_240"
>return</text>

<text 
x="195" 
y="578" 
class="s1_240"
>spam_probability</text>

<text 
x="322" 
y="578" 
class="s2_240"
>(</text>

<text 
x="329" 
y="578" 
class="s8_240"
>self</text>

<text 
x="361" 
y="578" 
class="s2_240"
>.</text>

<text 
x="369" 
y="578" 
class="s1_240"
>word_probs</text>

<text 
x="448" 
y="578" 
class="s2_240"
>,</text>

<text 
x="464" 
y="578" 
class="s1_240"
>message</text>

<text 
x="519" 
y="578" 
class="s2_240"
>)</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
