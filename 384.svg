<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 384 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_384{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s2_384{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s3_384{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s4_384{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s5_384{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_384{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s7_384{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s8_384{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s9_384{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s10_384{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s11_384{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="75" 
y="73" 
dx="0,0,0,6.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_384"
>2. Iterates over the rows of the table, populating the</text>

<text 
x="541" 
y="73" 
class="s2_384"
>defaultdict</text>

<text 
x="657" 
y="73" 
class="s1_384"
>.</text>

<text 
x="75" 
y="121" 
dx="0,0,0,6.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_384"
>3. Creates a new table with the correct output columns.</text>

<text 
x="75" 
y="168" 
dx="0,0,0,6.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_384"
>4. Iterates over the</text>

<text 
x="251" 
y="168" 
class="s2_384"
>defaultdict</text>

<text 
x="373" 
y="168" 
class="s1_384"
>and populates the output table, applying the</text>

<text 
x="762" 
y="168" 
class="s2_384"
>having</text>

<text 
x="104" 
y="193" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4" 
class="s1_384"
>filter if any.</text>

<text 
x="55" 
y="242" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0" 
class="s1_384"
>(An actual database would almost certainly do this in a more efficient manner.)</text>

<text 
x="108" 
y="287" 
class="s3_384"
>def</text>

<text 
x="140" 
y="287" 
class="s4_384"
>group_by</text>

<text 
x="203" 
y="287" 
class="s5_384"
>(</text>

<text 
x="211" 
y="287" 
class="s6_384"
>self</text>

<text 
x="242" 
y="287" 
class="s5_384"
>,</text>

<text 
x="258" 
y="287" 
class="s7_384"
>group_by_columns</text>

<text 
x="385" 
y="287" 
class="s5_384"
>,</text>

<text 
x="401" 
y="287" 
class="s7_384"
>aggregates</text>

<text 
x="480" 
y="287" 
class="s5_384"
>,</text>

<text 
x="495" 
y="287" 
class="s7_384"
>having</text>

<text 
x="543" 
y="287" 
class="s5_384"
>=</text>

<text 
x="551" 
y="287" 
class="s6_384"
>None</text>

<text 
x="582" 
y="287" 
class="s5_384"
>):</text>

<text 
x="140" 
y="317" 
class="s7_384"
>grouped_rows</text>

<text 
x="242" 
y="317" 
class="s5_384"
>=</text>

<text 
x="258" 
y="317" 
class="s7_384"
>defaultdict</text>

<text 
x="345" 
y="317" 
class="s5_384"
>(</text>

<text 
x="353" 
y="317" 
class="s6_384"
>list</text>

<text 
x="385" 
y="317" 
class="s5_384"
>)</text>

<text 
x="140" 
y="348" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s8_384"
># populate groups</text>

<text 
x="140" 
y="364" 
class="s3_384"
>for</text>

<text 
x="171" 
y="364" 
class="s7_384"
>row</text>

<text 
x="203" 
y="364" 
class="s9_384"
>in</text>

<text 
x="227" 
y="364" 
class="s6_384"
>self</text>

<text 
x="258" 
y="364" 
class="s5_384"
>.</text>

<text 
x="266" 
y="364" 
class="s7_384"
>rows</text>

<text 
x="298" 
y="364" 
class="s5_384"
>:</text>

<text 
x="171" 
y="379" 
class="s7_384"
>key</text>

<text 
x="203" 
y="379" 
class="s5_384"
>=</text>

<text 
x="219" 
y="379" 
class="s6_384"
>tuple</text>

<text 
x="258" 
y="379" 
class="s5_384"
>(</text>

<text 
x="266" 
y="379" 
class="s7_384"
>row</text>

<text 
x="290" 
y="379" 
class="s5_384"
>[</text>

<text 
x="298" 
y="379" 
class="s7_384"
>column</text>

<text 
x="345" 
y="379" 
class="s5_384"
>]</text>

<text 
x="361" 
y="379" 
class="s3_384"
>for</text>

<text 
x="393" 
y="379" 
class="s7_384"
>column</text>

<text 
x="448" 
y="379" 
class="s9_384"
>in</text>

<text 
x="472" 
y="379" 
class="s7_384"
>group_by_columns</text>

<text 
x="598" 
y="379" 
class="s5_384"
>)</text>

<text 
x="171" 
y="394" 
class="s7_384"
>grouped_rows</text>

<text 
x="266" 
y="394" 
class="s5_384"
>[</text>

<text 
x="274" 
y="394" 
class="s7_384"
>key</text>

<text 
x="298" 
y="394" 
class="s5_384"
>].</text>

<text 
x="314" 
y="394" 
class="s7_384"
>append</text>

<text 
x="361" 
y="394" 
class="s5_384"
>(</text>

<text 
x="369" 
y="394" 
class="s7_384"
>row</text>

<text 
x="393" 
y="394" 
class="s5_384"
>)</text>

<text 
x="140" 
y="425" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s8_384"
># result table consists of group_by columns and aggregates</text>

<text 
x="140" 
y="441" 
class="s7_384"
>result_table</text>

<text 
x="242" 
y="441" 
class="s5_384"
>=</text>

<text 
x="258" 
y="441" 
class="s7_384"
>Table</text>

<text 
x="298" 
y="441" 
class="s5_384"
>(</text>

<text 
x="306" 
y="441" 
class="s7_384"
>group_by_columns</text>

<text 
x="440" 
y="441" 
class="s5_384"
>+</text>

<text 
x="456" 
y="441" 
class="s7_384"
>aggregates</text>

<text 
x="535" 
y="441" 
class="s5_384"
>.</text>

<text 
x="543" 
y="441" 
class="s7_384"
>keys</text>

<text 
x="574" 
y="441" 
class="s5_384"
>())</text>

<text 
x="140" 
y="472" 
class="s3_384"
>for</text>

<text 
x="171" 
y="472" 
class="s7_384"
>key</text>

<text 
x="195" 
y="472" 
class="s5_384"
>,</text>

<text 
x="211" 
y="472" 
class="s7_384"
>rows</text>

<text 
x="250" 
y="472" 
class="s9_384"
>in</text>

<text 
x="274" 
y="472" 
class="s7_384"
>grouped_rows</text>

<text 
x="369" 
y="472" 
class="s5_384"
>.</text>

<text 
x="377" 
y="472" 
class="s7_384"
>iteritems</text>

<text 
x="448" 
y="472" 
class="s5_384"
>():</text>

<text 
x="171" 
y="487" 
class="s3_384"
>if</text>

<text 
x="195" 
y="487" 
class="s7_384"
>having</text>

<text 
x="250" 
y="487" 
class="s9_384"
>is</text>

<text 
x="274" 
y="487" 
class="s6_384"
>None</text>

<text 
x="314" 
y="487" 
class="s9_384"
>or</text>

<text 
x="337" 
y="487" 
class="s7_384"
>having</text>

<text 
x="385" 
y="487" 
class="s5_384"
>(</text>

<text 
x="393" 
y="487" 
class="s7_384"
>rows</text>

<text 
x="424" 
y="487" 
class="s5_384"
>):</text>

<text 
x="203" 
y="502" 
class="s7_384"
>new_row</text>

<text 
x="266" 
y="502" 
class="s5_384"
>=</text>

<text 
x="282" 
y="502" 
class="s6_384"
>list</text>

<text 
x="314" 
y="502" 
class="s5_384"
>(</text>

<text 
x="322" 
y="502" 
class="s7_384"
>key</text>

<text 
x="345" 
y="502" 
class="s5_384"
>)</text>

<text 
x="203" 
y="518" 
class="s3_384"
>for</text>

<text 
x="235" 
y="518" 
class="s7_384"
>aggregate_name</text>

<text 
x="345" 
y="518" 
class="s5_384"
>,</text>

<text 
x="361" 
y="518" 
class="s7_384"
>aggregate_fn</text>

<text 
x="464" 
y="518" 
class="s9_384"
>in</text>

<text 
x="487" 
y="518" 
class="s7_384"
>aggregates</text>

<text 
x="567" 
y="518" 
class="s5_384"
>.</text>

<text 
x="574" 
y="518" 
class="s7_384"
>iteritems</text>

<text 
x="646" 
y="518" 
class="s5_384"
>():</text>

<text 
x="235" 
y="533" 
class="s7_384"
>new_row</text>

<text 
x="290" 
y="533" 
class="s5_384"
>.</text>

<text 
x="298" 
y="533" 
class="s7_384"
>append</text>

<text 
x="345" 
y="533" 
class="s5_384"
>(</text>

<text 
x="353" 
y="533" 
class="s7_384"
>aggregate_fn</text>

<text 
x="448" 
y="533" 
class="s5_384"
>(</text>

<text 
x="456" 
y="533" 
class="s7_384"
>rows</text>

<text 
x="487" 
y="533" 
class="s5_384"
>))</text>

<text 
x="203" 
y="549" 
class="s7_384"
>result_table</text>

<text 
x="298" 
y="549" 
class="s5_384"
>.</text>

<text 
x="306" 
y="549" 
class="s7_384"
>insert</text>

<text 
x="353" 
y="549" 
class="s5_384"
>(</text>

<text 
x="361" 
y="549" 
class="s7_384"
>new_row</text>

<text 
x="416" 
y="549" 
class="s5_384"
>)</text>

<text 
x="140" 
y="579" 
class="s3_384"
>return</text>

<text 
x="195" 
y="579" 
class="s7_384"
>result_table</text>

<text 
x="55" 
y="632" 
dx="0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_384"
>Again, letâ€™s see how we would do the equivalent of the preceding SQL statements. The</text>

<text 
x="55" 
y="660" 
class="s2_384"
>name_length</text>

<text 
x="176" 
y="660" 
class="s1_384"
>metrics are:</text>

<text 
x="76" 
y="707" 
class="s3_384"
>def</text>

<text 
x="108" 
y="707" 
class="s4_384"
>min_user_id</text>

<text 
x="195" 
y="707" 
class="s5_384"
>(</text>

<text 
x="203" 
y="707" 
class="s7_384"
>rows</text>

<text 
x="235" 
y="707" 
class="s5_384"
>):</text>

<text 
x="258" 
y="707" 
class="s3_384"
>return</text>

<text 
x="314" 
y="707" 
class="s6_384"
>min</text>

<text 
x="337" 
y="707" 
class="s5_384"
>(</text>

<text 
x="345" 
y="707" 
class="s7_384"
>row</text>

<text 
x="369" 
y="707" 
class="s5_384"
>[</text>

<text 
x="377" 
y="707" 
class="s10_384"
>"user_id"</text>

<text 
x="448" 
y="707" 
class="s5_384"
>]</text>

<text 
x="464" 
y="707" 
class="s3_384"
>for</text>

<text 
x="495" 
y="707" 
class="s7_384"
>row</text>

<text 
x="527" 
y="707" 
class="s9_384"
>in</text>

<text 
x="551" 
y="707" 
class="s7_384"
>rows</text>

<text 
x="582" 
y="707" 
class="s5_384"
>)</text>

<text 
x="76" 
y="738" 
class="s7_384"
>stats_by_length</text>

<text 
x="203" 
y="738" 
class="s5_384"
>=</text>

<text 
x="219" 
y="738" 
class="s7_384"
>users</text>

<text 
x="266" 
y="738" 
class="s5_384"
>\</text>

<text 
x="108" 
y="753" 
class="s5_384"
>.</text>

<text 
x="116" 
y="753" 
class="s7_384"
>select</text>

<text 
x="163" 
y="753" 
class="s5_384"
>(</text>

<text 
x="171" 
y="753" 
class="s7_384"
>additional_columns</text>

<text 
x="314" 
y="753" 
class="s5_384"
>={</text>

<text 
x="329" 
y="753" 
class="s10_384"
>"name_length"</text>

<text 
x="440" 
y="753" 
class="s5_384"
>:</text>

<text 
x="456" 
y="753" 
class="s7_384"
>name_length</text>

<text 
x="543" 
y="753" 
dx="0,0,0,4.6" 
class="s5_384"
>}) \</text>

<text 
x="108" 
y="769" 
class="s5_384"
>.</text>

<text 
x="116" 
y="769" 
class="s7_384"
>group_by</text>

<text 
x="179" 
y="769" 
class="s5_384"
>(</text>

<text 
x="187" 
y="769" 
class="s7_384"
>group_by_columns</text>

<text 
x="314" 
y="769" 
class="s5_384"
>=[</text>

<text 
x="329" 
y="769" 
class="s10_384"
>"name_length"</text>

<text 
x="432" 
y="769" 
class="s5_384"
>],</text>

<text 
x="187" 
y="784" 
class="s7_384"
>aggregates</text>

<text 
x="266" 
y="784" 
class="s5_384"
>={</text>

<text 
x="290" 
y="784" 
class="s10_384"
>"min_user_id"</text>

<text 
x="401" 
y="784" 
class="s5_384"
>:</text>

<text 
x="416" 
y="784" 
class="s7_384"
>min_user_id</text>

<text 
x="503" 
y="784" 
class="s5_384"
>,</text>

<text 
x="290" 
y="799" 
class="s10_384"
>"num_users"</text>

<text 
x="385" 
y="799" 
class="s5_384"
>:</text>

<text 
x="401" 
y="799" 
class="s6_384"
>len</text>

<text 
x="432" 
y="799" 
class="s5_384"
>})</text>

<text 
x="55" 
y="852" 
class="s1_384"
>The</text>

<text 
x="94" 
y="852" 
class="s2_384"
>first_letter</text>

<text 
x="226" 
y="852" 
class="s1_384"
>metrics:</text>

<text 
x="76" 
y="900" 
class="s3_384"
>def</text>

<text 
x="108" 
y="900" 
class="s4_384"
>first_letter_of_name</text>

<text 
x="266" 
y="900" 
class="s5_384"
>(</text>

<text 
x="274" 
y="900" 
class="s7_384"
>row</text>

<text 
x="298" 
y="900" 
class="s5_384"
>):</text>

<text 
x="108" 
y="915" 
class="s3_384"
>return</text>

<text 
x="163" 
y="915" 
class="s7_384"
>row</text>

<text 
x="187" 
y="915" 
class="s5_384"
>[</text>

<text 
x="195" 
y="915" 
class="s10_384"
>"name"</text>

<text 
x="242" 
y="915" 
class="s5_384"
>][</text>

<text 
x="258" 
y="915" 
class="s11_384"
>0</text>

<text 
x="266" 
y="915" 
class="s5_384"
>]</text>

<text 
x="282" 
y="915" 
class="s3_384"
>if</text>

<text 
x="306" 
y="915" 
class="s7_384"
>row</text>

<text 
x="329" 
y="915" 
class="s5_384"
>[</text>

<text 
x="337" 
y="915" 
class="s10_384"
>"name"</text>

<text 
x="385" 
y="915" 
class="s5_384"
>]</text>

<text 
x="401" 
y="915" 
class="s3_384"
>else</text>

<text 
x="440" 
y="915" 
class="s10_384"
>""</text>

<text 
x="76" 
y="946" 
class="s3_384"
>def</text>

<text 
x="108" 
y="946" 
class="s4_384"
>average_num_friends</text>

<text 
x="258" 
y="946" 
class="s5_384"
>(</text>

<text 
x="266" 
y="946" 
class="s7_384"
>rows</text>

<text 
x="298" 
y="946" 
class="s5_384"
>):</text>

<text 
x="108" 
y="961" 
class="s3_384"
>return</text>

<text 
x="163" 
y="961" 
class="s6_384"
>sum</text>

<text 
x="187" 
y="961" 
class="s5_384"
>(</text>

<text 
x="195" 
y="961" 
class="s7_384"
>row</text>

<text 
x="219" 
y="961" 
class="s5_384"
>[</text>

<text 
x="227" 
y="961" 
class="s10_384"
>"num_friends"</text>

<text 
x="329" 
y="961" 
class="s5_384"
>]</text>

<text 
x="345" 
y="961" 
class="s3_384"
>for</text>

<text 
x="377" 
y="961" 
class="s7_384"
>row</text>

<text 
x="408" 
y="961" 
class="s9_384"
>in</text>

<text 
x="432" 
y="961" 
class="s7_384"
>rows</text>

<text 
x="464" 
y="961" 
dx="0,0,4.6" 
class="s5_384"
>) /</text>

<text 
x="495" 
y="961" 
class="s6_384"
>len</text>

<text 
x="519" 
y="961" 
class="s5_384"
>(</text>

<text 
x="527" 
y="961" 
class="s7_384"
>rows</text>

<text 
x="559" 
y="961" 
class="s5_384"
>)</text>

<text 
x="76" 
y="992" 
class="s3_384"
>def</text>

<text 
x="108" 
y="992" 
class="s4_384"
>enough_friends</text>

<text 
x="219" 
y="992" 
class="s5_384"
>(</text>

<text 
x="227" 
y="992" 
class="s7_384"
>rows</text>

<text 
x="258" 
y="992" 
class="s5_384"
>):</text>

<text 
x="108" 
y="1007" 
class="s3_384"
>return</text>

<text 
x="163" 
y="1007" 
class="s7_384"
>average_num_friends</text>

<text 
x="314" 
y="1007" 
class="s5_384"
>(</text>

<text 
x="322" 
y="1007" 
class="s7_384"
>rows</text>

<text 
x="353" 
y="1007" 
dx="0,0,4.6" 
class="s5_384"
>) &gt;</text>

<text 
x="385" 
y="1007" 
class="s11_384"
>1</text>

<text 
x="76" 
y="1038" 
class="s7_384"
>avg_friends_by_letter</text>

<text 
x="250" 
y="1038" 
class="s5_384"
>=</text>

<text 
x="266" 
y="1038" 
class="s7_384"
>users</text>

<text 
x="314" 
y="1038" 
class="s5_384"
>\</text>

<text 
x="108" 
y="1054" 
class="s5_384"
>.</text>

<text 
x="116" 
y="1054" 
class="s7_384"
>select</text>

<text 
x="163" 
y="1054" 
class="s5_384"
>(</text>

<text 
x="171" 
y="1054" 
class="s7_384"
>additional_columns</text>

<text 
x="314" 
y="1054" 
class="s5_384"
>={</text>

<text 
x="329" 
y="1054" 
class="s10_384"
>'first_letter'</text>

<text 
x="448" 
y="1054" 
class="s5_384"
>:</text>

<text 
x="464" 
y="1054" 
class="s7_384"
>first_letter_of_name</text>

<text 
x="622" 
y="1054" 
dx="0,0,0,4.6" 
class="s5_384"
>}) \</text>

<text 
x="108" 
y="1069" 
class="s5_384"
>.</text>

<text 
x="116" 
y="1069" 
class="s7_384"
>group_by</text>

<text 
x="179" 
y="1069" 
class="s5_384"
>(</text>

<text 
x="187" 
y="1069" 
class="s7_384"
>group_by_columns</text>

<text 
x="314" 
y="1069" 
class="s5_384"
>=[</text>

<text 
x="329" 
y="1069" 
class="s10_384"
>'first_letter'</text>

<text 
x="440" 
y="1069" 
class="s5_384"
>],</text>

<text 
x="187" 
y="1084" 
class="s7_384"
>aggregates</text>

<text 
x="266" 
y="1084" 
class="s5_384"
>={</text>

<text 
x="290" 
y="1084" 
class="s10_384"
>"avg_num_friends"</text>

<text 
x="432" 
y="1084" 
class="s5_384"
>:</text>

<text 
x="448" 
y="1084" 
class="s7_384"
>average_num_friends</text>

<text 
x="606" 
y="1084" 
class="s5_384"
>},</text>

<text 
x="187" 
y="1100" 
class="s7_384"
>having</text>

<text 
x="235" 
y="1100" 
class="s5_384"
>=</text>

<text 
x="242" 
y="1100" 
class="s7_384"
>enough_friends</text>

<text 
x="353" 
y="1100" 
class="s5_384"
>)</text>

<text 
x="55" 
y="1153" 
class="s1_384"
>and the</text>

<text 
x="124" 
y="1153" 
class="s2_384"
>user_id_sum</text>

<text 
x="246" 
y="1153" 
class="s1_384"
>is:</text>

<text 
x="76" 
y="1200" 
class="s3_384"
>def</text>

<text 
x="108" 
y="1200" 
class="s4_384"
>sum_user_ids</text>

<text 
x="203" 
y="1200" 
class="s5_384"
>(</text>

<text 
x="211" 
y="1200" 
class="s7_384"
>rows</text>

<text 
x="242" 
y="1200" 
class="s5_384"
>):</text>

<text 
x="266" 
y="1200" 
class="s3_384"
>return</text>

<text 
x="322" 
y="1200" 
class="s6_384"
>sum</text>

<text 
x="345" 
y="1200" 
class="s5_384"
>(</text>

<text 
x="353" 
y="1200" 
class="s7_384"
>row</text>

<text 
x="377" 
y="1200" 
class="s5_384"
>[</text>

<text 
x="385" 
y="1200" 
class="s10_384"
>"user_id"</text>

<text 
x="456" 
y="1200" 
class="s5_384"
>]</text>

<text 
x="472" 
y="1200" 
class="s3_384"
>for</text>

<text 
x="503" 
y="1200" 
class="s7_384"
>row</text>

<text 
x="535" 
y="1200" 
class="s9_384"
>in</text>

<text 
x="559" 
y="1200" 
class="s7_384"
>rows</text>

<text 
x="590" 
y="1200" 
class="s5_384"
>)</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
