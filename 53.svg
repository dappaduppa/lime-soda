<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 53 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_53{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_53{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_53{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_53{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_53{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s6_53{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_53{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s8_53{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s9_53{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s10_53{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s11_53{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s12_53{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
dx="0,0,0,0,0,-0.5,0,0,0,0,0,0" 
class="s1_53"
>Control Flow</text>

<text 
x="55" 
y="115" 
class="s2_53"
>As in most programming languages, you can perform an action conditionally using</text>

<text 
x="790" 
y="115" 
class="s3_53"
>if</text>

<text 
x="811" 
y="115" 
class="s2_53"
>:</text>

<text 
x="76" 
y="162" 
class="s4_53"
>if</text>

<text 
x="100" 
y="162" 
class="s5_53"
>1</text>

<text 
x="116" 
y="162" 
class="s6_53"
>&gt;</text>

<text 
x="132" 
y="162" 
class="s5_53"
>2</text>

<text 
x="140" 
y="162" 
class="s6_53"
>:</text>

<text 
x="108" 
y="178" 
class="s7_53"
>message</text>

<text 
x="171" 
y="178" 
class="s6_53"
>=</text>

<text 
x="187" 
y="178" 
dx="0,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0" 
class="s8_53"
>"if only 1 were greater than two…"</text>

<text 
x="76" 
y="193" 
class="s4_53"
>elif</text>

<text 
x="116" 
y="193" 
class="s5_53"
>1</text>

<text 
x="132" 
y="193" 
class="s6_53"
>&gt;</text>

<text 
x="148" 
y="193" 
class="s5_53"
>3</text>

<text 
x="156" 
y="193" 
class="s6_53"
>:</text>

<text 
x="108" 
y="209" 
class="s7_53"
>message</text>

<text 
x="171" 
y="209" 
class="s6_53"
>=</text>

<text 
x="187" 
y="209" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0" 
class="s8_53"
>"elif stands for 'else if'"</text>

<text 
x="76" 
y="224" 
class="s4_53"
>else</text>

<text 
x="108" 
y="224" 
class="s6_53"
>:</text>

<text 
x="108" 
y="239" 
class="s7_53"
>message</text>

<text 
x="171" 
y="239" 
class="s6_53"
>=</text>

<text 
x="187" 
y="239" 
dx="0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0" 
class="s8_53"
>"when all else fails use else (if you want to)"</text>

<text 
x="55" 
y="292" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_53"
>You can also write a</text>

<text 
x="238" 
y="292" 
class="s9_53"
>ternary</text>

<text 
x="309" 
y="292" 
class="s2_53"
>if-then-else on one line, which we will do occasionally:</text>

<text 
x="76" 
y="337" 
class="s7_53"
>parity</text>

<text 
x="132" 
y="337" 
class="s6_53"
>=</text>

<text 
x="148" 
y="337" 
class="s8_53"
>"even"</text>

<text 
x="203" 
y="337" 
class="s4_53"
>if</text>

<text 
x="227" 
y="337" 
class="s7_53"
>x</text>

<text 
x="242" 
y="337" 
class="s6_53"
>%</text>

<text 
x="258" 
y="337" 
class="s5_53"
>2</text>

<text 
x="274" 
y="337" 
class="s6_53"
>==</text>

<text 
x="298" 
y="337" 
class="s5_53"
>0</text>

<text 
x="314" 
y="337" 
class="s4_53"
>else</text>

<text 
x="353" 
y="337" 
class="s8_53"
>"odd"</text>

<text 
x="55" 
y="390" 
class="s2_53"
>Python has a</text>

<text 
x="172" 
y="390" 
class="s3_53"
>while</text>

<text 
x="231" 
y="390" 
class="s2_53"
>loop:</text>

<text 
x="76" 
y="437" 
class="s7_53"
>x</text>

<text 
x="92" 
y="437" 
class="s6_53"
>=</text>

<text 
x="108" 
y="437" 
class="s5_53"
>0</text>

<text 
x="76" 
y="453" 
class="s4_53"
>while</text>

<text 
x="124" 
y="453" 
class="s7_53"
>x</text>

<text 
x="140" 
y="453" 
class="s6_53"
>&lt;</text>

<text 
x="156" 
y="453" 
class="s5_53"
>10</text>

<text 
x="171" 
y="453" 
class="s6_53"
>:</text>

<text 
x="108" 
y="468" 
class="s4_53"
>print</text>

<text 
x="156" 
y="468" 
class="s7_53"
>x</text>

<text 
x="163" 
y="468" 
class="s6_53"
>,</text>

<text 
x="179" 
y="468" 
dx="0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0" 
class="s8_53"
>"is less than 10"</text>

<text 
x="108" 
y="484" 
class="s7_53"
>x</text>

<text 
x="124" 
y="484" 
class="s6_53"
>+=</text>

<text 
x="148" 
y="484" 
class="s5_53"
>1</text>

<text 
x="55" 
y="536" 
class="s2_53"
>although more often we’ll use</text>

<text 
x="324" 
y="536" 
class="s3_53"
>for</text>

<text 
x="361" 
y="536" 
class="s2_53"
>and</text>

<text 
x="398" 
y="536" 
class="s3_53"
>in</text>

<text 
x="419" 
y="536" 
class="s2_53"
>:</text>

<text 
x="76" 
y="584" 
class="s4_53"
>for</text>

<text 
x="108" 
y="584" 
class="s7_53"
>x</text>

<text 
x="124" 
y="584" 
class="s10_53"
>in</text>

<text 
x="148" 
y="584" 
class="s11_53"
>range</text>

<text 
x="187" 
y="584" 
class="s6_53"
>(</text>

<text 
x="195" 
y="584" 
class="s5_53"
>10</text>

<text 
x="211" 
y="584" 
class="s6_53"
>):</text>

<text 
x="108" 
y="599" 
class="s4_53"
>print</text>

<text 
x="156" 
y="599" 
class="s7_53"
>x</text>

<text 
x="163" 
y="599" 
class="s6_53"
>,</text>

<text 
x="179" 
y="599" 
dx="0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0" 
class="s8_53"
>"is less than 10"</text>

<text 
x="55" 
y="652" 
class="s2_53"
>If you need more-complex logic, you can use</text>

<text 
x="458" 
y="652" 
class="s3_53"
>continue</text>

<text 
x="548" 
y="652" 
class="s2_53"
>and</text>

<text 
x="585" 
y="652" 
class="s3_53"
>break</text>

<text 
x="638" 
y="652" 
class="s2_53"
>:</text>

<text 
x="76" 
y="699" 
class="s4_53"
>for</text>

<text 
x="108" 
y="699" 
class="s7_53"
>x</text>

<text 
x="124" 
y="699" 
class="s10_53"
>in</text>

<text 
x="148" 
y="699" 
class="s11_53"
>range</text>

<text 
x="187" 
y="699" 
class="s6_53"
>(</text>

<text 
x="195" 
y="699" 
class="s5_53"
>10</text>

<text 
x="211" 
y="699" 
class="s6_53"
>):</text>

<text 
x="108" 
y="715" 
class="s4_53"
>if</text>

<text 
x="132" 
y="715" 
class="s7_53"
>x</text>

<text 
x="148" 
y="715" 
class="s6_53"
>==</text>

<text 
x="171" 
y="715" 
class="s5_53"
>3</text>

<text 
x="179" 
y="715" 
class="s6_53"
>:</text>

<text 
x="140" 
y="730" 
class="s4_53"
>continue</text>

<text 
x="219" 
y="730" 
dx="0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s12_53"
># go immediately to the next iteration</text>

<text 
x="108" 
y="745" 
class="s4_53"
>if</text>

<text 
x="132" 
y="745" 
class="s7_53"
>x</text>

<text 
x="148" 
y="745" 
class="s6_53"
>==</text>

<text 
x="171" 
y="745" 
class="s5_53"
>5</text>

<text 
x="179" 
y="745" 
class="s6_53"
>:</text>

<text 
x="140" 
y="761" 
class="s4_53"
>break</text>

<text 
x="219" 
y="761" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s12_53"
># quit the loop entirely</text>

<text 
x="108" 
y="776" 
class="s4_53"
>print</text>

<text 
x="156" 
y="776" 
class="s7_53"
>x</text>

<text 
x="55" 
y="829" 
class="s2_53"
>This will print</text>

<text 
x="186" 
y="829" 
class="s3_53"
>0</text>

<text 
x="196" 
y="829" 
class="s2_53"
>,</text>

<text 
x="207" 
y="829" 
class="s3_53"
>1</text>

<text 
x="218" 
y="829" 
class="s2_53"
>,</text>

<text 
x="229" 
y="829" 
class="s3_53"
>2</text>

<text 
x="239" 
y="829" 
class="s2_53"
>, and</text>

<text 
x="288" 
y="829" 
class="s3_53"
>4</text>

<text 
x="298" 
y="829" 
class="s2_53"
>.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
