<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 390 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_390{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_390{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_390{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_390{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_390{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_390{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_390{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_390"
>Subqueries</text>

<text 
x="55" 
y="122" 
class="s2_390"
>In SQL, you can</text>

<text 
x="205" 
y="122" 
class="s3_390"
>SELECT</text>

<text 
x="274" 
y="122" 
class="s2_390"
>from (and</text>

<text 
x="367" 
y="122" 
class="s3_390"
>JOIN</text>

<text 
x="409" 
y="122" 
class="s2_390"
>) the results of queries as if they were tables. So if</text>

<text 
x="55" 
y="151" 
class="s2_390"
>you wanted to find the smallest</text>

<text 
x="335" 
y="151" 
class="s3_390"
>user_id</text>

<text 
x="415" 
y="151" 
class="s2_390"
>of anyone interested in SQL, you could use a</text>

<text 
x="55" 
y="181" 
dx="0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_390"
>subquery. (Of course, you could do the same calculation using a</text>

<text 
x="623" 
y="181" 
class="s3_390"
>JOIN</text>

<text 
x="665" 
y="181" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4" 
class="s2_390"
>, but that wouldn’t</text>

<text 
x="55" 
y="211" 
class="s2_390"
>illustrate subqueries.)</text>

<text 
x="76" 
y="256" 
dx="0,0,0,0,0,0,0,4.6,0,0" 
class="s4_390"
>SELECT MIN</text>

<text 
x="156" 
y="256" 
class="s5_390"
>(</text>

<text 
x="163" 
y="256" 
class="s6_390"
>user_id</text>

<text 
x="219" 
y="256" 
class="s5_390"
>)</text>

<text 
x="235" 
y="256" 
class="s4_390"
>AS</text>

<text 
x="258" 
y="256" 
class="s6_390"
>min_user_id</text>

<text 
x="353" 
y="256" 
class="s4_390"
>FROM</text>

<text 
x="76" 
y="271" 
class="s5_390"
>(</text>

<text 
x="84" 
y="271" 
class="s4_390"
>SELECT</text>

<text 
x="140" 
y="271" 
class="s6_390"
>user_id</text>

<text 
x="203" 
y="271" 
class="s4_390"
>FROM</text>

<text 
x="242" 
y="271" 
class="s6_390"
>user_interests</text>

<text 
x="361" 
y="271" 
class="s4_390"
>WHERE</text>

<text 
x="408" 
y="271" 
class="s6_390"
>interest</text>

<text 
x="480" 
y="271" 
class="s5_390"
>=</text>

<text 
x="495" 
y="271" 
class="s7_390"
>'SQL'</text>

<text 
x="535" 
y="271" 
class="s5_390"
>)</text>

<text 
x="551" 
y="271" 
class="s6_390"
>sql_interests</text>

<text 
x="653" 
y="271" 
class="s5_390"
>;</text>

<text 
x="55" 
y="324" 
class="s2_390"
>Given the way we’ve designed NotQuiteABase, we get this for free. (Our query results are</text>

<text 
x="55" 
y="352" 
class="s2_390"
>actual tables.)</text>

<text 
x="76" 
y="397" 
class="s6_390"
>likes_sql_user_ids</text>

<text 
x="227" 
y="397" 
class="s5_390"
>=</text>

<text 
x="242" 
y="397" 
class="s6_390"
>user_interests</text>

<text 
x="361" 
y="397" 
class="s5_390"
>\</text>

<text 
x="108" 
y="412" 
class="s5_390"
>.</text>

<text 
x="116" 
y="412" 
class="s6_390"
>where</text>

<text 
x="156" 
y="412" 
class="s5_390"
>(</text>

<text 
x="163" 
y="412" 
class="s4_390"
>lambda</text>

<text 
x="219" 
y="412" 
class="s6_390"
>row</text>

<text 
x="242" 
y="412" 
class="s5_390"
>:</text>

<text 
x="258" 
y="412" 
class="s6_390"
>row</text>

<text 
x="282" 
y="412" 
class="s5_390"
>[</text>

<text 
x="290" 
y="412" 
class="s7_390"
>"interest"</text>

<text 
x="369" 
y="412" 
dx="0,0,4.6,0" 
class="s5_390"
>] ==</text>

<text 
x="408" 
y="412" 
class="s7_390"
>"SQL"</text>

<text 
x="448" 
y="412" 
dx="0,0,4.6" 
class="s5_390"
>) \</text>

<text 
x="108" 
y="428" 
class="s5_390"
>.</text>

<text 
x="116" 
y="428" 
class="s6_390"
>select</text>

<text 
x="163" 
y="428" 
class="s5_390"
>(</text>

<text 
x="171" 
y="428" 
class="s6_390"
>keep_columns</text>

<text 
x="266" 
y="428" 
class="s5_390"
>=[</text>

<text 
x="282" 
y="428" 
class="s7_390"
>'user_id'</text>

<text 
x="353" 
y="428" 
class="s5_390"
>])</text>

<text 
x="76" 
y="458" 
class="s6_390"
>likes_sql_user_ids</text>

<text 
x="219" 
y="458" 
class="s5_390"
>.</text>

<text 
x="227" 
y="458" 
class="s6_390"
>group_by</text>

<text 
x="290" 
y="458" 
class="s5_390"
>(</text>

<text 
x="298" 
y="458" 
class="s6_390"
>group_by_columns</text>

<text 
x="424" 
y="458" 
class="s5_390"
>=[],</text>

<text 
x="298" 
y="474" 
class="s6_390"
>aggregates</text>

<text 
x="377" 
y="474" 
class="s5_390"
>={</text>

<text 
x="401" 
y="474" 
class="s7_390"
>"min_user_id"</text>

<text 
x="511" 
y="474" 
class="s5_390"
>:</text>

<text 
x="527" 
y="474" 
class="s6_390"
>min_user_id</text>

<text 
x="622" 
y="474" 
class="s5_390"
>})</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
