<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 148 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_148{
fill: #BEBEBE;
}

.s1_148{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s2_148{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s3_148{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s4_148{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_148{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s6_148{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_148{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s8_148{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s9_148{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s10_148{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s11_148{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s12_148{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s13_148{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #737373;
}
.s14_148{
font-size: 16.50px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s15_148{
font-size: 16.50px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<path fill-rule="evenodd" d="M93.5,455.5l722.5,0c3,0,5.5,2.5,5.5,5.5l0,99c0,3.1,-2.5,5.5,-5.5,5.5l-722.5,0c-3,0,-5.5,-2.4,-5.5,-5.5l0,-99c0,-3,2.5,-5.5,5.5,-5.5m0,1.1l722.5,0c2.4,0,4.4,2,4.4,4.4l0,99c0,2.5,-2,4.4,-4.4,4.4l-722.5,0c-2.4,0,-4.4,-1.9,-4.4,-4.4l0,-99c0,-2.4,2,-4.4,4.4,-4.4Z" class="g1_148" />
<text 
x="55" 
y="74" 
class="s1_148"
>When</text>

<text 
x="113" 
y="74" 
class="s2_148"
>f</text>

<text 
x="129" 
y="74" 
class="s1_148"
>is a function of many variables, it has multiple</text>

<text 
x="542" 
y="74" 
class="s3_148"
>partial derivatives</text>

<text 
x="704" 
y="74" 
class="s1_148"
>, each indicating</text>

<text 
x="55" 
y="104" 
class="s1_148"
>how</text>

<text 
x="98" 
y="104" 
class="s2_148"
>f</text>

<text 
x="114" 
y="104" 
class="s1_148"
>changes when we make small changes in just one of the input variables.</text>

<text 
x="55" 
y="145" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_148"
>We calculate its</text>

<text 
x="199" 
y="145" 
class="s3_148"
>i</text>

<text 
x="205" 
y="145" 
class="s1_148"
>th partial derivative by treating it as a function of just its</text>

<text 
x="705" 
y="145" 
class="s3_148"
>i</text>

<text 
x="711" 
y="145" 
class="s1_148"
>th variable,</text>

<text 
x="55" 
y="172" 
class="s1_148"
>holding the other variables fixed:</text>

<text 
x="76" 
y="217" 
class="s4_148"
>def</text>

<text 
x="108" 
y="217" 
class="s5_148"
>partial_difference_quotient</text>

<text 
x="322" 
y="217" 
class="s6_148"
>(</text>

<text 
x="329" 
y="217" 
class="s7_148"
>f</text>

<text 
x="337" 
y="217" 
class="s6_148"
>,</text>

<text 
x="353" 
y="217" 
class="s7_148"
>v</text>

<text 
x="361" 
y="217" 
class="s6_148"
>,</text>

<text 
x="377" 
y="217" 
class="s7_148"
>i</text>

<text 
x="385" 
y="217" 
class="s6_148"
>,</text>

<text 
x="401" 
y="217" 
class="s7_148"
>h</text>

<text 
x="408" 
y="217" 
class="s6_148"
>):</text>

<text 
x="108" 
y="233" 
dx="0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,4.6,0,0,4.6,0,0,0" 
class="s8_148"
>"""compute the ith partial difference quotient of f at v"""</text>

<text 
x="108" 
y="248" 
class="s7_148"
>w</text>

<text 
x="124" 
y="248" 
dx="0,0,4.6" 
class="s6_148"
>= [</text>

<text 
x="148" 
y="248" 
class="s7_148"
>v_j</text>

<text 
x="179" 
y="248" 
dx="0,0,4.6" 
class="s6_148"
>+ (</text>

<text 
x="203" 
y="248" 
class="s7_148"
>h</text>

<text 
x="219" 
y="248" 
class="s4_148"
>if</text>

<text 
x="242" 
y="248" 
class="s7_148"
>j</text>

<text 
x="258" 
y="248" 
class="s6_148"
>==</text>

<text 
x="282" 
y="248" 
class="s7_148"
>i</text>

<text 
x="298" 
y="248" 
class="s4_148"
>else</text>

<text 
x="337" 
y="248" 
class="s9_148"
>0</text>

<text 
x="345" 
y="248" 
class="s6_148"
>)</text>

<text 
x="385" 
y="248" 
dx="0,0,4.6,0,0,0,4.6,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6" 
class="s10_148"
># add h to just the ith element of v</text>

<text 
x="148" 
y="264" 
class="s4_148"
>for</text>

<text 
x="179" 
y="264" 
class="s7_148"
>j</text>

<text 
x="187" 
y="264" 
class="s6_148"
>,</text>

<text 
x="203" 
y="264" 
class="s7_148"
>v_j</text>

<text 
x="235" 
y="264" 
class="s11_148"
>in</text>

<text 
x="258" 
y="264" 
class="s12_148"
>enumerate</text>

<text 
x="329" 
y="264" 
class="s6_148"
>(</text>

<text 
x="337" 
y="264" 
class="s7_148"
>v</text>

<text 
x="345" 
y="264" 
class="s6_148"
>)]</text>

<text 
x="108" 
y="294" 
class="s4_148"
>return</text>

<text 
x="163" 
y="294" 
class="s6_148"
>(</text>

<text 
x="171" 
y="294" 
class="s7_148"
>f</text>

<text 
x="179" 
y="294" 
class="s6_148"
>(</text>

<text 
x="187" 
y="294" 
class="s7_148"
>w</text>

<text 
x="195" 
y="294" 
dx="0,0,4.6" 
class="s6_148"
>) -</text>

<text 
x="227" 
y="294" 
class="s7_148"
>f</text>

<text 
x="235" 
y="294" 
class="s6_148"
>(</text>

<text 
x="242" 
y="294" 
class="s7_148"
>v</text>

<text 
x="250" 
y="294" 
dx="0,0,0,4.6" 
class="s6_148"
>)) /</text>

<text 
x="290" 
y="294" 
class="s7_148"
>h</text>

<text 
x="55" 
y="347" 
class="s1_148"
>after which we can estimate the gradient the same way:</text>

<text 
x="76" 
y="392" 
class="s4_148"
>def</text>

<text 
x="108" 
y="392" 
class="s5_148"
>estimate_gradient</text>

<text 
x="242" 
y="392" 
class="s6_148"
>(</text>

<text 
x="250" 
y="392" 
class="s7_148"
>f</text>

<text 
x="258" 
y="392" 
class="s6_148"
>,</text>

<text 
x="274" 
y="392" 
class="s7_148"
>v</text>

<text 
x="282" 
y="392" 
class="s6_148"
>,</text>

<text 
x="298" 
y="392" 
class="s7_148"
>h</text>

<text 
x="306" 
y="392" 
class="s6_148"
>=</text>

<text 
x="314" 
y="392" 
class="s9_148"
>0.00001</text>

<text 
x="369" 
y="392" 
class="s6_148"
>):</text>

<text 
x="108" 
y="408" 
class="s4_148"
>return</text>

<text 
x="163" 
y="408" 
class="s6_148"
>[</text>

<text 
x="171" 
y="408" 
class="s7_148"
>partial_difference_quotient</text>

<text 
x="385" 
y="408" 
class="s6_148"
>(</text>

<text 
x="393" 
y="408" 
class="s7_148"
>f</text>

<text 
x="401" 
y="408" 
class="s6_148"
>,</text>

<text 
x="416" 
y="408" 
class="s7_148"
>v</text>

<text 
x="424" 
y="408" 
class="s6_148"
>,</text>

<text 
x="440" 
y="408" 
class="s7_148"
>i</text>

<text 
x="448" 
y="408" 
class="s6_148"
>,</text>

<text 
x="464" 
y="408" 
class="s7_148"
>h</text>

<text 
x="472" 
y="408" 
class="s6_148"
>)</text>

<text 
x="171" 
y="423" 
class="s4_148"
>for</text>

<text 
x="203" 
y="423" 
class="s7_148"
>i</text>

<text 
x="211" 
y="423" 
class="s6_148"
>,</text>

<text 
x="227" 
y="423" 
class="s7_148"
>_</text>

<text 
x="242" 
y="423" 
class="s11_148"
>in</text>

<text 
x="266" 
y="423" 
class="s12_148"
>enumerate</text>

<text 
x="337" 
y="423" 
class="s6_148"
>(</text>

<text 
x="345" 
y="423" 
class="s7_148"
>v</text>

<text 
x="353" 
y="423" 
class="s6_148"
>)]</text>

<text 
x="421" 
y="480" 
dx="0,1.1,1.1,1.1" 
class="s13_148"
>NOTE</text>

<text 
x="97" 
y="510" 
dx="0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s14_148"
>A major drawback to this “estimate using difference quotients” approach is that it’s computationally</text>

<text 
x="97" 
y="530" 
class="s14_148"
>expensive. If</text>

<text 
x="187" 
y="530" 
class="s6_148"
>v</text>

<text 
x="199" 
y="530" 
class="s14_148"
>has length</text>

<text 
x="270" 
y="530" 
class="s15_148"
>n</text>

<text 
x="278" 
y="530" 
class="s14_148"
>,</text>

<text 
x="287" 
y="530" 
class="s6_148"
>estimate_gradient</text>

<text 
x="425" 
y="530" 
class="s14_148"
>has to evaluate</text>

<text 
x="527" 
y="530" 
class="s6_148"
>f</text>

<text 
x="539" 
y="530" 
class="s14_148"
>on</text>

<text 
x="560" 
y="530" 
class="s15_148"
>2n</text>

<text 
x="580" 
y="530" 
dx="0,0,0,-0.3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s14_148"
>different inputs. If you’re</text>

<text 
x="97" 
y="552" 
class="s14_148"
>repeatedly estimating gradients, you’re doing a whole lot of extra work.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

]]></style>

</svg>
