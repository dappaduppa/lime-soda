<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 151 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_151{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_151{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_151{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_151{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_151{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s6_151{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_151{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s8_151{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s9_151{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s10_151{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s11_151{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s12_151{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s13_151{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.8,0,0,0,0,0,0" 
class="s1_151"
>Putting It All Together</text>

<text 
x="55" 
y="122" 
class="s2_151"
>In the general case, we have some</text>

<text 
x="360" 
y="122" 
class="s3_151"
>target_fn</text>

<text 
x="460" 
y="122" 
class="s2_151"
>that we want to minimize, and we also have</text>

<text 
x="55" 
y="151" 
class="s2_151"
>its</text>

<text 
x="81" 
y="151" 
class="s3_151"
>gradient_fn</text>

<text 
x="197" 
y="151" 
class="s2_151"
>. For example, the</text>

<text 
x="362" 
y="151" 
class="s3_151"
>target_fn</text>

<text 
x="462" 
y="151" 
class="s2_151"
>could represent the errors in a model as a</text>

<text 
x="55" 
y="181" 
class="s2_151"
>function of its parameters, and we might want to find the parameters that make the errors</text>

<text 
x="55" 
y="209" 
class="s2_151"
>as small as possible.</text>

<text 
x="55" 
y="247" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_151"
>Furthermore, letâ€™s say we have (somehow) chosen a starting value for the parameters</text>

<text 
x="55" 
y="275" 
class="s3_151"
>theta_0</text>

<text 
x="128" 
y="275" 
class="s2_151"
>. Then we can implement gradient descent as:</text>

<text 
x="76" 
y="322" 
class="s4_151"
>def</text>

<text 
x="108" 
y="322" 
class="s5_151"
>minimize_batch</text>

<text 
x="219" 
y="322" 
class="s6_151"
>(</text>

<text 
x="227" 
y="322" 
class="s7_151"
>target_fn</text>

<text 
x="298" 
y="322" 
class="s6_151"
>,</text>

<text 
x="314" 
y="322" 
class="s7_151"
>gradient_fn</text>

<text 
x="401" 
y="322" 
class="s6_151"
>,</text>

<text 
x="416" 
y="322" 
class="s7_151"
>theta_0</text>

<text 
x="472" 
y="322" 
class="s6_151"
>,</text>

<text 
x="487" 
y="322" 
class="s7_151"
>tolerance</text>

<text 
x="559" 
y="322" 
class="s6_151"
>=</text>

<text 
x="567" 
y="322" 
class="s8_151"
>0.000001</text>

<text 
x="630" 
y="322" 
class="s6_151"
>):</text>

<text 
x="108" 
y="337" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0" 
class="s9_151"
>"""use gradient descent to find theta that minimizes target function"""</text>

<text 
x="108" 
y="368" 
class="s7_151"
>step_sizes</text>

<text 
x="195" 
y="368" 
dx="0,0,4.6" 
class="s6_151"
>= [</text>

<text 
x="219" 
y="368" 
class="s8_151"
>100</text>

<text 
x="242" 
y="368" 
class="s6_151"
>,</text>

<text 
x="258" 
y="368" 
class="s8_151"
>10</text>

<text 
x="274" 
y="368" 
class="s6_151"
>,</text>

<text 
x="290" 
y="368" 
class="s8_151"
>1</text>

<text 
x="298" 
y="368" 
class="s6_151"
>,</text>

<text 
x="314" 
y="368" 
class="s8_151"
>0.1</text>

<text 
x="337" 
y="368" 
class="s6_151"
>,</text>

<text 
x="353" 
y="368" 
class="s8_151"
>0.01</text>

<text 
x="385" 
y="368" 
class="s6_151"
>,</text>

<text 
x="401" 
y="368" 
class="s8_151"
>0.001</text>

<text 
x="440" 
y="368" 
class="s6_151"
>,</text>

<text 
x="456" 
y="368" 
class="s8_151"
>0.0001</text>

<text 
x="503" 
y="368" 
class="s6_151"
>,</text>

<text 
x="519" 
y="368" 
class="s8_151"
>0.00001</text>

<text 
x="574" 
y="368" 
class="s6_151"
>]</text>

<text 
x="108" 
y="399" 
class="s7_151"
>theta</text>

<text 
x="156" 
y="399" 
class="s6_151"
>=</text>

<text 
x="171" 
y="399" 
class="s7_151"
>theta_0</text>

<text 
x="440" 
y="399" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s10_151"
># set theta to initial value</text>

<text 
x="108" 
y="414" 
class="s7_151"
>target_fn</text>

<text 
x="187" 
y="414" 
class="s6_151"
>=</text>

<text 
x="203" 
y="414" 
class="s7_151"
>safe</text>

<text 
x="235" 
y="414" 
class="s6_151"
>(</text>

<text 
x="242" 
y="414" 
class="s7_151"
>target_fn</text>

<text 
x="314" 
y="414" 
class="s6_151"
>)</text>

<text 
x="440" 
y="414" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s10_151"
># safe version of target_fn</text>

<text 
x="108" 
y="430" 
class="s7_151"
>value</text>

<text 
x="156" 
y="430" 
class="s6_151"
>=</text>

<text 
x="171" 
y="430" 
class="s7_151"
>target_fn</text>

<text 
x="242" 
y="430" 
class="s6_151"
>(</text>

<text 
x="250" 
y="430" 
class="s7_151"
>theta</text>

<text 
x="290" 
y="430" 
class="s6_151"
>)</text>

<text 
x="440" 
y="430" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s10_151"
># value we're minimizing</text>

<text 
x="108" 
y="461" 
class="s4_151"
>while</text>

<text 
x="156" 
y="461" 
class="s11_151"
>True</text>

<text 
x="187" 
y="461" 
class="s6_151"
>:</text>

<text 
x="140" 
y="476" 
class="s7_151"
>gradient</text>

<text 
x="211" 
y="476" 
class="s6_151"
>=</text>

<text 
x="227" 
y="476" 
class="s7_151"
>gradient_fn</text>

<text 
x="314" 
y="476" 
class="s6_151"
>(</text>

<text 
x="322" 
y="476" 
class="s7_151"
>theta</text>

<text 
x="361" 
y="476" 
class="s6_151"
>)</text>

<text 
x="140" 
y="491" 
class="s7_151"
>next_thetas</text>

<text 
x="235" 
y="491" 
dx="0,0,4.6" 
class="s6_151"
>= [</text>

<text 
x="258" 
y="491" 
class="s7_151"
>step</text>

<text 
x="290" 
y="491" 
class="s6_151"
>(</text>

<text 
x="298" 
y="491" 
class="s7_151"
>theta</text>

<text 
x="337" 
y="491" 
class="s6_151"
>,</text>

<text 
x="353" 
y="491" 
class="s7_151"
>gradient</text>

<text 
x="416" 
y="491" 
dx="0,0,4.6" 
class="s6_151"
>, -</text>

<text 
x="440" 
y="491" 
class="s7_151"
>step_size</text>

<text 
x="511" 
y="491" 
class="s6_151"
>)</text>

<text 
x="258" 
y="507" 
class="s4_151"
>for</text>

<text 
x="290" 
y="507" 
class="s7_151"
>step_size</text>

<text 
x="369" 
y="507" 
class="s12_151"
>in</text>

<text 
x="393" 
y="507" 
class="s7_151"
>step_sizes</text>

<text 
x="472" 
y="507" 
class="s6_151"
>]</text>

<text 
x="140" 
y="538" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s10_151"
># choose the one that minimizes the error function</text>

<text 
x="140" 
y="553" 
class="s7_151"
>next_theta</text>

<text 
x="227" 
y="553" 
class="s6_151"
>=</text>

<text 
x="242" 
y="553" 
class="s11_151"
>min</text>

<text 
x="266" 
y="553" 
class="s6_151"
>(</text>

<text 
x="274" 
y="553" 
class="s7_151"
>next_thetas</text>

<text 
x="361" 
y="553" 
class="s6_151"
>,</text>

<text 
x="377" 
y="553" 
class="s7_151"
>key</text>

<text 
x="401" 
y="553" 
class="s6_151"
>=</text>

<text 
x="408" 
y="553" 
class="s7_151"
>target_fn</text>

<text 
x="480" 
y="553" 
class="s6_151"
>)</text>

<text 
x="140" 
y="568" 
class="s7_151"
>next_value</text>

<text 
x="227" 
y="568" 
class="s6_151"
>=</text>

<text 
x="242" 
y="568" 
class="s7_151"
>target_fn</text>

<text 
x="314" 
y="568" 
class="s6_151"
>(</text>

<text 
x="322" 
y="568" 
class="s7_151"
>next_theta</text>

<text 
x="401" 
y="568" 
class="s6_151"
>)</text>

<text 
x="140" 
y="599" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0" 
class="s10_151"
># stop if we're "converging"</text>

<text 
x="140" 
y="615" 
class="s4_151"
>if</text>

<text 
x="163" 
y="615" 
class="s11_151"
>abs</text>

<text 
x="187" 
y="615" 
class="s6_151"
>(</text>

<text 
x="195" 
y="615" 
class="s7_151"
>value</text>

<text 
x="242" 
y="615" 
class="s6_151"
>-</text>

<text 
x="258" 
y="615" 
class="s7_151"
>next_value</text>

<text 
x="337" 
y="615" 
dx="0,0,4.6" 
class="s6_151"
>) &lt;</text>

<text 
x="369" 
y="615" 
class="s7_151"
>tolerance</text>

<text 
x="440" 
y="615" 
class="s6_151"
>:</text>

<text 
x="171" 
y="630" 
class="s4_151"
>return</text>

<text 
x="227" 
y="630" 
class="s7_151"
>theta</text>

<text 
x="140" 
y="645" 
class="s4_151"
>else</text>

<text 
x="171" 
y="645" 
class="s6_151"
>:</text>

<text 
x="171" 
y="661" 
class="s7_151"
>theta</text>

<text 
x="211" 
y="661" 
class="s6_151"
>,</text>

<text 
x="227" 
y="661" 
class="s7_151"
>value</text>

<text 
x="274" 
y="661" 
class="s6_151"
>=</text>

<text 
x="290" 
y="661" 
class="s7_151"
>next_theta</text>

<text 
x="369" 
y="661" 
class="s6_151"
>,</text>

<text 
x="385" 
y="661" 
class="s7_151"
>next_value</text>

<text 
x="55" 
y="714" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0" 
class="s2_151"
>We called it</text>

<text 
x="164" 
y="714" 
class="s3_151"
>minimize_batch</text>

<text 
x="318" 
y="714" 
class="s2_151"
>because, for each gradient step, it looks at the entire data set</text>

<text 
x="55" 
y="743" 
class="s2_151"
>(because</text>

<text 
x="137" 
y="743" 
class="s3_151"
>target_fn</text>

<text 
x="237" 
y="743" 
class="s2_151"
>returns the error on the whole data set). In the next section, weâ€™ll see</text>

<text 
x="55" 
y="773" 
class="s2_151"
>an alternative approach that only looks at one data point at a time.</text>

<text 
x="55" 
y="811" 
class="s2_151"
>Sometimes weâ€™ll instead want to</text>

<text 
x="347" 
y="811" 
class="s13_151"
>maximize</text>

<text 
x="435" 
y="811" 
class="s2_151"
>a function, which we can do by minimizing its</text>

<text 
x="55" 
y="839" 
class="s2_151"
>negative (which has a corresponding negative gradient):</text>

<text 
x="76" 
y="884" 
class="s4_151"
>def</text>

<text 
x="108" 
y="884" 
class="s5_151"
>negate</text>

<text 
x="156" 
y="884" 
class="s6_151"
>(</text>

<text 
x="163" 
y="884" 
class="s7_151"
>f</text>

<text 
x="171" 
y="884" 
class="s6_151"
>):</text>

<text 
x="108" 
y="900" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s9_151"
>"""return a function that for any input x returns -f(x)"""</text>

<text 
x="108" 
y="915" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_151"
>return lambda</text>

<text 
x="219" 
y="915" 
class="s6_151"
>*</text>

<text 
x="227" 
y="915" 
class="s7_151"
>args</text>

<text 
x="258" 
y="915" 
dx="0,0,4.6,0" 
class="s6_151"
>, **</text>

<text 
x="290" 
y="915" 
class="s7_151"
>kwargs</text>

<text 
x="337" 
y="915" 
dx="0,0,4.6" 
class="s6_151"
>: -</text>

<text 
x="361" 
y="915" 
class="s7_151"
>f</text>

<text 
x="369" 
y="915" 
class="s6_151"
>(*</text>

<text 
x="385" 
y="915" 
class="s7_151"
>args</text>

<text 
x="416" 
y="915" 
dx="0,0,4.6,0" 
class="s6_151"
>, **</text>

<text 
x="448" 
y="915" 
class="s7_151"
>kwargs</text>

<text 
x="495" 
y="915" 
class="s6_151"
>)</text>

<text 
x="76" 
y="946" 
class="s4_151"
>def</text>

<text 
x="108" 
y="946" 
class="s5_151"
>negate_all</text>

<text 
x="187" 
y="946" 
class="s6_151"
>(</text>

<text 
x="195" 
y="946" 
class="s7_151"
>f</text>

<text 
x="203" 
y="946" 
class="s6_151"
>):</text>

<text 
x="108" 
y="961" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s9_151"
>"""the same when f returns a list of numbers"""</text>

<text 
x="108" 
y="977" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_151"
>return lambda</text>

<text 
x="219" 
y="977" 
class="s6_151"
>*</text>

<text 
x="227" 
y="977" 
class="s7_151"
>args</text>

<text 
x="258" 
y="977" 
dx="0,0,4.6,0" 
class="s6_151"
>, **</text>

<text 
x="290" 
y="977" 
class="s7_151"
>kwargs</text>

<text 
x="337" 
y="977" 
dx="0,0,4.6,0" 
class="s6_151"
>: [-</text>

<text 
x="369" 
y="977" 
class="s7_151"
>y</text>

<text 
x="385" 
y="977" 
class="s4_151"
>for</text>

<text 
x="416" 
y="977" 
class="s7_151"
>y</text>

<text 
x="432" 
y="977" 
class="s12_151"
>in</text>

<text 
x="456" 
y="977" 
class="s7_151"
>f</text>

<text 
x="464" 
y="977" 
class="s6_151"
>(*</text>

<text 
x="480" 
y="977" 
class="s7_151"
>args</text>

<text 
x="511" 
y="977" 
dx="0,0,4.6,0" 
class="s6_151"
>, **</text>

<text 
x="543" 
y="977" 
class="s7_151"
>kwargs</text>

<text 
x="590" 
y="977" 
class="s6_151"
>)]</text>

<text 
x="76" 
y="1007" 
class="s4_151"
>def</text>

<text 
x="108" 
y="1007" 
class="s5_151"
>maximize_batch</text>

<text 
x="219" 
y="1007" 
class="s6_151"
>(</text>

<text 
x="227" 
y="1007" 
class="s7_151"
>target_fn</text>

<text 
x="298" 
y="1007" 
class="s6_151"
>,</text>

<text 
x="314" 
y="1007" 
class="s7_151"
>gradient_fn</text>

<text 
x="401" 
y="1007" 
class="s6_151"
>,</text>

<text 
x="416" 
y="1007" 
class="s7_151"
>theta_0</text>

<text 
x="472" 
y="1007" 
class="s6_151"
>,</text>

<text 
x="487" 
y="1007" 
class="s7_151"
>tolerance</text>

<text 
x="559" 
y="1007" 
class="s6_151"
>=</text>

<text 
x="567" 
y="1007" 
class="s8_151"
>0.000001</text>

<text 
x="630" 
y="1007" 
class="s6_151"
>):</text>

<text 
x="108" 
y="1023" 
class="s4_151"
>return</text>

<text 
x="163" 
y="1023" 
class="s7_151"
>minimize_batch</text>

<text 
x="274" 
y="1023" 
class="s6_151"
>(</text>

<text 
x="282" 
y="1023" 
class="s7_151"
>negate</text>

<text 
x="329" 
y="1023" 
class="s6_151"
>(</text>

<text 
x="337" 
y="1023" 
class="s7_151"
>target_fn</text>

<text 
x="408" 
y="1023" 
class="s6_151"
>),</text>

<text 
x="282" 
y="1038" 
class="s7_151"
>negate_all</text>

<text 
x="361" 
y="1038" 
class="s6_151"
>(</text>

<text 
x="369" 
y="1038" 
class="s7_151"
>gradient_fn</text>

<text 
x="456" 
y="1038" 
class="s6_151"
>),</text>

<text 
x="282" 
y="1054" 
class="s7_151"
>theta_0</text>

<text 
x="337" 
y="1054" 
class="s6_151"
>,</text>

<text 
x="282" 
y="1069" 
class="s7_151"
>tolerance</text>

<text 
x="353" 
y="1069" 
class="s6_151"
>)</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
