<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 83 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_83{
stroke: #000000;
stroke-width: 1.0996486;
stroke-linecap: square;
stroke-linejoin: miter;
}

.s1_83{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_83{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #8E0012;
}
.s3_83{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s4_83{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
dx="0,0,0,0,-0.6,0,0,0,0,0,0,0,-0.6,0,0,0,0,0,0,0,0,0,0" 
class="s1_83"
>For Further Exploration</text>

<path d="M61.6,108.9l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_83" />
<text 
x="82" 
y="118" 
class="s2_83"
>seaborn</text>

<text 
x="156" 
y="118" 
class="s3_83"
>is built on top of</text>

<text 
x="307" 
y="118" 
class="s4_83"
>matplotlib</text>

<text 
x="418" 
y="118" 
class="s3_83"
>and allows you to easily produce prettier (and</text>

<text 
x="82" 
y="144" 
class="s3_83"
>more complex) visualizations.</text>

<path d="M61.6,181.5l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_83" />
<text 
x="82" 
y="191" 
class="s2_83"
>D3.js</text>

<text 
x="135" 
y="191" 
class="s3_83"
>is a JavaScript library for producing sophisticated interactive visualizations for</text>

<text 
x="82" 
y="216" 
class="s3_83"
>the web. Although it is not in Python, it is both trendy and widely used, and it is well</text>

<text 
x="82" 
y="242" 
class="s3_83"
>worth your while to be familiar with it.</text>

<path d="M61.6,279.5l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_83" />
<text 
x="82" 
y="289" 
class="s2_83"
>Bokeh</text>

<text 
x="145" 
y="289" 
class="s3_83"
>is a newer library that brings D3-style visualizations into Python.</text>

<path d="M61.6,326.8l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_83" />
<text 
x="82" 
y="336" 
class="s2_83"
>ggplot</text>

<text 
x="144" 
y="336" 
class="s3_83"
>is a Python port of the popular R library</text>

<text 
x="501" 
y="336" 
class="s4_83"
>ggplot2</text>

<text 
x="575" 
y="336" 
class="s3_83"
>, which is widely used for</text>

<text 
x="82" 
y="361" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s3_83"
>creating “publication quality” charts and graphics. It’s probably most interesting if</text>

<text 
x="82" 
y="387" 
class="s3_83"
>you’re already an avid</text>

<text 
x="285" 
y="387" 
class="s4_83"
>ggplot2</text>

<text 
x="364" 
y="387" 
dx="0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s3_83"
>user, and possibly a little opaque if you’re not.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
