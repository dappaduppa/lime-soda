<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 405 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_405{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_405{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_405{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_405{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_405"
>An Aside: Combiners</text>

<text 
x="55" 
y="122" 
class="s2_405"
>One thing you have probably noticed is that many of our mappers seem to include a bunch</text>

<text 
x="55" 
y="149" 
class="s2_405"
>of extra information. For example, when counting words, rather than emitting</text>

<text 
x="743" 
y="149" 
dx="0,0,0,0,0,0,0,6.1,0" 
class="s3_405"
>(word, 1)</text>

<text 
x="55" 
y="179" 
class="s2_405"
>and summing over the values, we could have emitted</text>

<text 
x="527" 
y="179" 
dx="0,0,0,0,0,0,0,6.1,0,0,0,0" 
class="s3_405"
>(word, None)</text>

<text 
x="659" 
y="179" 
class="s2_405"
>and just taken the</text>

<text 
x="55" 
y="209" 
class="s2_405"
>length.</text>

<text 
x="55" 
y="247" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_405"
>One reason we didn’t do this is that, in the distributed setting, we sometimes want to use</text>

<text 
x="55" 
y="275" 
class="s4_405"
>combiners</text>

<text 
x="152" 
y="275" 
class="s2_405"
>to reduce the amount of data that has to be transferred around from machine to</text>

<text 
x="55" 
y="302" 
class="s2_405"
>machine. If one of our mapper machines sees the word “data” 500 times, we can tell it to</text>

<text 
x="55" 
y="330" 
class="s2_405"
>combine the 500 instances of</text>

<text 
x="316" 
y="330" 
dx="0,0,0,0,0,0,0,0,0,6.1,0" 
class="s3_405"
>("data", 1)</text>

<text 
x="438" 
y="330" 
class="s2_405"
>into a single</text>

<text 
x="551" 
y="330" 
dx="0,0,0,0,0,0,0,0,0,6.1,0,0,0" 
class="s3_405"
>("data", 500)</text>

<text 
x="694" 
y="330" 
class="s2_405"
>before handing</text>

<text 
x="55" 
y="359" 
dx="0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_405"
>off to the reducing machine. This results in a lot less data getting moved around, which</text>

<text 
x="55" 
y="387" 
class="s2_405"
>can make our algorithm substantially faster still.</text>

<text 
x="55" 
y="425" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0" 
class="s2_405"
>Because of the way we wrote our reducer, it would handle this combined data correctly. (If</text>

<text 
x="55" 
y="453" 
class="s2_405"
>we’d written it using</text>

<text 
x="243" 
y="453" 
class="s3_405"
>len</text>

<text 
x="280" 
y="453" 
class="s2_405"
>it would not have.)</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
