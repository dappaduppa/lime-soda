<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 50 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_50{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s2_50{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s3_50{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s4_50{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s5_50{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s6_50{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_50{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s8_50{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s9_50{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s10_50{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s11_50{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #CC0000;
}
.s12_50{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #00CCFF;
}
.s13_50{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="76" 
y="64" 
class="s1_50"
>"joelgrus"</text>

<text 
x="163" 
y="64" 
class="s2_50"
>in</text>

<text 
x="187" 
y="64" 
class="s3_50"
>tweet_values</text>

<text 
x="329" 
y="64" 
dx="0,0,4.6,0,0,0" 
class="s4_50"
># True</text>

<text 
x="55" 
y="117" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>Dictionary keys must be immutable; in particular, you cannot use</text>

<text 
x="634" 
y="117" 
class="s6_50"
>list</text>

<text 
x="676" 
y="117" 
class="s5_50"
>s as keys. If you</text>

<text 
x="55" 
y="147" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>need a multipart key, you should use a</text>

<text 
x="397" 
y="147" 
class="s6_50"
>tuple</text>

<text 
x="455" 
y="147" 
class="s5_50"
>or figure out a way to turn the key into a</text>

<text 
x="55" 
y="177" 
class="s5_50"
>string.</text>

<text 
x="55" 
y="225" 
class="s7_50"
>defaultdict</text>

<text 
x="55" 
y="262" 
class="s5_50"
>Imagine that you’re trying to count the words in a document. An obvious approach is to</text>

<text 
x="55" 
y="290" 
class="s5_50"
>create a dictionary in which the keys are words and the values are counts. As you check</text>

<text 
x="55" 
y="317" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>each word, you can increment its count if it’s already in the dictionary and add it to the</text>

<text 
x="55" 
y="345" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0" 
class="s5_50"
>dictionary if it’s not:</text>

<text 
x="76" 
y="390" 
class="s3_50"
>word_counts</text>

<text 
x="171" 
y="390" 
dx="0,0,4.6,0" 
class="s8_50"
>= {}</text>

<text 
x="76" 
y="405" 
class="s9_50"
>for</text>

<text 
x="108" 
y="405" 
class="s3_50"
>word</text>

<text 
x="148" 
y="405" 
class="s2_50"
>in</text>

<text 
x="171" 
y="405" 
class="s3_50"
>document</text>

<text 
x="235" 
y="405" 
class="s8_50"
>:</text>

<text 
x="108" 
y="421" 
class="s9_50"
>if</text>

<text 
x="132" 
y="421" 
class="s3_50"
>word</text>

<text 
x="171" 
y="421" 
class="s2_50"
>in</text>

<text 
x="195" 
y="421" 
class="s3_50"
>word_counts</text>

<text 
x="282" 
y="421" 
class="s8_50"
>:</text>

<text 
x="140" 
y="436" 
class="s3_50"
>word_counts</text>

<text 
x="227" 
y="436" 
class="s8_50"
>[</text>

<text 
x="235" 
y="436" 
class="s3_50"
>word</text>

<text 
x="266" 
y="436" 
dx="0,0,4.6,0" 
class="s8_50"
>] +=</text>

<text 
x="306" 
y="436" 
class="s10_50"
>1</text>

<text 
x="108" 
y="452" 
class="s9_50"
>else</text>

<text 
x="140" 
y="452" 
class="s8_50"
>:</text>

<text 
x="140" 
y="467" 
class="s3_50"
>word_counts</text>

<text 
x="227" 
y="467" 
class="s8_50"
>[</text>

<text 
x="235" 
y="467" 
class="s3_50"
>word</text>

<text 
x="266" 
y="467" 
dx="0,0,4.6" 
class="s8_50"
>] =</text>

<text 
x="298" 
y="467" 
class="s10_50"
>1</text>

<text 
x="55" 
y="520" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>You could also use the “forgiveness is better than permission” approach and just handle</text>

<text 
x="55" 
y="547" 
class="s5_50"
>the exception from trying to look up a missing key:</text>

<text 
x="76" 
y="593" 
class="s3_50"
>word_counts</text>

<text 
x="171" 
y="593" 
dx="0,0,4.6,0" 
class="s8_50"
>= {}</text>

<text 
x="76" 
y="608" 
class="s9_50"
>for</text>

<text 
x="108" 
y="608" 
class="s3_50"
>word</text>

<text 
x="148" 
y="608" 
class="s2_50"
>in</text>

<text 
x="171" 
y="608" 
class="s3_50"
>document</text>

<text 
x="235" 
y="608" 
class="s8_50"
>:</text>

<text 
x="108" 
y="623" 
class="s9_50"
>try</text>

<text 
x="132" 
y="623" 
class="s8_50"
>:</text>

<text 
x="140" 
y="639" 
class="s3_50"
>word_counts</text>

<text 
x="227" 
y="639" 
class="s8_50"
>[</text>

<text 
x="235" 
y="639" 
class="s3_50"
>word</text>

<text 
x="266" 
y="639" 
dx="0,0,4.6,0" 
class="s8_50"
>] +=</text>

<text 
x="306" 
y="639" 
class="s10_50"
>1</text>

<text 
x="108" 
y="654" 
class="s9_50"
>except</text>

<text 
x="163" 
y="654" 
class="s11_50"
>KeyError</text>

<text 
x="227" 
y="654" 
class="s8_50"
>:</text>

<text 
x="140" 
y="670" 
class="s3_50"
>word_counts</text>

<text 
x="227" 
y="670" 
class="s8_50"
>[</text>

<text 
x="235" 
y="670" 
class="s3_50"
>word</text>

<text 
x="266" 
y="670" 
dx="0,0,4.6" 
class="s8_50"
>] =</text>

<text 
x="298" 
y="670" 
class="s10_50"
>1</text>

<text 
x="55" 
y="722" 
dx="0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>A third approach is to use</text>

<text 
x="285" 
y="722" 
class="s6_50"
>get</text>

<text 
x="317" 
y="722" 
class="s5_50"
>, which behaves gracefully for missing keys:</text>

<text 
x="76" 
y="770" 
class="s3_50"
>word_counts</text>

<text 
x="171" 
y="770" 
dx="0,0,4.6,0" 
class="s8_50"
>= {}</text>

<text 
x="76" 
y="785" 
class="s9_50"
>for</text>

<text 
x="108" 
y="785" 
class="s3_50"
>word</text>

<text 
x="148" 
y="785" 
class="s2_50"
>in</text>

<text 
x="171" 
y="785" 
class="s3_50"
>document</text>

<text 
x="235" 
y="785" 
class="s8_50"
>:</text>

<text 
x="108" 
y="800" 
class="s3_50"
>previous_count</text>

<text 
x="227" 
y="800" 
class="s8_50"
>=</text>

<text 
x="242" 
y="800" 
class="s3_50"
>word_counts</text>

<text 
x="329" 
y="800" 
class="s8_50"
>.</text>

<text 
x="337" 
y="800" 
class="s3_50"
>get</text>

<text 
x="361" 
y="800" 
class="s8_50"
>(</text>

<text 
x="369" 
y="800" 
class="s3_50"
>word</text>

<text 
x="401" 
y="800" 
class="s8_50"
>,</text>

<text 
x="416" 
y="800" 
class="s10_50"
>0</text>

<text 
x="424" 
y="800" 
class="s8_50"
>)</text>

<text 
x="108" 
y="816" 
class="s3_50"
>word_counts</text>

<text 
x="195" 
y="816" 
class="s8_50"
>[</text>

<text 
x="203" 
y="816" 
class="s3_50"
>word</text>

<text 
x="235" 
y="816" 
dx="0,0,4.6" 
class="s8_50"
>] =</text>

<text 
x="266" 
y="816" 
class="s3_50"
>previous_count</text>

<text 
x="385" 
y="816" 
class="s8_50"
>+</text>

<text 
x="401" 
y="816" 
class="s10_50"
>1</text>

<text 
x="55" 
y="869" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>Every one of these is slightly unwieldy, which is why</text>

<text 
x="530" 
y="869" 
class="s6_50"
>defaultdict</text>

<text 
x="652" 
y="869" 
class="s5_50"
>is useful. A</text>

<text 
x="55" 
y="898" 
class="s6_50"
>defaultdict</text>

<text 
x="176" 
y="898" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>is like a regular dictionary, except that when you try to look up a key it</text>

<text 
x="55" 
y="928" 
dx="0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s5_50"
>doesn’t contain, it first adds a value for it using a zero-argument function you provided</text>

<text 
x="55" 
y="956" 
class="s5_50"
>when you created it. In order to use</text>

<text 
x="371" 
y="956" 
class="s6_50"
>defaultdict</text>

<text 
x="487" 
y="956" 
class="s5_50"
>s, you have to import them from</text>

<text 
x="55" 
y="985" 
class="s6_50"
>collections</text>

<text 
x="171" 
y="985" 
class="s5_50"
>:</text>

<text 
x="76" 
y="1033" 
class="s9_50"
>from</text>

<text 
x="116" 
y="1033" 
class="s12_50"
>collections</text>

<text 
x="211" 
y="1033" 
class="s9_50"
>import</text>

<text 
x="266" 
y="1033" 
class="s3_50"
>defaultdict</text>

<text 
x="76" 
y="1063" 
class="s3_50"
>word_counts</text>

<text 
x="171" 
y="1063" 
class="s8_50"
>=</text>

<text 
x="187" 
y="1063" 
class="s3_50"
>defaultdict</text>

<text 
x="274" 
y="1063" 
class="s8_50"
>(</text>

<text 
x="282" 
y="1063" 
class="s13_50"
>int</text>

<text 
x="306" 
y="1063" 
class="s8_50"
>)</text>

<text 
x="393" 
y="1063" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6" 
class="s4_50"
># int() produces 0</text>

<text 
x="76" 
y="1079" 
class="s9_50"
>for</text>

<text 
x="108" 
y="1079" 
class="s3_50"
>word</text>

<text 
x="148" 
y="1079" 
class="s2_50"
>in</text>

<text 
x="171" 
y="1079" 
class="s3_50"
>document</text>

<text 
x="235" 
y="1079" 
class="s8_50"
>:</text>

<text 
x="108" 
y="1094" 
class="s3_50"
>word_counts</text>

<text 
x="195" 
y="1094" 
class="s8_50"
>[</text>

<text 
x="203" 
y="1094" 
class="s3_50"
>word</text>

<text 
x="235" 
y="1094" 
dx="0,0,4.6,0" 
class="s8_50"
>] +=</text>

<text 
x="274" 
y="1094" 
class="s10_50"
>1</text>

<text 
x="55" 
y="1147" 
class="s5_50"
>They can also be useful with</text>

<text 
x="312" 
y="1147" 
class="s6_50"
>list</text>

<text 
x="360" 
y="1147" 
class="s5_50"
>or</text>

<text 
x="384" 
y="1147" 
class="s6_50"
>dict</text>

<text 
x="431" 
y="1147" 
class="s5_50"
>or even your own functions:</text>

<text 
x="76" 
y="1194" 
class="s3_50"
>dd_list</text>

<text 
x="140" 
y="1194" 
class="s8_50"
>=</text>

<text 
x="156" 
y="1194" 
class="s3_50"
>defaultdict</text>

<text 
x="242" 
y="1194" 
class="s8_50"
>(</text>

<text 
x="250" 
y="1194" 
class="s13_50"
>list</text>

<text 
x="282" 
y="1194" 
class="s8_50"
>)</text>

<text 
x="393" 
y="1194" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0" 
class="s4_50"
># list() produces an empty list</text>

<text 
x="76" 
y="1210" 
class="s3_50"
>dd_list</text>

<text 
x="132" 
y="1210" 
class="s8_50"
>[</text>

<text 
x="140" 
y="1210" 
class="s10_50"
>2</text>

<text 
x="148" 
y="1210" 
class="s8_50"
>].</text>

<text 
x="163" 
y="1210" 
class="s3_50"
>append</text>

<text 
x="211" 
y="1210" 
class="s8_50"
>(</text>

<text 
x="219" 
y="1210" 
class="s10_50"
>1</text>

<text 
x="227" 
y="1210" 
class="s8_50"
>)</text>

<text 
x="393" 
y="1210" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s4_50"
># now dd_list contains {2: [1]}</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

]]></style>

</svg>
