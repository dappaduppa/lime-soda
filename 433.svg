<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 433 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_433{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_433{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="75" 
dx="0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0" 
class="s1_433"
>files, reading,</text>

<text 
x="186" 
y="75" 
class="s2_433"
>Reading Files</text>

<text 
x="76" 
y="115" 
class="s1_433"
>delimited files,</text>

<text 
x="219" 
y="115" 
class="s2_433"
>Delimited Files</text>

<text 
x="76" 
y="168" 
class="s1_433"
>text files,</text>

<text 
x="166" 
y="168" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0" 
class="s2_433"
>The Basics of Text Files</text>

<text 
x="55" 
y="221" 
dx="0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_433"
>filter function (Python),</text>

<text 
x="282" 
y="221" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0" 
class="s2_433"
>Functional Tools</text>

<text 
x="55" 
y="273" 
dx="0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0" 
class="s1_433"
>fire trucks project,</text>

<text 
x="236" 
y="273" 
dx="0,0,0,-0.4,0,0,-1.6,0,0,0,0" 
class="s2_433"
>Fire Trucks</text>

<text 
x="55" 
y="326" 
dx="0,0,0,0,-0.4,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_433"
>for comprehensions (Python),</text>

<text 
x="337" 
y="326" 
class="s2_433"
>Generators and Iterators</text>

<text 
x="55" 
y="379" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_433"
>for loops (Python),</text>

<text 
x="235" 
y="379" 
dx="0,0,0,0,0,-0.4,0,0,0,0,0,0" 
class="s2_433"
>Control Flow</text>

<text 
x="76" 
y="419" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0" 
class="s1_433"
>in list comprehensions,</text>

<text 
x="296" 
y="419" 
dx="0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0" 
class="s2_433"
>List Comprehensions</text>

<text 
x="55" 
y="472" 
dx="0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0" 
class="s1_433"
>full outer joins,</text>

<text 
x="203" 
y="472" 
class="s2_433"
>JOIN</text>

<text 
x="55" 
y="524" 
class="s1_433"
>functions (Python),</text>

<text 
x="239" 
y="524" 
class="s2_433"
>Functions</text>

<text 
x="55" 
y="575" 
class="s1_433"
>G</text>

<text 
x="55" 
y="611" 
class="s1_433"
>generators (Python),</text>

<text 
x="253" 
y="611" 
class="s2_433"
>Generators and Iterators</text>

<text 
x="55" 
y="664" 
class="s1_433"
>getting data (see data, getting)</text>

<text 
x="55" 
y="717" 
class="s1_433"
>Gibbs sampling,</text>

<text 
x="213" 
y="717" 
class="s2_433"
>An Aside: Gibbs Sampling</text>

<text 
x="462" 
y="717" 
class="s1_433"
>-</text>

<text 
x="470" 
y="717" 
class="s2_433"
>An Aside: Gibbs Sampling</text>

<text 
x="55" 
y="770" 
dx="0,0,0,0,0,0,0,-0.8,0,0,0,0,0" 
class="s1_433"
>Githubâ€™s API,</text>

<text 
x="191" 
y="770" 
class="s2_433"
>Using an Unauthenticated API</text>

<text 
x="55" 
y="822" 
class="s1_433"
>gradient,</text>

<text 
x="145" 
y="822" 
class="s2_433"
>The Idea Behind Gradient Descent</text>

<text 
x="55" 
y="875" 
class="s1_433"
>gradient descent,</text>

<text 
x="220" 
y="875" 
class="s2_433"
>Gradient Descent</text>

<text 
x="384" 
y="875" 
class="s1_433"
>-</text>

<text 
x="391" 
y="875" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0" 
class="s2_433"
>For Further Exploration</text>

<text 
x="76" 
y="915" 
class="s1_433"
>choosing the right step size,</text>

<text 
x="339" 
y="915" 
class="s2_433"
>Choosing the Right Step Size</text>

<text 
x="76" 
y="968" 
class="s1_433"
>estimating the gradient,</text>

<text 
x="305" 
y="968" 
class="s2_433"
>Estimating the Gradient</text>

<text 
x="76" 
y="1021" 
class="s1_433"
>example, minimize_batch function,</text>

<text 
x="410" 
y="1021" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0" 
class="s2_433"
>Putting It All Together</text>

<text 
x="76" 
y="1073" 
class="s1_433"
>stochastic,</text>

<text 
x="179" 
y="1073" 
class="s2_433"
>Stochastic Gradient Descent</text>

<text 
x="76" 
y="1126" 
dx="0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,-0.4,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_433"
>using for multiple regression model,</text>

<text 
x="418" 
y="1126" 
class="s2_433"
>Fitting the Model</text>

<text 
x="76" 
y="1179" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,-0.4,0,0,-0.4,0,0,0,0,0,0" 
class="s1_433"
>using in simple linear regression,</text>

<text 
x="389" 
y="1179" 
class="s2_433"
>Using Gradient Descent</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

]]></style>

</svg>
