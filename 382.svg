<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 382 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_382{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s2_382{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s3_382{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s4_382{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s5_382{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_382{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s7_382{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s8_382{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s9_382{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s10_382{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="140" 
y="64" 
class="s1_382"
>return</text>

<text 
x="195" 
y="64" 
class="s2_382"
>limit_table</text>

<text 
x="55" 
y="117" 
class="s3_382"
>after which we can easily construct NotQuiteABase equivalents to the preceding SQL</text>

<text 
x="55" 
y="145" 
class="s3_382"
>statements:</text>

<text 
x="76" 
y="190" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_382"
># SELECT * FROM users;</text>

<text 
x="76" 
y="205" 
class="s2_382"
>users</text>

<text 
x="116" 
y="205" 
class="s5_382"
>.</text>

<text 
x="124" 
y="205" 
class="s2_382"
>select</text>

<text 
x="171" 
y="205" 
class="s5_382"
>()</text>

<text 
x="76" 
y="236" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0" 
class="s4_382"
># SELECT * FROM users LIMIT 2;</text>

<text 
x="76" 
y="251" 
class="s2_382"
>users</text>

<text 
x="116" 
y="251" 
class="s5_382"
>.</text>

<text 
x="124" 
y="251" 
class="s2_382"
>limit</text>

<text 
x="163" 
y="251" 
class="s5_382"
>(</text>

<text 
x="171" 
y="251" 
class="s6_382"
>2</text>

<text 
x="179" 
y="251" 
class="s5_382"
>)</text>

<text 
x="76" 
y="282" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_382"
># SELECT user_id FROM users;</text>

<text 
x="76" 
y="298" 
class="s2_382"
>users</text>

<text 
x="116" 
y="298" 
class="s5_382"
>.</text>

<text 
x="124" 
y="298" 
class="s2_382"
>select</text>

<text 
x="171" 
y="298" 
class="s5_382"
>(</text>

<text 
x="179" 
y="298" 
class="s2_382"
>keep_columns</text>

<text 
x="274" 
y="298" 
class="s5_382"
>=[</text>

<text 
x="290" 
y="298" 
class="s7_382"
>"user_id"</text>

<text 
x="361" 
y="298" 
class="s5_382"
>])</text>

<text 
x="76" 
y="328" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0" 
class="s4_382"
># SELECT user_id FROM users WHERE name = 'Dunn';</text>

<text 
x="76" 
y="344" 
class="s2_382"
>users</text>

<text 
x="116" 
y="344" 
class="s5_382"
>.</text>

<text 
x="124" 
y="344" 
class="s2_382"
>where</text>

<text 
x="163" 
y="344" 
class="s5_382"
>(</text>

<text 
x="171" 
y="344" 
class="s1_382"
>lambda</text>

<text 
x="227" 
y="344" 
class="s2_382"
>row</text>

<text 
x="250" 
y="344" 
class="s5_382"
>:</text>

<text 
x="266" 
y="344" 
class="s2_382"
>row</text>

<text 
x="290" 
y="344" 
class="s5_382"
>[</text>

<text 
x="298" 
y="344" 
class="s7_382"
>"name"</text>

<text 
x="345" 
y="344" 
dx="0,0,4.6,0" 
class="s5_382"
>] ==</text>

<text 
x="385" 
y="344" 
class="s7_382"
>"Dunn"</text>

<text 
x="432" 
y="344" 
dx="0,0,4.6" 
class="s5_382"
>) \</text>

<text 
x="116" 
y="359" 
class="s5_382"
>.</text>

<text 
x="124" 
y="359" 
class="s2_382"
>select</text>

<text 
x="171" 
y="359" 
class="s5_382"
>(</text>

<text 
x="179" 
y="359" 
class="s2_382"
>keep_columns</text>

<text 
x="274" 
y="359" 
class="s5_382"
>=[</text>

<text 
x="290" 
y="359" 
class="s7_382"
>"user_id"</text>

<text 
x="361" 
y="359" 
class="s5_382"
>])</text>

<text 
x="76" 
y="390" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0" 
class="s4_382"
># SELECT LENGTH(name) AS name_length FROM users;</text>

<text 
x="76" 
y="405" 
class="s1_382"
>def</text>

<text 
x="108" 
y="405" 
class="s8_382"
>name_length</text>

<text 
x="195" 
y="405" 
class="s5_382"
>(</text>

<text 
x="203" 
y="405" 
class="s2_382"
>row</text>

<text 
x="227" 
y="405" 
class="s5_382"
>):</text>

<text 
x="250" 
y="405" 
class="s1_382"
>return</text>

<text 
x="306" 
y="405" 
class="s9_382"
>len</text>

<text 
x="329" 
y="405" 
class="s5_382"
>(</text>

<text 
x="337" 
y="405" 
class="s2_382"
>row</text>

<text 
x="361" 
y="405" 
class="s5_382"
>[</text>

<text 
x="369" 
y="405" 
class="s7_382"
>"name"</text>

<text 
x="416" 
y="405" 
class="s5_382"
>])</text>

<text 
x="76" 
y="436" 
class="s2_382"
>users</text>

<text 
x="116" 
y="436" 
class="s5_382"
>.</text>

<text 
x="124" 
y="436" 
class="s2_382"
>select</text>

<text 
x="171" 
y="436" 
class="s5_382"
>(</text>

<text 
x="179" 
y="436" 
class="s2_382"
>keep_columns</text>

<text 
x="274" 
y="436" 
class="s5_382"
>=[],</text>

<text 
x="179" 
y="452" 
class="s2_382"
>additional_columns</text>

<text 
x="329" 
y="452" 
dx="0,0,4.6" 
class="s5_382"
>= {</text>

<text 
x="361" 
y="452" 
class="s7_382"
>"name_length"</text>

<text 
x="472" 
y="452" 
class="s5_382"
>:</text>

<text 
x="487" 
y="452" 
class="s2_382"
>name_length</text>

<text 
x="582" 
y="452" 
class="s5_382"
>})</text>

<text 
x="55" 
y="505" 
class="s3_382"
>Notice that — unlike in the rest of the book — here I use backslash</text>

<text 
x="652" 
y="505" 
class="s10_382"
>\</text>

<text 
x="668" 
y="505" 
class="s3_382"
>to continue</text>

<text 
x="55" 
y="534" 
class="s3_382"
>statements across multiple lines. I find it makes the chained-together NotQuiteABase</text>

<text 
x="55" 
y="562" 
class="s3_382"
>queries more readable than any other way of writing them.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
