<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 25 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_25{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_25{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_25{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s4_25{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s5_25{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_25{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_25{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s8_25{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s9_25{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s10_25{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s11_25{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s12_25{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s13_25{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #00CCFF;
}
.s14_25{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s15_25{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.8,0,0,0,0,0,0,0,0,0,0" 
class="s1_25"
>Data Scientists You May Know</text>

<text 
x="55" 
y="115" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_25"
>While you’re still filling out new-hire paperwork, the VP of Fraternization comes by your</text>

<text 
x="55" 
y="143" 
class="s2_25"
>desk. She wants to encourage more connections among your members, and she asks you</text>

<text 
x="55" 
y="170" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2" 
class="s2_25"
>to design a “Data Scientists You May Know” suggester.</text>

<text 
x="55" 
y="209" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_25"
>Your first instinct is to suggest that a user might know the friends of friends. These are</text>

<text 
x="55" 
y="236" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.8,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_25"
>easy to compute: for each of a user’s friends, iterate over that person’s friends, and collect</text>

<text 
x="55" 
y="264" 
class="s2_25"
>all the results:</text>

<text 
x="76" 
y="309" 
class="s3_25"
>def</text>

<text 
x="108" 
y="309" 
class="s4_25"
>friends_of_friend_ids_bad</text>

<text 
x="306" 
y="309" 
class="s5_25"
>(</text>

<text 
x="314" 
y="309" 
class="s6_25"
>user</text>

<text 
x="345" 
y="309" 
class="s5_25"
>):</text>

<text 
x="108" 
y="324" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># "foaf" is short for "friend of a friend"</text>

<text 
x="108" 
y="339" 
class="s3_25"
>return</text>

<text 
x="163" 
y="339" 
class="s5_25"
>[</text>

<text 
x="171" 
y="339" 
class="s6_25"
>foaf</text>

<text 
x="203" 
y="339" 
class="s5_25"
>[</text>

<text 
x="211" 
y="339" 
class="s8_25"
>"id"</text>

<text 
x="242" 
y="339" 
class="s5_25"
>]</text>

<text 
x="171" 
y="355" 
class="s3_25"
>for</text>

<text 
x="203" 
y="355" 
class="s6_25"
>friend</text>

<text 
x="258" 
y="355" 
class="s9_25"
>in</text>

<text 
x="282" 
y="355" 
class="s6_25"
>user</text>

<text 
x="314" 
y="355" 
class="s5_25"
>[</text>

<text 
x="322" 
y="355" 
class="s8_25"
>"friends"</text>

<text 
x="393" 
y="355" 
class="s5_25"
>]</text>

<text 
x="440" 
y="355" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># for each of user's friends</text>

<text 
x="171" 
y="370" 
class="s3_25"
>for</text>

<text 
x="203" 
y="370" 
class="s6_25"
>foaf</text>

<text 
x="242" 
y="370" 
class="s9_25"
>in</text>

<text 
x="266" 
y="370" 
class="s6_25"
>friend</text>

<text 
x="314" 
y="370" 
class="s5_25"
>[</text>

<text 
x="322" 
y="370" 
class="s8_25"
>"friends"</text>

<text 
x="393" 
y="370" 
class="s5_25"
>]]</text>

<text 
x="440" 
y="370" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># get each of _their_ friends</text>

<text 
x="55" 
y="423" 
class="s2_25"
>When we call this on</text>

<text 
x="246" 
y="423" 
class="s10_25"
>users[0]</text>

<text 
x="335" 
y="423" 
class="s2_25"
>(Hero), it produces:</text>

<text 
x="76" 
y="470" 
class="s5_25"
>[</text>

<text 
x="84" 
y="470" 
class="s11_25"
>0</text>

<text 
x="92" 
y="470" 
class="s5_25"
>,</text>

<text 
x="108" 
y="470" 
class="s11_25"
>2</text>

<text 
x="116" 
y="470" 
class="s5_25"
>,</text>

<text 
x="132" 
y="470" 
class="s11_25"
>3</text>

<text 
x="140" 
y="470" 
class="s5_25"
>,</text>

<text 
x="156" 
y="470" 
class="s11_25"
>0</text>

<text 
x="163" 
y="470" 
class="s5_25"
>,</text>

<text 
x="179" 
y="470" 
class="s11_25"
>1</text>

<text 
x="187" 
y="470" 
class="s5_25"
>,</text>

<text 
x="203" 
y="470" 
class="s11_25"
>3</text>

<text 
x="211" 
y="470" 
class="s5_25"
>]</text>

<text 
x="55" 
y="523" 
class="s2_25"
>It includes user 0 (twice), since Hero is indeed friends with both of his friends. It includes</text>

<text 
x="55" 
y="551" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_25"
>users 1 and 2, although they are both friends with Hero already. And it includes user 3</text>

<text 
x="55" 
y="578" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_25"
>twice, as Chi is reachable through two different friends:</text>

<text 
x="76" 
y="623" 
class="s3_25"
>print</text>

<text 
x="124" 
y="623" 
class="s5_25"
>[</text>

<text 
x="132" 
y="623" 
class="s6_25"
>friend</text>

<text 
x="179" 
y="623" 
class="s5_25"
>[</text>

<text 
x="187" 
y="623" 
class="s8_25"
>"id"</text>

<text 
x="219" 
y="623" 
class="s5_25"
>]</text>

<text 
x="235" 
y="623" 
class="s3_25"
>for</text>

<text 
x="266" 
y="623" 
class="s6_25"
>friend</text>

<text 
x="322" 
y="623" 
class="s9_25"
>in</text>

<text 
x="345" 
y="623" 
class="s6_25"
>users</text>

<text 
x="385" 
y="623" 
class="s5_25"
>[</text>

<text 
x="393" 
y="623" 
class="s11_25"
>0</text>

<text 
x="401" 
y="623" 
class="s5_25"
>][</text>

<text 
x="416" 
y="623" 
class="s8_25"
>"friends"</text>

<text 
x="487" 
y="623" 
class="s5_25"
>]]</text>

<text 
x="519" 
y="623" 
dx="0,0,4.6,0,0,0,4.6,0" 
class="s7_25"
># [1, 2]</text>

<text 
x="76" 
y="639" 
class="s3_25"
>print</text>

<text 
x="124" 
y="639" 
class="s5_25"
>[</text>

<text 
x="132" 
y="639" 
class="s6_25"
>friend</text>

<text 
x="179" 
y="639" 
class="s5_25"
>[</text>

<text 
x="187" 
y="639" 
class="s8_25"
>"id"</text>

<text 
x="219" 
y="639" 
class="s5_25"
>]</text>

<text 
x="235" 
y="639" 
class="s3_25"
>for</text>

<text 
x="266" 
y="639" 
class="s6_25"
>friend</text>

<text 
x="322" 
y="639" 
class="s9_25"
>in</text>

<text 
x="345" 
y="639" 
class="s6_25"
>users</text>

<text 
x="385" 
y="639" 
class="s5_25"
>[</text>

<text 
x="393" 
y="639" 
class="s11_25"
>1</text>

<text 
x="401" 
y="639" 
class="s5_25"
>][</text>

<text 
x="416" 
y="639" 
class="s8_25"
>"friends"</text>

<text 
x="487" 
y="639" 
class="s5_25"
>]]</text>

<text 
x="519" 
y="639" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s7_25"
># [0, 2, 3]</text>

<text 
x="76" 
y="654" 
class="s3_25"
>print</text>

<text 
x="124" 
y="654" 
class="s5_25"
>[</text>

<text 
x="132" 
y="654" 
class="s6_25"
>friend</text>

<text 
x="179" 
y="654" 
class="s5_25"
>[</text>

<text 
x="187" 
y="654" 
class="s8_25"
>"id"</text>

<text 
x="219" 
y="654" 
class="s5_25"
>]</text>

<text 
x="235" 
y="654" 
class="s3_25"
>for</text>

<text 
x="266" 
y="654" 
class="s6_25"
>friend</text>

<text 
x="322" 
y="654" 
class="s9_25"
>in</text>

<text 
x="345" 
y="654" 
class="s6_25"
>users</text>

<text 
x="385" 
y="654" 
class="s5_25"
>[</text>

<text 
x="393" 
y="654" 
class="s11_25"
>2</text>

<text 
x="401" 
y="654" 
class="s5_25"
>][</text>

<text 
x="416" 
y="654" 
class="s8_25"
>"friends"</text>

<text 
x="487" 
y="654" 
class="s5_25"
>]]</text>

<text 
x="519" 
y="654" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s7_25"
># [0, 1, 3]</text>

<text 
x="55" 
y="707" 
class="s2_25"
>Knowing that people are friends-of-friends in multiple ways seems like interesting</text>

<text 
x="55" 
y="734" 
class="s2_25"
>information, so maybe instead we should produce a</text>

<text 
x="513" 
y="734" 
class="s12_25"
>count</text>

<text 
x="567" 
y="734" 
class="s2_25"
>of mutual friends. And we</text>

<text 
x="55" 
y="762" 
class="s2_25"
>definitely should use a helper function to exclude people already known to the user:</text>

<text 
x="76" 
y="807" 
class="s3_25"
>from</text>

<text 
x="116" 
y="807" 
class="s13_25"
>collections</text>

<text 
x="211" 
y="807" 
class="s3_25"
>import</text>

<text 
x="266" 
y="807" 
class="s6_25"
>Counter</text>

<text 
x="503" 
y="807" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># not loaded by default</text>

<text 
x="76" 
y="838" 
class="s3_25"
>def</text>

<text 
x="108" 
y="838" 
class="s4_25"
>not_the_same</text>

<text 
x="203" 
y="838" 
class="s5_25"
>(</text>

<text 
x="211" 
y="838" 
class="s6_25"
>user</text>

<text 
x="242" 
y="838" 
class="s5_25"
>,</text>

<text 
x="258" 
y="838" 
class="s6_25"
>other_user</text>

<text 
x="337" 
y="838" 
class="s5_25"
>):</text>

<text 
x="108" 
y="853" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s14_25"
>"""two users are not the same if they have different ids"""</text>

<text 
x="108" 
y="869" 
class="s3_25"
>return</text>

<text 
x="163" 
y="869" 
class="s6_25"
>user</text>

<text 
x="195" 
y="869" 
class="s5_25"
>[</text>

<text 
x="203" 
y="869" 
class="s8_25"
>"id"</text>

<text 
x="235" 
y="869" 
dx="0,0,4.6,0" 
class="s5_25"
>] !=</text>

<text 
x="274" 
y="869" 
class="s6_25"
>other_user</text>

<text 
x="353" 
y="869" 
class="s5_25"
>[</text>

<text 
x="361" 
y="869" 
class="s8_25"
>"id"</text>

<text 
x="393" 
y="869" 
class="s5_25"
>]</text>

<text 
x="76" 
y="900" 
class="s3_25"
>def</text>

<text 
x="108" 
y="900" 
class="s4_25"
>not_friends</text>

<text 
x="195" 
y="900" 
class="s5_25"
>(</text>

<text 
x="203" 
y="900" 
class="s6_25"
>user</text>

<text 
x="235" 
y="900" 
class="s5_25"
>,</text>

<text 
x="250" 
y="900" 
class="s6_25"
>other_user</text>

<text 
x="329" 
y="900" 
class="s5_25"
>):</text>

<text 
x="108" 
y="915" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s14_25"
>"""other_user is not a friend if he's not in user["friends"];</text>

<text 
x="108" 
y="930" 
dx="0,0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s14_25"
>that is, if he's not_the_same as all the people in user["friends"]"""</text>

<text 
x="108" 
y="946" 
class="s3_25"
>return</text>

<text 
x="163" 
y="946" 
class="s15_25"
>all</text>

<text 
x="187" 
y="946" 
class="s5_25"
>(</text>

<text 
x="195" 
y="946" 
class="s6_25"
>not_the_same</text>

<text 
x="290" 
y="946" 
class="s5_25"
>(</text>

<text 
x="298" 
y="946" 
class="s6_25"
>friend</text>

<text 
x="345" 
y="946" 
class="s5_25"
>,</text>

<text 
x="361" 
y="946" 
class="s6_25"
>other_user</text>

<text 
x="440" 
y="946" 
class="s5_25"
>)</text>

<text 
x="195" 
y="961" 
class="s3_25"
>for</text>

<text 
x="227" 
y="961" 
class="s6_25"
>friend</text>

<text 
x="282" 
y="961" 
class="s9_25"
>in</text>

<text 
x="306" 
y="961" 
class="s6_25"
>user</text>

<text 
x="337" 
y="961" 
class="s5_25"
>[</text>

<text 
x="345" 
y="961" 
class="s8_25"
>"friends"</text>

<text 
x="416" 
y="961" 
class="s5_25"
>])</text>

<text 
x="76" 
y="992" 
class="s3_25"
>def</text>

<text 
x="108" 
y="992" 
class="s4_25"
>friends_of_friend_ids</text>

<text 
x="274" 
y="992" 
class="s5_25"
>(</text>

<text 
x="282" 
y="992" 
class="s6_25"
>user</text>

<text 
x="314" 
y="992" 
class="s5_25"
>):</text>

<text 
x="108" 
y="1007" 
class="s3_25"
>return</text>

<text 
x="163" 
y="1007" 
class="s6_25"
>Counter</text>

<text 
x="219" 
y="1007" 
class="s5_25"
>(</text>

<text 
x="227" 
y="1007" 
class="s6_25"
>foaf</text>

<text 
x="258" 
y="1007" 
class="s5_25"
>[</text>

<text 
x="266" 
y="1007" 
class="s8_25"
>"id"</text>

<text 
x="298" 
y="1007" 
class="s5_25"
>]</text>

<text 
x="227" 
y="1023" 
class="s3_25"
>for</text>

<text 
x="258" 
y="1023" 
class="s6_25"
>friend</text>

<text 
x="314" 
y="1023" 
class="s9_25"
>in</text>

<text 
x="337" 
y="1023" 
class="s6_25"
>user</text>

<text 
x="369" 
y="1023" 
class="s5_25"
>[</text>

<text 
x="377" 
y="1023" 
class="s8_25"
>"friends"</text>

<text 
x="448" 
y="1023" 
class="s5_25"
>]</text>

<text 
x="487" 
y="1023" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># for each of my friends</text>

<text 
x="227" 
y="1038" 
class="s3_25"
>for</text>

<text 
x="258" 
y="1038" 
class="s6_25"
>foaf</text>

<text 
x="298" 
y="1038" 
class="s9_25"
>in</text>

<text 
x="322" 
y="1038" 
class="s6_25"
>friend</text>

<text 
x="369" 
y="1038" 
class="s5_25"
>[</text>

<text 
x="377" 
y="1038" 
class="s8_25"
>"friends"</text>

<text 
x="448" 
y="1038" 
class="s5_25"
>]</text>

<text 
x="487" 
y="1038" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># count *their* friends</text>

<text 
x="227" 
y="1054" 
class="s3_25"
>if</text>

<text 
x="250" 
y="1054" 
class="s6_25"
>not_the_same</text>

<text 
x="345" 
y="1054" 
class="s5_25"
>(</text>

<text 
x="353" 
y="1054" 
class="s6_25"
>user</text>

<text 
x="385" 
y="1054" 
class="s5_25"
>,</text>

<text 
x="401" 
y="1054" 
class="s6_25"
>foaf</text>

<text 
x="432" 
y="1054" 
class="s5_25"
>)</text>

<text 
x="487" 
y="1054" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0" 
class="s7_25"
># who aren't me</text>

<text 
x="227" 
y="1069" 
class="s9_25"
>and</text>

<text 
x="258" 
y="1069" 
class="s6_25"
>not_friends</text>

<text 
x="345" 
y="1069" 
class="s5_25"
>(</text>

<text 
x="353" 
y="1069" 
class="s6_25"
>user</text>

<text 
x="385" 
y="1069" 
class="s5_25"
>,</text>

<text 
x="401" 
y="1069" 
class="s6_25"
>foaf</text>

<text 
x="432" 
y="1069" 
class="s5_25"
>))</text>

<text 
x="487" 
y="1069" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0" 
class="s7_25"
># and aren't my friends</text>

<text 
x="76" 
y="1100" 
class="s3_25"
>print</text>

<text 
x="124" 
y="1100" 
class="s6_25"
>friends_of_friend_ids</text>

<text 
x="290" 
y="1100" 
class="s5_25"
>(</text>

<text 
x="298" 
y="1100" 
class="s6_25"
>users</text>

<text 
x="337" 
y="1100" 
class="s5_25"
>[</text>

<text 
x="345" 
y="1100" 
class="s11_25"
>3</text>

<text 
x="353" 
y="1100" 
class="s5_25"
>])</text>

<text 
x="487" 
y="1100" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0" 
class="s7_25"
># Counter({0: 2, 5: 1})</text>

<text 
x="55" 
y="1153" 
class="s2_25"
>This correctly tells Chi (</text>

<text 
x="269" 
y="1153" 
class="s10_25"
>id</text>

<text 
x="296" 
y="1153" 
class="s2_25"
>3) that she has two mutual friends with Hero (</text>

<text 
x="701" 
y="1153" 
class="s10_25"
>id</text>

<text 
x="727" 
y="1153" 
class="s2_25"
>0) but only</text>

<text 
x="55" 
y="1182" 
class="s2_25"
>one mutual friend with Clive (</text>

<text 
x="321" 
y="1182" 
class="s10_25"
>id</text>

<text 
x="348" 
y="1182" 
class="s2_25"
>5).</text>

<text 
x="55" 
y="1223" 
class="s2_25"
>As a data scientist, you know that you also might enjoy meeting users with similar</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
