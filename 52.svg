<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 52 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_52{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_52{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_52{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_52{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s5_52{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s6_52{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s7_52{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s8_52{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s9_52{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s10_52{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s11_52{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
class="s1_52"
>Sets</text>

<text 
x="55" 
y="115" 
class="s2_52"
>Another data structure is</text>

<text 
x="277" 
y="115" 
class="s3_52"
>set</text>

<text 
x="308" 
y="115" 
class="s2_52"
>, which represents a collection of</text>

<text 
x="604" 
y="115" 
class="s4_52"
>distinct</text>

<text 
x="675" 
y="115" 
class="s2_52"
>elements:</text>

<text 
x="76" 
y="162" 
class="s5_52"
>s</text>

<text 
x="92" 
y="162" 
class="s6_52"
>=</text>

<text 
x="108" 
y="162" 
class="s7_52"
>set</text>

<text 
x="132" 
y="162" 
class="s6_52"
>()</text>

<text 
x="76" 
y="178" 
class="s5_52"
>s</text>

<text 
x="84" 
y="178" 
class="s6_52"
>.</text>

<text 
x="92" 
y="178" 
class="s5_52"
>add</text>

<text 
x="116" 
y="178" 
class="s6_52"
>(</text>

<text 
x="124" 
y="178" 
class="s8_52"
>1</text>

<text 
x="132" 
y="178" 
class="s6_52"
>)</text>

<text 
x="195" 
y="178" 
dx="0,0,4.6,0,4.6,0,0,4.6,0,0,0,4.6,0,4.6,0,4.6" 
class="s9_52"
># s is now { 1 }</text>

<text 
x="76" 
y="193" 
class="s5_52"
>s</text>

<text 
x="84" 
y="193" 
class="s6_52"
>.</text>

<text 
x="92" 
y="193" 
class="s5_52"
>add</text>

<text 
x="116" 
y="193" 
class="s6_52"
>(</text>

<text 
x="124" 
y="193" 
class="s8_52"
>2</text>

<text 
x="132" 
y="193" 
class="s6_52"
>)</text>

<text 
x="195" 
y="193" 
dx="0,0,4.6,0,4.6,0,0,4.6,0,0,0,4.6,0,4.6,0,0,4.6,0,4.6" 
class="s9_52"
># s is now { 1, 2 }</text>

<text 
x="76" 
y="209" 
class="s5_52"
>s</text>

<text 
x="84" 
y="209" 
class="s6_52"
>.</text>

<text 
x="92" 
y="209" 
class="s5_52"
>add</text>

<text 
x="116" 
y="209" 
class="s6_52"
>(</text>

<text 
x="124" 
y="209" 
class="s8_52"
>2</text>

<text 
x="132" 
y="209" 
class="s6_52"
>)</text>

<text 
x="195" 
y="209" 
dx="0,0,4.6,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,4.6,0,0,4.6,0,4.6" 
class="s9_52"
># s is still { 1, 2 }</text>

<text 
x="76" 
y="224" 
class="s5_52"
>x</text>

<text 
x="92" 
y="224" 
class="s6_52"
>=</text>

<text 
x="108" 
y="224" 
class="s7_52"
>len</text>

<text 
x="132" 
y="224" 
class="s6_52"
>(</text>

<text 
x="140" 
y="224" 
class="s5_52"
>s</text>

<text 
x="148" 
y="224" 
class="s6_52"
>)</text>

<text 
x="195" 
y="224" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s9_52"
># equals 2</text>

<text 
x="76" 
y="239" 
class="s5_52"
>y</text>

<text 
x="92" 
y="239" 
class="s6_52"
>=</text>

<text 
x="108" 
y="239" 
class="s8_52"
>2</text>

<text 
x="124" 
y="239" 
class="s10_52"
>in</text>

<text 
x="148" 
y="239" 
class="s5_52"
>s</text>

<text 
x="195" 
y="239" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0" 
class="s9_52"
># equals True</text>

<text 
x="76" 
y="255" 
class="s5_52"
>z</text>

<text 
x="92" 
y="255" 
class="s6_52"
>=</text>

<text 
x="108" 
y="255" 
class="s8_52"
>3</text>

<text 
x="124" 
y="255" 
class="s10_52"
>in</text>

<text 
x="148" 
y="255" 
class="s5_52"
>s</text>

<text 
x="195" 
y="255" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s9_52"
># equals False</text>

<text 
x="55" 
y="308" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_52"
>We’ll use sets for two main reasons. The first is that</text>

<text 
x="517" 
y="308" 
class="s3_52"
>in</text>

<text 
x="543" 
y="308" 
class="s2_52"
>is a very fast operation on sets. If</text>

<text 
x="55" 
y="337" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_52"
>we have a large collection of items that we want to use for a membership test, a set is more</text>

<text 
x="55" 
y="365" 
class="s2_52"
>appropriate than a list:</text>

<text 
x="76" 
y="410" 
class="s5_52"
>stopwords_list</text>

<text 
x="195" 
y="410" 
dx="0,0,4.6" 
class="s6_52"
>= [</text>

<text 
x="219" 
y="410" 
class="s11_52"
>"a"</text>

<text 
x="242" 
y="410" 
class="s6_52"
>,</text>

<text 
x="250" 
y="410" 
class="s11_52"
>"an"</text>

<text 
x="282" 
y="410" 
class="s6_52"
>,</text>

<text 
x="290" 
y="410" 
class="s11_52"
>"at"</text>

<text 
x="322" 
y="410" 
dx="0,0,4.6" 
class="s6_52"
>] +</text>

<text 
x="353" 
y="410" 
class="s5_52"
>hundreds_of_other_words</text>

<text 
x="543" 
y="410" 
dx="0,0,4.6" 
class="s6_52"
>+ [</text>

<text 
x="567" 
y="410" 
class="s11_52"
>"yet"</text>

<text 
x="606" 
y="410" 
class="s6_52"
>,</text>

<text 
x="622" 
y="410" 
class="s11_52"
>"you"</text>

<text 
x="661" 
y="410" 
class="s6_52"
>]</text>

<text 
x="76" 
y="441" 
class="s11_52"
>"zip"</text>

<text 
x="124" 
y="441" 
class="s10_52"
>in</text>

<text 
x="148" 
y="441" 
class="s5_52"
>stopwords_list</text>

<text 
x="298" 
y="441" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s9_52"
># False, but have to check every element</text>

<text 
x="76" 
y="472" 
class="s5_52"
>stopwords_set</text>

<text 
x="187" 
y="472" 
class="s6_52"
>=</text>

<text 
x="203" 
y="472" 
class="s7_52"
>set</text>

<text 
x="227" 
y="472" 
class="s6_52"
>(</text>

<text 
x="235" 
y="472" 
class="s5_52"
>stopwords_list</text>

<text 
x="345" 
y="472" 
class="s6_52"
>)</text>

<text 
x="76" 
y="487" 
class="s11_52"
>"zip"</text>

<text 
x="124" 
y="487" 
class="s10_52"
>in</text>

<text 
x="148" 
y="487" 
class="s5_52"
>stopwords_set</text>

<text 
x="298" 
y="487" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0" 
class="s9_52"
># very fast to check</text>

<text 
x="55" 
y="540" 
class="s2_52"
>The second reason is to find the</text>

<text 
x="340" 
y="540" 
class="s4_52"
>distinct</text>

<text 
x="410" 
y="540" 
class="s2_52"
>items in a collection:</text>

<text 
x="76" 
y="585" 
class="s5_52"
>item_list</text>

<text 
x="156" 
y="585" 
dx="0,0,4.6" 
class="s6_52"
>= [</text>

<text 
x="179" 
y="585" 
class="s8_52"
>1</text>

<text 
x="187" 
y="585" 
class="s6_52"
>,</text>

<text 
x="203" 
y="585" 
class="s8_52"
>2</text>

<text 
x="211" 
y="585" 
class="s6_52"
>,</text>

<text 
x="227" 
y="585" 
class="s8_52"
>3</text>

<text 
x="235" 
y="585" 
class="s6_52"
>,</text>

<text 
x="250" 
y="585" 
class="s8_52"
>1</text>

<text 
x="258" 
y="585" 
class="s6_52"
>,</text>

<text 
x="274" 
y="585" 
class="s8_52"
>2</text>

<text 
x="282" 
y="585" 
class="s6_52"
>,</text>

<text 
x="298" 
y="585" 
class="s8_52"
>3</text>

<text 
x="306" 
y="585" 
class="s6_52"
>]</text>

<text 
x="76" 
y="600" 
class="s5_52"
>num_items</text>

<text 
x="156" 
y="600" 
class="s6_52"
>=</text>

<text 
x="171" 
y="600" 
class="s7_52"
>len</text>

<text 
x="195" 
y="600" 
class="s6_52"
>(</text>

<text 
x="203" 
y="600" 
class="s5_52"
>item_list</text>

<text 
x="274" 
y="600" 
class="s6_52"
>)</text>

<text 
x="408" 
y="600" 
dx="0,0,4.6" 
class="s9_52"
># 6</text>

<text 
x="76" 
y="616" 
class="s5_52"
>item_set</text>

<text 
x="148" 
y="616" 
class="s6_52"
>=</text>

<text 
x="163" 
y="616" 
class="s7_52"
>set</text>

<text 
x="187" 
y="616" 
class="s6_52"
>(</text>

<text 
x="195" 
y="616" 
class="s5_52"
>item_list</text>

<text 
x="266" 
y="616" 
class="s6_52"
>)</text>

<text 
x="408" 
y="616" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s9_52"
># {1, 2, 3}</text>

<text 
x="76" 
y="631" 
class="s5_52"
>num_distinct_items</text>

<text 
x="227" 
y="631" 
class="s6_52"
>=</text>

<text 
x="242" 
y="631" 
class="s7_52"
>len</text>

<text 
x="266" 
y="631" 
class="s6_52"
>(</text>

<text 
x="274" 
y="631" 
class="s5_52"
>item_set</text>

<text 
x="337" 
y="631" 
class="s6_52"
>)</text>

<text 
x="408" 
y="631" 
dx="0,0,4.6" 
class="s9_52"
># 3</text>

<text 
x="76" 
y="646" 
class="s5_52"
>distinct_item_list</text>

<text 
x="227" 
y="646" 
class="s6_52"
>=</text>

<text 
x="242" 
y="646" 
class="s7_52"
>list</text>

<text 
x="274" 
y="646" 
class="s6_52"
>(</text>

<text 
x="282" 
y="646" 
class="s5_52"
>item_set</text>

<text 
x="345" 
y="646" 
class="s6_52"
>)</text>

<text 
x="408" 
y="646" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s9_52"
># [1, 2, 3]</text>

<text 
x="55" 
y="699" 
dx="0,-1.8,0,0,0,0,0,0,0" 
class="s2_52"
>We’ll use</text>

<text 
x="143" 
y="699" 
class="s3_52"
>set</text>

<text 
x="175" 
y="699" 
class="s2_52"
>s much less frequently than</text>

<text 
x="421" 
y="699" 
class="s3_52"
>dict</text>

<text 
x="463" 
y="699" 
class="s2_52"
>s and</text>

<text 
x="514" 
y="699" 
class="s3_52"
>list</text>

<text 
x="556" 
y="699" 
class="s2_52"
>s.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
