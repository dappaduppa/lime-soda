<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 222 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_222{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_222{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_222{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s4_222{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_222{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_222{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s7_222{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s8_222{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #8E0012;
}
.s9_222{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s10_222{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_222"
>Example: Favorite Languages</text>

<text 
x="55" 
y="122" 
class="s2_222"
>The results of the first DataSciencester user survey are back, and we’ve found the</text>

<text 
x="55" 
y="149" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0" 
class="s2_222"
>preferred programming languages of our users in a number of large cities:</text>

<text 
x="76" 
y="194" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s3_222"
># each entry is ([longitude, latitude], favorite_language)</text>

<text 
x="76" 
y="225" 
class="s4_222"
>cities</text>

<text 
x="132" 
y="225" 
dx="0,0,4.6,0,0,0" 
class="s5_222"
>= [([-</text>

<text 
x="179" 
y="225" 
class="s6_222"
>122.3</text>

<text 
x="227" 
y="225" 
class="s5_222"
>,</text>

<text 
x="242" 
y="225" 
class="s6_222"
>47.53</text>

<text 
x="282" 
y="225" 
class="s5_222"
>],</text>

<text 
x="306" 
y="225" 
class="s7_222"
>"Python"</text>

<text 
x="369" 
y="225" 
class="s5_222"
>),</text>

<text 
x="401" 
y="225" 
dx="0,0,4.6,0,0,0,0,0,0" 
class="s3_222"
># Seattle</text>

<text 
x="156" 
y="240" 
dx="0,0,0,4.6" 
class="s5_222"
>([ -</text>

<text 
x="187" 
y="240" 
class="s6_222"
>96.85</text>

<text 
x="227" 
y="240" 
class="s5_222"
>,</text>

<text 
x="242" 
y="240" 
class="s6_222"
>32.85</text>

<text 
x="282" 
y="240" 
class="s5_222"
>],</text>

<text 
x="306" 
y="240" 
class="s7_222"
>"Java"</text>

<text 
x="353" 
y="240" 
class="s5_222"
>),</text>

<text 
x="401" 
y="240" 
dx="0,0,4.6,0,0,0,0,0" 
class="s3_222"
># Austin</text>

<text 
x="156" 
y="256" 
dx="0,0,0,4.6" 
class="s5_222"
>([ -</text>

<text 
x="187" 
y="256" 
class="s6_222"
>89.33</text>

<text 
x="227" 
y="256" 
class="s5_222"
>,</text>

<text 
x="242" 
y="256" 
class="s6_222"
>43.13</text>

<text 
x="282" 
y="256" 
class="s5_222"
>],</text>

<text 
x="306" 
y="256" 
class="s7_222"
>"R"</text>

<text 
x="329" 
y="256" 
class="s5_222"
>),</text>

<text 
x="401" 
y="256" 
dx="0,0,4.6,0,0,0,0,0,0" 
class="s3_222"
># Madison</text>

<text 
x="156" 
y="271" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s3_222"
># ... and so on</text>

<text 
x="76" 
y="287" 
class="s5_222"
>]</text>

<text 
x="55" 
y="339" 
dx="0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_222"
>The VP of Community Engagement wants to know if we can use these results to predict</text>

<text 
x="55" 
y="367" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4" 
class="s2_222"
>the favorite programming languages for places that weren’t part of our survey.</text>

<text 
x="55" 
y="405" 
class="s2_222"
>As usual, a good first step is plotting the data (</text>

<text 
x="464" 
y="405" 
class="s8_222"
>Figure 12-1</text>

<text 
x="567" 
y="405" 
class="s2_222"
>):</text>

<text 
x="76" 
y="451" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s3_222"
># key is language, value is pair (longitudes, latitudes)</text>

<text 
x="76" 
y="466" 
class="s4_222"
>plots</text>

<text 
x="124" 
y="466" 
dx="0,0,4.6" 
class="s5_222"
>= {</text>

<text 
x="156" 
y="466" 
class="s7_222"
>"Java"</text>

<text 
x="211" 
y="466" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0" 
class="s5_222"
>: ([], []),</text>

<text 
x="306" 
y="466" 
class="s7_222"
>"Python"</text>

<text 
x="377" 
y="466" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0" 
class="s5_222"
>: ([], []),</text>

<text 
x="472" 
y="466" 
class="s7_222"
>"R"</text>

<text 
x="503" 
y="466" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,4.6" 
class="s5_222"
>: ([], []) }</text>

<text 
x="76" 
y="497" 
dx="0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0" 
class="s3_222"
># we want each language to have a different marker and color</text>

<text 
x="76" 
y="512" 
class="s4_222"
>markers</text>

<text 
x="140" 
y="512" 
dx="0,0,4.6" 
class="s5_222"
>= {</text>

<text 
x="171" 
y="512" 
class="s7_222"
>"Java"</text>

<text 
x="227" 
y="512" 
class="s5_222"
>:</text>

<text 
x="242" 
y="512" 
class="s7_222"
>"o"</text>

<text 
x="266" 
y="512" 
class="s5_222"
>,</text>

<text 
x="282" 
y="512" 
class="s7_222"
>"Python"</text>

<text 
x="353" 
y="512" 
class="s5_222"
>:</text>

<text 
x="369" 
y="512" 
class="s7_222"
>"s"</text>

<text 
x="393" 
y="512" 
class="s5_222"
>,</text>

<text 
x="408" 
y="512" 
class="s7_222"
>"R"</text>

<text 
x="440" 
y="512" 
class="s5_222"
>:</text>

<text 
x="456" 
y="512" 
class="s7_222"
>"^"</text>

<text 
x="487" 
y="512" 
class="s5_222"
>}</text>

<text 
x="76" 
y="528" 
class="s4_222"
>colors</text>

<text 
x="140" 
y="528" 
dx="0,0,4.6" 
class="s5_222"
>= {</text>

<text 
x="171" 
y="528" 
class="s7_222"
>"Java"</text>

<text 
x="227" 
y="528" 
class="s5_222"
>:</text>

<text 
x="242" 
y="528" 
class="s7_222"
>"r"</text>

<text 
x="266" 
y="528" 
class="s5_222"
>,</text>

<text 
x="282" 
y="528" 
class="s7_222"
>"Python"</text>

<text 
x="353" 
y="528" 
class="s5_222"
>:</text>

<text 
x="369" 
y="528" 
class="s7_222"
>"b"</text>

<text 
x="393" 
y="528" 
class="s5_222"
>,</text>

<text 
x="408" 
y="528" 
class="s7_222"
>"R"</text>

<text 
x="440" 
y="528" 
class="s5_222"
>:</text>

<text 
x="456" 
y="528" 
class="s7_222"
>"g"</text>

<text 
x="487" 
y="528" 
class="s5_222"
>}</text>

<text 
x="76" 
y="558" 
class="s9_222"
>for</text>

<text 
x="108" 
y="558" 
class="s5_222"
>(</text>

<text 
x="116" 
y="558" 
class="s4_222"
>longitude</text>

<text 
x="187" 
y="558" 
class="s5_222"
>,</text>

<text 
x="203" 
y="558" 
class="s4_222"
>latitude</text>

<text 
x="266" 
y="558" 
class="s5_222"
>),</text>

<text 
x="290" 
y="558" 
class="s4_222"
>language</text>

<text 
x="361" 
y="558" 
class="s10_222"
>in</text>

<text 
x="385" 
y="558" 
class="s4_222"
>cities</text>

<text 
x="432" 
y="558" 
class="s5_222"
>:</text>

<text 
x="108" 
y="574" 
class="s4_222"
>plots</text>

<text 
x="148" 
y="574" 
class="s5_222"
>[</text>

<text 
x="156" 
y="574" 
class="s4_222"
>language</text>

<text 
x="219" 
y="574" 
class="s5_222"
>][</text>

<text 
x="235" 
y="574" 
class="s6_222"
>0</text>

<text 
x="242" 
y="574" 
class="s5_222"
>].</text>

<text 
x="258" 
y="574" 
class="s4_222"
>append</text>

<text 
x="306" 
y="574" 
class="s5_222"
>(</text>

<text 
x="314" 
y="574" 
class="s4_222"
>longitude</text>

<text 
x="385" 
y="574" 
class="s5_222"
>)</text>

<text 
x="108" 
y="589" 
class="s4_222"
>plots</text>

<text 
x="148" 
y="589" 
class="s5_222"
>[</text>

<text 
x="156" 
y="589" 
class="s4_222"
>language</text>

<text 
x="219" 
y="589" 
class="s5_222"
>][</text>

<text 
x="235" 
y="589" 
class="s6_222"
>1</text>

<text 
x="242" 
y="589" 
class="s5_222"
>].</text>

<text 
x="258" 
y="589" 
class="s4_222"
>append</text>

<text 
x="306" 
y="589" 
class="s5_222"
>(</text>

<text 
x="314" 
y="589" 
class="s4_222"
>latitude</text>

<text 
x="377" 
y="589" 
class="s5_222"
>)</text>

<text 
x="76" 
y="620" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s3_222"
># create a scatter series for each language</text>

<text 
x="76" 
y="635" 
class="s9_222"
>for</text>

<text 
x="108" 
y="635" 
class="s4_222"
>language</text>

<text 
x="171" 
y="635" 
dx="0,0,4.6" 
class="s5_222"
>, (</text>

<text 
x="195" 
y="635" 
class="s4_222"
>x</text>

<text 
x="203" 
y="635" 
class="s5_222"
>,</text>

<text 
x="219" 
y="635" 
class="s4_222"
>y</text>

<text 
x="227" 
y="635" 
class="s5_222"
>)</text>

<text 
x="242" 
y="635" 
class="s10_222"
>in</text>

<text 
x="266" 
y="635" 
class="s4_222"
>plots</text>

<text 
x="306" 
y="635" 
class="s5_222"
>.</text>

<text 
x="314" 
y="635" 
class="s4_222"
>iteritems</text>

<text 
x="385" 
y="635" 
class="s5_222"
>():</text>

<text 
x="108" 
y="651" 
class="s4_222"
>plt</text>

<text 
x="132" 
y="651" 
class="s5_222"
>.</text>

<text 
x="140" 
y="651" 
class="s4_222"
>scatter</text>

<text 
x="195" 
y="651" 
class="s5_222"
>(</text>

<text 
x="203" 
y="651" 
class="s4_222"
>x</text>

<text 
x="211" 
y="651" 
class="s5_222"
>,</text>

<text 
x="227" 
y="651" 
class="s4_222"
>y</text>

<text 
x="235" 
y="651" 
class="s5_222"
>,</text>

<text 
x="250" 
y="651" 
class="s4_222"
>color</text>

<text 
x="290" 
y="651" 
class="s5_222"
>=</text>

<text 
x="298" 
y="651" 
class="s4_222"
>colors</text>

<text 
x="345" 
y="651" 
class="s5_222"
>[</text>

<text 
x="353" 
y="651" 
class="s4_222"
>language</text>

<text 
x="416" 
y="651" 
class="s5_222"
>],</text>

<text 
x="440" 
y="651" 
class="s4_222"
>marker</text>

<text 
x="487" 
y="651" 
class="s5_222"
>=</text>

<text 
x="495" 
y="651" 
class="s4_222"
>markers</text>

<text 
x="551" 
y="651" 
class="s5_222"
>[</text>

<text 
x="559" 
y="651" 
class="s4_222"
>language</text>

<text 
x="622" 
y="651" 
class="s5_222"
>],</text>

<text 
x="250" 
y="666" 
class="s4_222"
>label</text>

<text 
x="290" 
y="666" 
class="s5_222"
>=</text>

<text 
x="298" 
y="666" 
class="s4_222"
>language</text>

<text 
x="361" 
y="666" 
class="s5_222"
>,</text>

<text 
x="377" 
y="666" 
class="s4_222"
>zorder</text>

<text 
x="424" 
y="666" 
class="s5_222"
>=</text>

<text 
x="432" 
y="666" 
class="s6_222"
>10</text>

<text 
x="448" 
y="666" 
class="s5_222"
>)</text>

<text 
x="76" 
y="697" 
class="s4_222"
>plot_state_borders</text>

<text 
x="219" 
y="697" 
class="s5_222"
>(</text>

<text 
x="227" 
y="697" 
class="s4_222"
>plt</text>

<text 
x="250" 
y="697" 
class="s5_222"
>)</text>

<text 
x="306" 
y="697" 
dx="0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0" 
class="s3_222"
># pretend we have a function that does this</text>

<text 
x="76" 
y="728" 
class="s4_222"
>plt</text>

<text 
x="100" 
y="728" 
class="s5_222"
>.</text>

<text 
x="108" 
y="728" 
class="s4_222"
>legend</text>

<text 
x="156" 
y="728" 
class="s5_222"
>(</text>

<text 
x="163" 
y="728" 
class="s4_222"
>loc</text>

<text 
x="187" 
y="728" 
class="s5_222"
>=</text>

<text 
x="195" 
y="728" 
class="s6_222"
>0</text>

<text 
x="203" 
y="728" 
class="s5_222"
>)</text>

<text 
x="306" 
y="728" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s3_222"
># let matplotlib choose the location</text>

<text 
x="76" 
y="743" 
class="s4_222"
>plt</text>

<text 
x="100" 
y="743" 
class="s5_222"
>.</text>

<text 
x="108" 
y="743" 
class="s4_222"
>axis</text>

<text 
x="140" 
y="743" 
class="s5_222"
>([-</text>

<text 
x="163" 
y="743" 
class="s6_222"
>130</text>

<text 
x="187" 
y="743" 
class="s5_222"
>,-</text>

<text 
x="203" 
y="743" 
class="s6_222"
>60</text>

<text 
x="219" 
y="743" 
class="s5_222"
>,</text>

<text 
x="227" 
y="743" 
class="s6_222"
>20</text>

<text 
x="242" 
y="743" 
class="s5_222"
>,</text>

<text 
x="250" 
y="743" 
class="s6_222"
>55</text>

<text 
x="266" 
y="743" 
class="s5_222"
>])</text>

<text 
x="306" 
y="743" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s3_222"
># set the axes</text>

<text 
x="76" 
y="774" 
class="s4_222"
>plt</text>

<text 
x="100" 
y="774" 
class="s5_222"
>.</text>

<text 
x="108" 
y="774" 
class="s4_222"
>title</text>

<text 
x="148" 
y="774" 
class="s5_222"
>(</text>

<text 
x="156" 
y="774" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s7_222"
>"Favorite Programming Languages"</text>

<text 
x="408" 
y="774" 
class="s5_222"
>)</text>

<text 
x="76" 
y="789" 
class="s4_222"
>plt</text>

<text 
x="100" 
y="789" 
class="s5_222"
>.</text>

<text 
x="108" 
y="789" 
class="s4_222"
>show</text>

<text 
x="140" 
y="789" 
class="s5_222"
>()</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
