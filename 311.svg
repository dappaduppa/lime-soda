<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 311 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_311{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s2_311{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s3_311{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #00CCFF;
}
.s4_311{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_311{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_311{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s7_311{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s8_311{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s9_311{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s10_311{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s11_311{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s12_311{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s13_311{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #CC3300;
}
.s14_311{
font-size: 16.50px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s15_311{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #8E0012;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="74" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0" 
class="s1_311"
>images pixel by pixel. Normally this isn’t all that useful for data science, but here it’s a</text>

<text 
x="55" 
y="102" 
class="s1_311"
>good choice:</text>

<text 
x="76" 
y="147" 
class="s2_311"
>import</text>

<text 
x="132" 
y="147" 
class="s3_311"
>matplotlib</text>

<text 
x="76" 
y="162" 
class="s4_311"
>weights</text>

<text 
x="140" 
y="162" 
class="s5_311"
>=</text>

<text 
x="156" 
y="162" 
class="s4_311"
>network</text>

<text 
x="211" 
y="162" 
class="s5_311"
>[</text>

<text 
x="219" 
y="162" 
class="s6_311"
>0</text>

<text 
x="227" 
y="162" 
class="s5_311"
>][</text>

<text 
x="242" 
y="162" 
class="s6_311"
>0</text>

<text 
x="250" 
y="162" 
class="s5_311"
>]</text>

<text 
x="377" 
y="162" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s7_311"
># first neuron in hidden layer</text>

<text 
x="76" 
y="178" 
class="s4_311"
>abs_weights</text>

<text 
x="171" 
y="178" 
class="s5_311"
>=</text>

<text 
x="187" 
y="178" 
class="s8_311"
>map</text>

<text 
x="211" 
y="178" 
class="s5_311"
>(</text>

<text 
x="219" 
y="178" 
class="s8_311"
>abs</text>

<text 
x="242" 
y="178" 
class="s5_311"
>,</text>

<text 
x="258" 
y="178" 
class="s4_311"
>weights</text>

<text 
x="314" 
y="178" 
class="s5_311"
>)</text>

<text 
x="377" 
y="178" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s7_311"
># darkness only depends on absolute value</text>

<text 
x="76" 
y="224" 
class="s4_311"
>grid</text>

<text 
x="116" 
y="224" 
dx="0,0,4.6" 
class="s5_311"
>= [</text>

<text 
x="140" 
y="224" 
class="s4_311"
>abs_weights</text>

<text 
x="227" 
y="224" 
class="s5_311"
>[</text>

<text 
x="235" 
y="224" 
class="s4_311"
>row</text>

<text 
x="258" 
y="224" 
class="s5_311"
>:(</text>

<text 
x="274" 
y="224" 
class="s4_311"
>row</text>

<text 
x="298" 
y="224" 
class="s5_311"
>+</text>

<text 
x="306" 
y="224" 
class="s6_311"
>5</text>

<text 
x="314" 
y="224" 
class="s5_311"
>)]</text>

<text 
x="377" 
y="224" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,4.6,0,0,0" 
class="s7_311"
># turn the weights into a 5x5 grid</text>

<text 
x="140" 
y="239" 
class="s2_311"
>for</text>

<text 
x="171" 
y="239" 
class="s4_311"
>row</text>

<text 
x="203" 
y="239" 
class="s9_311"
>in</text>

<text 
x="227" 
y="239" 
class="s8_311"
>range</text>

<text 
x="266" 
y="239" 
class="s5_311"
>(</text>

<text 
x="274" 
y="239" 
class="s6_311"
>0</text>

<text 
x="282" 
y="239" 
class="s5_311"
>,</text>

<text 
x="290" 
y="239" 
class="s6_311"
>25</text>

<text 
x="306" 
y="239" 
class="s5_311"
>,</text>

<text 
x="314" 
y="239" 
class="s6_311"
>5</text>

<text 
x="322" 
y="239" 
class="s5_311"
>)]</text>

<text 
x="377" 
y="239" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_311"
># [weights[0:5], ..., weights[20:25]]</text>

<text 
x="76" 
y="270" 
class="s4_311"
>ax</text>

<text 
x="100" 
y="270" 
class="s5_311"
>=</text>

<text 
x="116" 
y="270" 
class="s4_311"
>plt</text>

<text 
x="140" 
y="270" 
class="s5_311"
>.</text>

<text 
x="148" 
y="270" 
class="s4_311"
>gca</text>

<text 
x="171" 
y="270" 
class="s5_311"
>()</text>

<text 
x="377" 
y="270" 
dx="0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s7_311"
># to use hatching, we'll need the axis</text>

<text 
x="76" 
y="301" 
class="s4_311"
>ax</text>

<text 
x="92" 
y="301" 
class="s5_311"
>.</text>

<text 
x="100" 
y="301" 
class="s4_311"
>imshow</text>

<text 
x="148" 
y="301" 
class="s5_311"
>(</text>

<text 
x="156" 
y="301" 
class="s4_311"
>grid</text>

<text 
x="187" 
y="301" 
class="s5_311"
>,</text>

<text 
x="377" 
y="301" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s7_311"
># here same as plt.imshow</text>

<text 
x="156" 
y="316" 
class="s4_311"
>cmap</text>

<text 
x="187" 
y="316" 
class="s5_311"
>=</text>

<text 
x="195" 
y="316" 
class="s4_311"
>matplotlib</text>

<text 
x="274" 
y="316" 
class="s5_311"
>.</text>

<text 
x="282" 
y="316" 
class="s4_311"
>cm</text>

<text 
x="298" 
y="316" 
class="s5_311"
>.</text>

<text 
x="306" 
y="316" 
class="s4_311"
>binary</text>

<text 
x="353" 
y="316" 
class="s5_311"
>,</text>

<text 
x="377" 
y="316" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0" 
class="s7_311"
># use white-black color scale</text>

<text 
x="156" 
y="332" 
class="s4_311"
>interpolation</text>

<text 
x="258" 
y="332" 
class="s5_311"
>=</text>

<text 
x="266" 
y="332" 
class="s10_311"
>'none'</text>

<text 
x="314" 
y="332" 
class="s5_311"
>)</text>

<text 
x="377" 
y="332" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0" 
class="s7_311"
># plot blocks as blocks</text>

<text 
x="76" 
y="363" 
class="s2_311"
>def</text>

<text 
x="108" 
y="363" 
class="s11_311"
>patch</text>

<text 
x="148" 
y="363" 
class="s5_311"
>(</text>

<text 
x="156" 
y="363" 
class="s4_311"
>x</text>

<text 
x="163" 
y="363" 
class="s5_311"
>,</text>

<text 
x="179" 
y="363" 
class="s4_311"
>y</text>

<text 
x="187" 
y="363" 
class="s5_311"
>,</text>

<text 
x="203" 
y="363" 
class="s4_311"
>hatch</text>

<text 
x="242" 
y="363" 
class="s5_311"
>,</text>

<text 
x="258" 
y="363" 
class="s4_311"
>color</text>

<text 
x="298" 
y="363" 
class="s5_311"
>):</text>

<text 
x="108" 
y="378" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s12_311"
>"""return a matplotlib 'patch' object with the specified</text>

<text 
x="108" 
y="393" 
dx="0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s12_311"
>location, crosshatch pattern, and color"""</text>

<text 
x="108" 
y="409" 
class="s2_311"
>return</text>

<text 
x="163" 
y="409" 
class="s4_311"
>matplotlib</text>

<text 
x="242" 
y="409" 
class="s5_311"
>.</text>

<text 
x="250" 
y="409" 
class="s4_311"
>patches</text>

<text 
x="306" 
y="409" 
class="s5_311"
>.</text>

<text 
x="314" 
y="409" 
class="s4_311"
>Rectangle</text>

<text 
x="385" 
y="409" 
class="s5_311"
>((</text>

<text 
x="401" 
y="409" 
class="s4_311"
>x</text>

<text 
x="416" 
y="409" 
class="s5_311"
>-</text>

<text 
x="432" 
y="409" 
class="s6_311"
>0.5</text>

<text 
x="456" 
y="409" 
class="s5_311"
>,</text>

<text 
x="472" 
y="409" 
class="s4_311"
>y</text>

<text 
x="487" 
y="409" 
class="s5_311"
>-</text>

<text 
x="503" 
y="409" 
class="s6_311"
>0.5</text>

<text 
x="527" 
y="409" 
class="s5_311"
>),</text>

<text 
x="551" 
y="409" 
class="s6_311"
>1</text>

<text 
x="559" 
y="409" 
class="s5_311"
>,</text>

<text 
x="574" 
y="409" 
class="s6_311"
>1</text>

<text 
x="582" 
y="409" 
class="s5_311"
>,</text>

<text 
x="393" 
y="424" 
class="s4_311"
>hatch</text>

<text 
x="432" 
y="424" 
class="s5_311"
>=</text>

<text 
x="440" 
y="424" 
class="s4_311"
>hatch</text>

<text 
x="480" 
y="424" 
class="s5_311"
>,</text>

<text 
x="495" 
y="424" 
class="s4_311"
>fill</text>

<text 
x="527" 
y="424" 
class="s5_311"
>=</text>

<text 
x="535" 
y="424" 
class="s8_311"
>False</text>

<text 
x="574" 
y="424" 
class="s5_311"
>,</text>

<text 
x="590" 
y="424" 
class="s4_311"
>color</text>

<text 
x="630" 
y="424" 
class="s5_311"
>=</text>

<text 
x="638" 
y="424" 
class="s4_311"
>color</text>

<text 
x="677" 
y="424" 
class="s5_311"
>)</text>

<text 
x="76" 
y="455" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_311"
># cross-hatch the negative weights</text>

<text 
x="76" 
y="470" 
class="s2_311"
>for</text>

<text 
x="108" 
y="470" 
class="s4_311"
>i</text>

<text 
x="124" 
y="470" 
class="s9_311"
>in</text>

<text 
x="148" 
y="470" 
class="s8_311"
>range</text>

<text 
x="187" 
y="470" 
class="s5_311"
>(</text>

<text 
x="195" 
y="470" 
class="s6_311"
>5</text>

<text 
x="203" 
y="470" 
class="s5_311"
>):</text>

<text 
x="377" 
y="470" 
dx="0,0,4.6,0,0" 
class="s7_311"
># row</text>

<text 
x="108" 
y="486" 
class="s2_311"
>for</text>

<text 
x="140" 
y="486" 
class="s4_311"
>j</text>

<text 
x="156" 
y="486" 
class="s9_311"
>in</text>

<text 
x="179" 
y="486" 
class="s8_311"
>range</text>

<text 
x="219" 
y="486" 
class="s5_311"
>(</text>

<text 
x="227" 
y="486" 
class="s6_311"
>5</text>

<text 
x="235" 
y="486" 
class="s5_311"
>):</text>

<text 
x="377" 
y="486" 
dx="0,0,4.6,0,0,0,0,0" 
class="s7_311"
># column</text>

<text 
x="140" 
y="501" 
class="s2_311"
>if</text>

<text 
x="163" 
y="501" 
class="s4_311"
>weights</text>

<text 
x="219" 
y="501" 
class="s5_311"
>[</text>

<text 
x="227" 
y="501" 
class="s6_311"
>5</text>

<text 
x="235" 
y="501" 
class="s5_311"
>*</text>

<text 
x="242" 
y="501" 
class="s4_311"
>i</text>

<text 
x="258" 
y="501" 
class="s5_311"
>+</text>

<text 
x="274" 
y="501" 
class="s4_311"
>j</text>

<text 
x="282" 
y="501" 
dx="0,0,4.6" 
class="s5_311"
>] &lt;</text>

<text 
x="314" 
y="501" 
class="s6_311"
>0</text>

<text 
x="322" 
y="501" 
class="s5_311"
>:</text>

<text 
x="377" 
y="501" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,4.6,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,4.6,0" 
class="s7_311"
># row i, column j = weights[5*i + j]</text>

<text 
x="171" 
y="517" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0" 
class="s7_311"
># add black and white hatches, so visible whether dark or light</text>

<text 
x="171" 
y="532" 
class="s4_311"
>ax</text>

<text 
x="187" 
y="532" 
class="s5_311"
>.</text>

<text 
x="195" 
y="532" 
class="s4_311"
>add_patch</text>

<text 
x="266" 
y="532" 
class="s5_311"
>(</text>

<text 
x="274" 
y="532" 
class="s4_311"
>patch</text>

<text 
x="314" 
y="532" 
class="s5_311"
>(</text>

<text 
x="322" 
y="532" 
class="s4_311"
>j</text>

<text 
x="329" 
y="532" 
class="s5_311"
>,</text>

<text 
x="345" 
y="532" 
class="s4_311"
>i</text>

<text 
x="353" 
y="532" 
class="s5_311"
>,</text>

<text 
x="369" 
y="532" 
class="s10_311"
>'/'</text>

<text 
x="393" 
y="532" 
class="s5_311"
>,</text>

<text 
x="416" 
y="532" 
class="s10_311"
>"white"</text>

<text 
x="472" 
y="532" 
class="s5_311"
>))</text>

<text 
x="171" 
y="547" 
class="s4_311"
>ax</text>

<text 
x="187" 
y="547" 
class="s5_311"
>.</text>

<text 
x="195" 
y="547" 
class="s4_311"
>add_patch</text>

<text 
x="266" 
y="547" 
class="s5_311"
>(</text>

<text 
x="274" 
y="547" 
class="s4_311"
>patch</text>

<text 
x="314" 
y="547" 
class="s5_311"
>(</text>

<text 
x="322" 
y="547" 
class="s4_311"
>j</text>

<text 
x="329" 
y="547" 
class="s5_311"
>,</text>

<text 
x="345" 
y="547" 
class="s4_311"
>i</text>

<text 
x="353" 
y="547" 
class="s5_311"
>,</text>

<text 
x="369" 
y="547" 
class="s10_311"
>'</text>

<text 
x="377" 
y="547" 
class="s13_311"
>\\</text>

<text 
x="393" 
y="547" 
class="s10_311"
>'</text>

<text 
x="401" 
y="547" 
class="s5_311"
>,</text>

<text 
x="416" 
y="547" 
class="s10_311"
>"black"</text>

<text 
x="472" 
y="547" 
class="s5_311"
>))</text>

<text 
x="76" 
y="578" 
class="s4_311"
>plt</text>

<text 
x="100" 
y="578" 
class="s5_311"
>.</text>

<text 
x="108" 
y="578" 
class="s4_311"
>show</text>

<text 
x="140" 
y="578" 
class="s5_311"
>()</text>

<image preserveAspectRatio="none" x="55" y="611" width="799" height="200" xlink:href="311/img/1.png" />
<text 
x="318" 
y="837" 
dx="0,0,0,0,0,-0.6,0,0,0,0,0,0,0,0,-1.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s14_311"
>Figure 18-4. Weights for the hidden layer</text>

<text 
x="55" 
y="879" 
class="s1_311"
>In</text>

<text 
x="78" 
y="879" 
class="s15_311"
>Figure 18-4</text>

<text 
x="187" 
y="879" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_311"
>we see that the first hidden neuron has large positive weights in the left</text>

<text 
x="55" 
y="906" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_311"
>column and in the center of the middle row, while it has large negative weights in the right</text>

<text 
x="55" 
y="934" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_311"
>column. (And you can see that it has a pretty large negative bias, which means that it</text>

<text 
x="55" 
y="961" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0" 
class="s1_311"
>won’t fire strongly unless it gets precisely the positive inputs it’s “looking for.”)</text>

<text 
x="55" 
y="1000" 
class="s1_311"
>Indeed, on those inputs, it does what you’d expect:</text>

<text 
x="76" 
y="1045" 
class="s4_311"
>left_column_only</text>

<text 
x="211" 
y="1045" 
dx="0,0,4.6" 
class="s5_311"
>= [</text>

<text 
x="235" 
y="1045" 
class="s6_311"
>1</text>

<text 
x="242" 
y="1045" 
class="s5_311"
>,</text>

<text 
x="258" 
y="1045" 
class="s6_311"
>0</text>

<text 
x="266" 
y="1045" 
class="s5_311"
>,</text>

<text 
x="282" 
y="1045" 
class="s6_311"
>0</text>

<text 
x="290" 
y="1045" 
class="s5_311"
>,</text>

<text 
x="306" 
y="1045" 
class="s6_311"
>0</text>

<text 
x="314" 
y="1045" 
class="s5_311"
>,</text>

<text 
x="329" 
y="1045" 
class="s6_311"
>0</text>

<text 
x="337" 
y="1045" 
dx="0,0,4.6" 
class="s5_311"
>] *</text>

<text 
x="369" 
y="1045" 
class="s6_311"
>5</text>

<text 
x="76" 
y="1060" 
class="s2_311"
>print</text>

<text 
x="124" 
y="1060" 
class="s4_311"
>feed_forward</text>

<text 
x="219" 
y="1060" 
class="s5_311"
>(</text>

<text 
x="227" 
y="1060" 
class="s4_311"
>network</text>

<text 
x="282" 
y="1060" 
class="s5_311"
>,</text>

<text 
x="298" 
y="1060" 
class="s4_311"
>left_column_only</text>

<text 
x="424" 
y="1060" 
class="s5_311"
>)[</text>

<text 
x="440" 
y="1060" 
class="s6_311"
>0</text>

<text 
x="448" 
y="1060" 
class="s5_311"
>][</text>

<text 
x="464" 
y="1060" 
class="s6_311"
>0</text>

<text 
x="472" 
y="1060" 
class="s5_311"
>]</text>

<text 
x="495" 
y="1060" 
dx="0,0,4.6,0,0" 
class="s7_311"
># 1.0</text>

<text 
x="76" 
y="1091" 
class="s4_311"
>center_middle_row</text>

<text 
x="219" 
y="1091" 
dx="0,0,4.6" 
class="s5_311"
>= [</text>

<text 
x="242" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="250" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="266" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="274" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="290" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="298" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="314" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="322" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="337" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="345" 
y="1091" 
dx="0,0,4.6" 
class="s5_311"
>] *</text>

<text 
x="377" 
y="1091" 
class="s6_311"
>2</text>

<text 
x="393" 
y="1091" 
dx="0,0,4.6" 
class="s5_311"
>+ [</text>

<text 
x="416" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="424" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="440" 
y="1091" 
class="s6_311"
>1</text>

<text 
x="448" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="464" 
y="1091" 
class="s6_311"
>1</text>

<text 
x="472" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="487" 
y="1091" 
class="s6_311"
>1</text>

<text 
x="495" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="511" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="519" 
y="1091" 
dx="0,0,4.6,0,4.6" 
class="s5_311"
>] + [</text>

<text 
x="559" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="567" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="582" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="590" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="606" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="614" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="630" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="638" 
y="1091" 
class="s5_311"
>,</text>

<text 
x="653" 
y="1091" 
class="s6_311"
>0</text>

<text 
x="661" 
y="1091" 
dx="0,0,4.6" 
class="s5_311"
>] *</text>

<text 
x="693" 
y="1091" 
class="s6_311"
>2</text>

<text 
x="76" 
y="1106" 
class="s2_311"
>print</text>

<text 
x="124" 
y="1106" 
class="s4_311"
>feed_forward</text>

<text 
x="219" 
y="1106" 
class="s5_311"
>(</text>

<text 
x="227" 
y="1106" 
class="s4_311"
>network</text>

<text 
x="282" 
y="1106" 
class="s5_311"
>,</text>

<text 
x="298" 
y="1106" 
class="s4_311"
>center_middle_row</text>

<text 
x="432" 
y="1106" 
class="s5_311"
>)[</text>

<text 
x="448" 
y="1106" 
class="s6_311"
>0</text>

<text 
x="456" 
y="1106" 
class="s5_311"
>][</text>

<text 
x="472" 
y="1106" 
class="s6_311"
>0</text>

<text 
x="480" 
y="1106" 
class="s5_311"
>]</text>

<text 
x="503" 
y="1106" 
dx="0,0,4.6,0,0,0" 
class="s7_311"
># 0.95</text>

<text 
x="76" 
y="1137" 
class="s4_311"
>right_column_only</text>

<text 
x="219" 
y="1137" 
dx="0,0,4.6" 
class="s5_311"
>= [</text>

<text 
x="242" 
y="1137" 
class="s6_311"
>0</text>

<text 
x="250" 
y="1137" 
class="s5_311"
>,</text>

<text 
x="266" 
y="1137" 
class="s6_311"
>0</text>

<text 
x="274" 
y="1137" 
class="s5_311"
>,</text>

<text 
x="290" 
y="1137" 
class="s6_311"
>0</text>

<text 
x="298" 
y="1137" 
class="s5_311"
>,</text>

<text 
x="314" 
y="1137" 
class="s6_311"
>0</text>

<text 
x="322" 
y="1137" 
class="s5_311"
>,</text>

<text 
x="337" 
y="1137" 
class="s6_311"
>1</text>

<text 
x="345" 
y="1137" 
dx="0,0,4.6" 
class="s5_311"
>] *</text>

<text 
x="377" 
y="1137" 
class="s6_311"
>5</text>

<text 
x="76" 
y="1153" 
class="s2_311"
>print</text>

<text 
x="124" 
y="1153" 
class="s4_311"
>feed_forward</text>

<text 
x="219" 
y="1153" 
class="s5_311"
>(</text>

<text 
x="227" 
y="1153" 
class="s4_311"
>network</text>

<text 
x="282" 
y="1153" 
class="s5_311"
>,</text>

<text 
x="298" 
y="1153" 
class="s4_311"
>right_column_only</text>

<text 
x="432" 
y="1153" 
class="s5_311"
>)[</text>

<text 
x="448" 
y="1153" 
class="s6_311"
>0</text>

<text 
x="456" 
y="1153" 
class="s5_311"
>][</text>

<text 
x="472" 
y="1153" 
class="s6_311"
>0</text>

<text 
x="480" 
y="1153" 
class="s5_311"
>]</text>

<text 
x="503" 
y="1153" 
dx="0,0,4.6,0,0" 
class="s7_311"
># 0.0</text>

<text 
x="55" 
y="1205" 
dx="0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_311"
>Similarly, the middle hidden neuron seems to “like” horizontal lines but not side vertical</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
