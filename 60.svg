<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 60 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_60{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_60{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_60{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_60{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_60{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #00CCFF;
}
.s6_60{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_60{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s8_60{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s9_60{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s10_60{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s11_60{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s12_60{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s13_60{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
class="s1_60"
>Randomness</text>

<text 
x="55" 
y="115" 
class="s2_60"
>As we learn data science, we will frequently need to generate random numbers, which we</text>

<text 
x="55" 
y="143" 
class="s2_60"
>can do with the</text>

<text 
x="195" 
y="143" 
class="s3_60"
>random</text>

<text 
x="264" 
y="143" 
class="s2_60"
>module:</text>

<text 
x="76" 
y="190" 
class="s4_60"
>import</text>

<text 
x="132" 
y="190" 
class="s5_60"
>random</text>

<text 
x="76" 
y="221" 
class="s6_60"
>four_uniform_randoms</text>

<text 
x="242" 
y="221" 
dx="0,0,4.6" 
class="s7_60"
>= [</text>

<text 
x="266" 
y="221" 
class="s6_60"
>random</text>

<text 
x="314" 
y="221" 
class="s7_60"
>.</text>

<text 
x="322" 
y="221" 
class="s6_60"
>random</text>

<text 
x="369" 
y="221" 
class="s7_60"
>()</text>

<text 
x="393" 
y="221" 
class="s4_60"
>for</text>

<text 
x="424" 
y="221" 
class="s6_60"
>_</text>

<text 
x="440" 
y="221" 
class="s8_60"
>in</text>

<text 
x="464" 
y="221" 
class="s9_60"
>range</text>

<text 
x="503" 
y="221" 
class="s7_60"
>(</text>

<text 
x="511" 
y="221" 
class="s10_60"
>4</text>

<text 
x="519" 
y="221" 
class="s7_60"
>)]</text>

<text 
x="76" 
y="251" 
class="s11_60"
>#</text>

<text 
x="100" 
y="251" 
class="s11_60"
>[0.8444218515250481,</text>

<text 
x="306" 
y="251" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s11_60"
># random.random() produces numbers</text>

<text 
x="76" 
y="267" 
class="s11_60"
>#</text>

<text 
x="108" 
y="267" 
class="s11_60"
>0.7579544029403025,</text>

<text 
x="306" 
y="267" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,4.6" 
class="s11_60"
># uniformly between 0 and 1</text>

<text 
x="76" 
y="282" 
class="s11_60"
>#</text>

<text 
x="108" 
y="282" 
class="s11_60"
>0.420571580830845,</text>

<text 
x="306" 
y="282" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0" 
class="s11_60"
># it's the random function we'll use</text>

<text 
x="76" 
y="298" 
class="s11_60"
>#</text>

<text 
x="108" 
y="298" 
class="s11_60"
>0.25891675029296335]</text>

<text 
x="306" 
y="298" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0" 
class="s11_60"
># most often</text>

<text 
x="55" 
y="350" 
class="s2_60"
>The</text>

<text 
x="94" 
y="350" 
class="s3_60"
>random</text>

<text 
x="163" 
y="350" 
class="s2_60"
>module actually produces pseudorandom (that is, deterministic) numbers</text>

<text 
x="55" 
y="380" 
class="s2_60"
>based on an internal state that you can set with</text>

<text 
x="470" 
y="380" 
class="s3_60"
>random.seed</text>

<text 
x="591" 
y="380" 
class="s2_60"
>if you want to get</text>

<text 
x="55" 
y="410" 
class="s2_60"
>reproducible results:</text>

<text 
x="76" 
y="455" 
class="s6_60"
>random</text>

<text 
x="124" 
y="455" 
class="s7_60"
>.</text>

<text 
x="132" 
y="455" 
class="s6_60"
>seed</text>

<text 
x="163" 
y="455" 
class="s7_60"
>(</text>

<text 
x="171" 
y="455" 
class="s10_60"
>10</text>

<text 
x="187" 
y="455" 
class="s7_60"
>)</text>

<text 
x="266" 
y="455" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0" 
class="s11_60"
># set the seed to 10</text>

<text 
x="76" 
y="470" 
class="s4_60"
>print</text>

<text 
x="124" 
y="470" 
class="s6_60"
>random</text>

<text 
x="171" 
y="470" 
class="s7_60"
>.</text>

<text 
x="179" 
y="470" 
class="s6_60"
>random</text>

<text 
x="227" 
y="470" 
class="s7_60"
>()</text>

<text 
x="266" 
y="470" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s11_60"
># 0.57140259469</text>

<text 
x="76" 
y="486" 
class="s6_60"
>random</text>

<text 
x="124" 
y="486" 
class="s7_60"
>.</text>

<text 
x="132" 
y="486" 
class="s6_60"
>seed</text>

<text 
x="163" 
y="486" 
class="s7_60"
>(</text>

<text 
x="171" 
y="486" 
class="s10_60"
>10</text>

<text 
x="187" 
y="486" 
class="s7_60"
>)</text>

<text 
x="266" 
y="486" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0" 
class="s11_60"
># reset the seed to 10</text>

<text 
x="76" 
y="501" 
class="s4_60"
>print</text>

<text 
x="124" 
y="501" 
class="s6_60"
>random</text>

<text 
x="171" 
y="501" 
class="s7_60"
>.</text>

<text 
x="179" 
y="501" 
class="s6_60"
>random</text>

<text 
x="227" 
y="501" 
class="s7_60"
>()</text>

<text 
x="266" 
y="501" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s11_60"
># 0.57140259469 again</text>

<text 
x="55" 
y="554" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_60"
>We’ll sometimes use</text>

<text 
x="243" 
y="554" 
class="s3_60"
>random.randrange</text>

<text 
x="411" 
y="554" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_60"
>, which takes either 1 or 2 arguments and returns</text>

<text 
x="55" 
y="584" 
class="s2_60"
>an element chosen randomly from the corresponding</text>

<text 
x="524" 
y="584" 
class="s3_60"
>range()</text>

<text 
x="598" 
y="584" 
class="s2_60"
>:</text>

<text 
x="76" 
y="631" 
class="s6_60"
>random</text>

<text 
x="124" 
y="631" 
class="s7_60"
>.</text>

<text 
x="132" 
y="631" 
class="s6_60"
>randrange</text>

<text 
x="203" 
y="631" 
class="s7_60"
>(</text>

<text 
x="211" 
y="631" 
class="s10_60"
>10</text>

<text 
x="227" 
y="631" 
class="s7_60"
>)</text>

<text 
x="266" 
y="631" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0" 
class="s11_60"
># choose randomly from range(10) = [0, 1, ..., 9]</text>

<text 
x="76" 
y="646" 
class="s6_60"
>random</text>

<text 
x="124" 
y="646" 
class="s7_60"
>.</text>

<text 
x="132" 
y="646" 
class="s6_60"
>randrange</text>

<text 
x="203" 
y="646" 
class="s7_60"
>(</text>

<text 
x="211" 
y="646" 
class="s10_60"
>3</text>

<text 
x="219" 
y="646" 
class="s7_60"
>,</text>

<text 
x="235" 
y="646" 
class="s10_60"
>6</text>

<text 
x="242" 
y="646" 
class="s7_60"
>)</text>

<text 
x="266" 
y="646" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s11_60"
># choose randomly from range(3, 6) = [3, 4, 5]</text>

<text 
x="55" 
y="699" 
class="s2_60"
>There are a few more methods that we’ll sometimes find convenient.</text>

<text 
x="665" 
y="699" 
class="s3_60"
>random.shuffle</text>

<text 
x="55" 
y="729" 
class="s2_60"
>randomly reorders the elements of a list:</text>

<text 
x="76" 
y="774" 
class="s6_60"
>up_to_ten</text>

<text 
x="156" 
y="774" 
class="s7_60"
>=</text>

<text 
x="171" 
y="774" 
class="s9_60"
>range</text>

<text 
x="211" 
y="774" 
class="s7_60"
>(</text>

<text 
x="219" 
y="774" 
class="s10_60"
>10</text>

<text 
x="235" 
y="774" 
class="s7_60"
>)</text>

<text 
x="76" 
y="789" 
class="s6_60"
>random</text>

<text 
x="124" 
y="789" 
class="s7_60"
>.</text>

<text 
x="132" 
y="789" 
class="s6_60"
>shuffle</text>

<text 
x="187" 
y="789" 
class="s7_60"
>(</text>

<text 
x="195" 
y="789" 
class="s6_60"
>up_to_ten</text>

<text 
x="266" 
y="789" 
class="s7_60"
>)</text>

<text 
x="76" 
y="805" 
class="s4_60"
>print</text>

<text 
x="124" 
y="805" 
class="s6_60"
>up_to_ten</text>

<text 
x="76" 
y="820" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0" 
class="s11_60"
># [2, 5, 1, 9, 7, 3, 8, 6, 4, 0]</text>

<text 
x="353" 
y="820" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s11_60"
>(your results will probably be different)</text>

<text 
x="55" 
y="873" 
class="s2_60"
>If you need to randomly pick one element from a list you can use</text>

<text 
x="633" 
y="873" 
class="s3_60"
>random.choice</text>

<text 
x="770" 
y="873" 
class="s2_60"
>:</text>

<text 
x="76" 
y="920" 
class="s6_60"
>my_best_friend</text>

<text 
x="195" 
y="920" 
class="s7_60"
>=</text>

<text 
x="211" 
y="920" 
class="s6_60"
>random</text>

<text 
x="258" 
y="920" 
class="s7_60"
>.</text>

<text 
x="266" 
y="920" 
class="s6_60"
>choice</text>

<text 
x="314" 
y="920" 
class="s7_60"
>([</text>

<text 
x="329" 
y="920" 
class="s12_60"
>"Alice"</text>

<text 
x="385" 
y="920" 
class="s7_60"
>,</text>

<text 
x="401" 
y="920" 
class="s12_60"
>"Bob"</text>

<text 
x="440" 
y="920" 
class="s7_60"
>,</text>

<text 
x="456" 
y="920" 
class="s12_60"
>"Charlie"</text>

<text 
x="527" 
y="920" 
class="s7_60"
>])</text>

<text 
x="582" 
y="920" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0" 
class="s11_60"
># "Bob" for me</text>

<text 
x="55" 
y="973" 
class="s2_60"
>And if you need to randomly choose a sample of elements without replacement (i.e., with</text>

<text 
x="55" 
y="1001" 
class="s2_60"
>no duplicates), you can use</text>

<text 
x="299" 
y="1001" 
class="s3_60"
>random.sample</text>

<text 
x="436" 
y="1001" 
class="s2_60"
>:</text>

<text 
x="76" 
y="1048" 
class="s6_60"
>lottery_numbers</text>

<text 
x="203" 
y="1048" 
class="s7_60"
>=</text>

<text 
x="219" 
y="1048" 
class="s9_60"
>range</text>

<text 
x="258" 
y="1048" 
class="s7_60"
>(</text>

<text 
x="266" 
y="1048" 
class="s10_60"
>60</text>

<text 
x="282" 
y="1048" 
class="s7_60"
>)</text>

<text 
x="76" 
y="1063" 
class="s6_60"
>winning_numbers</text>

<text 
x="203" 
y="1063" 
class="s7_60"
>=</text>

<text 
x="219" 
y="1063" 
class="s6_60"
>random</text>

<text 
x="266" 
y="1063" 
class="s7_60"
>.</text>

<text 
x="274" 
y="1063" 
class="s6_60"
>sample</text>

<text 
x="322" 
y="1063" 
class="s7_60"
>(</text>

<text 
x="329" 
y="1063" 
class="s6_60"
>lottery_numbers</text>

<text 
x="448" 
y="1063" 
class="s7_60"
>,</text>

<text 
x="464" 
y="1063" 
class="s10_60"
>6</text>

<text 
x="472" 
y="1063" 
class="s7_60"
>)</text>

<text 
x="495" 
y="1063" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0" 
class="s11_60"
># [16, 36, 10, 6, 25, 9]</text>

<text 
x="55" 
y="1116" 
dx="0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_60"
>To choose a sample of elements</text>

<text 
x="340" 
y="1116" 
class="s13_60"
>with</text>

<text 
x="383" 
y="1116" 
class="s2_60"
>replacement (i.e., allowing duplicates), you can just</text>

<text 
x="55" 
y="1144" 
class="s2_60"
>make multiple calls to</text>

<text 
x="255" 
y="1144" 
class="s3_60"
>random.choice</text>

<text 
x="392" 
y="1144" 
class="s2_60"
>:</text>

<text 
x="76" 
y="1191" 
class="s6_60"
>four_with_replacement</text>

<text 
x="250" 
y="1191" 
dx="0,0,4.6" 
class="s7_60"
>= [</text>

<text 
x="274" 
y="1191" 
class="s6_60"
>random</text>

<text 
x="322" 
y="1191" 
class="s7_60"
>.</text>

<text 
x="329" 
y="1191" 
class="s6_60"
>choice</text>

<text 
x="377" 
y="1191" 
class="s7_60"
>(</text>

<text 
x="385" 
y="1191" 
class="s9_60"
>range</text>

<text 
x="424" 
y="1191" 
class="s7_60"
>(</text>

<text 
x="432" 
y="1191" 
class="s10_60"
>10</text>

<text 
x="448" 
y="1191" 
class="s7_60"
>))</text>

<text 
x="274" 
y="1206" 
class="s4_60"
>for</text>

<text 
x="306" 
y="1206" 
class="s6_60"
>_</text>

<text 
x="322" 
y="1206" 
class="s8_60"
>in</text>

<text 
x="345" 
y="1206" 
class="s9_60"
>range</text>

<text 
x="385" 
y="1206" 
class="s7_60"
>(</text>

<text 
x="393" 
y="1206" 
class="s10_60"
>4</text>

<text 
x="401" 
y="1206" 
class="s7_60"
>)]</text>

<text 
x="76" 
y="1222" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0" 
class="s11_60"
># [9, 4, 4, 2]</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
