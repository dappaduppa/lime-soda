<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 424 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_424{
}

.s1_424{
font-size: 44.01px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_424{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s3_424{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<path d="M55,117.7l799.4,0l0,1.1L55,118.8l0,-1.1Z" class="g1_424" />
<text 
x="55" 
y="94" 
class="s1_424"
>Index</text>

<text 
x="55" 
y="193" 
class="s2_424"
>A</text>

<text 
x="55" 
y="229" 
class="s2_424"
>A/B test,</text>

<text 
x="141" 
y="229" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0" 
class="s3_424"
>Example: Running an A/B Test</text>

<text 
x="55" 
y="282" 
class="s2_424"
>accuracy,</text>

<text 
x="150" 
y="282" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0" 
class="s3_424"
>Correctness</text>

<text 
x="76" 
y="322" 
class="s2_424"
>of model performance,</text>

<text 
x="295" 
y="322" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0" 
class="s3_424"
>Correctness</text>

<text 
x="55" 
y="375" 
class="s2_424"
>all function (Python),</text>

<text 
x="260" 
y="375" 
dx="0,-1.6,0,0,0,0,0,0,0,0" 
class="s3_424"
>Truthiness</text>

<text 
x="55" 
y="428" 
class="s2_424"
>Anaconda distribution of Python,</text>

<text 
x="374" 
y="428" 
class="s3_424"
>Getting Python</text>

<text 
x="55" 
y="480" 
class="s2_424"
>any function (Python),</text>

<text 
x="271" 
y="480" 
dx="0,-1.6,0,0,0,0,0,0,0,0" 
class="s3_424"
>Truthiness</text>

<text 
x="55" 
y="533" 
class="s2_424"
>APIs, using to get data,</text>

<text 
x="277" 
y="533" 
class="s3_424"
>Using APIs</text>

<text 
x="383" 
y="533" 
class="s2_424"
>-</text>

<text 
x="390" 
y="533" 
dx="0,0,0,0,0,0,0,-1.6,0,0,0,0,0" 
class="s3_424"
>Using Twython</text>

<text 
x="76" 
y="573" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.6,0,0,0,0,0,0,-0.4,0,0,0,0" 
class="s2_424"
>example, using Twitter APIs,</text>

<text 
x="353" 
y="573" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.6,0,0,0,0,0,0,-0.4,0,0,0" 
class="s3_424"
>Example: Using the Twitter APIs</text>

<text 
x="663" 
y="573" 
class="s2_424"
>-</text>

<text 
x="671" 
y="573" 
dx="0,0,0,0,0,0,0,-1.6,0,0,0,0,0" 
class="s3_424"
>Using Twython</text>

<text 
x="98" 
y="612" 
dx="0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0" 
class="s2_424"
>getting credentials,</text>

<text 
x="282" 
y="612" 
dx="0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0" 
class="s3_424"
>Getting Credentials</text>

<text 
x="98" 
y="665" 
class="s2_424"
>using twython,</text>

<text 
x="242" 
y="665" 
dx="0,0,0,0,0,0,0,-1.6,0,0,0,0,0" 
class="s3_424"
>Using Twython</text>

<text 
x="76" 
y="718" 
class="s2_424"
>finding APIs,</text>

<text 
x="207" 
y="718" 
class="s3_424"
>Finding APIs</text>

<text 
x="76" 
y="771" 
class="s2_424"
>JSON (and XML),</text>

<text 
x="256" 
y="771" 
class="s3_424"
>JSON (and XML)</text>

<text 
x="76" 
y="824" 
class="s2_424"
>unauthenticated API,</text>

<text 
x="283" 
y="824" 
class="s3_424"
>Using an Unauthenticated API</text>

<text 
x="55" 
y="876" 
class="s2_424"
>args and kwargs (Python),</text>

<text 
x="308" 
y="876" 
class="s3_424"
>args and kwargs</text>

<text 
x="55" 
y="929" 
class="s2_424"
>argument unpacking,</text>

<text 
x="262" 
y="929" 
class="s3_424"
>zip and Argument Unpacking</text>

<text 
x="55" 
y="982" 
class="s2_424"
>arithmetic</text>

<text 
x="76" 
y="1022" 
class="s2_424"
>in Python,</text>

<text 
x="178" 
y="1022" 
class="s3_424"
>Arithmetic</text>

<text 
x="76" 
y="1074" 
class="s2_424"
>performing on vectors,</text>

<text 
x="296" 
y="1074" 
dx="0,-2,0,0,0,0,0" 
class="s3_424"
>Vectors</text>

<text 
x="55" 
y="1127" 
class="s2_424"
>artificial neural networks,</text>

<text 
x="305" 
y="1127" 
class="s3_424"
>Neural Networks</text>

<text 
x="76" 
y="1167" 
class="s2_424"
>(see also neural networks)</text>

<text 
x="55" 
y="1220" 
class="s2_424"
>assignment, multiple, in Python,</text>

<text 
x="362" 
y="1220" 
dx="0,-2,0,0,0,0" 
class="s3_424"
>Tuples</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

]]></style>

</svg>
