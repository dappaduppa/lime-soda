<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 158 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_158{
fill: #BEBEBE;
}

.s1_158{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s2_158{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #00CCFF;
}
.s3_158{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s4_158{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s5_158{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_158{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s7_158{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s8_158{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s9_158{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s10_158{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #CC3300;
}
.s11_158{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s12_158{
font-size: 22.01px;
font-family: LiberationSerif-Bold_b;
fill: #737373;
}
.s13_158{
font-size: 16.50px;
font-family: LiberationSerif_e;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<path fill-rule="evenodd" d="M93.5,641.5l722.5,0c3,0,5.5,2.4,5.5,5.5l0,99c0,3,-2.5,5.5,-5.5,5.5l-722.5,0C90.5,751.5,88,749,88,746l0,-99c0,-3.1,2.5,-5.5,5.5,-5.5m0,1.1l722.5,0c2.4,0,4.4,1.9,4.4,4.4l0,99c0,2.4,-2,4.4,-4.4,4.4l-722.5,0c-2.4,0,-4.4,-2,-4.4,-4.4l0,-99c0,-2.5,2,-4.4,4.4,-4.4Z" class="g1_158" />
<text 
x="76" 
y="64" 
class="s1_158"
>import</text>

<text 
x="132" 
y="64" 
class="s2_158"
>sys</text>

<text 
x="76" 
y="80" 
class="s1_158"
>from</text>

<text 
x="116" 
y="80" 
class="s2_158"
>collections</text>

<text 
x="211" 
y="80" 
class="s1_158"
>import</text>

<text 
x="266" 
y="80" 
class="s3_158"
>Counter</text>

<text 
x="76" 
y="111" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s4_158"
># pass in number of words as first argument</text>

<text 
x="76" 
y="126" 
class="s1_158"
>try</text>

<text 
x="100" 
y="126" 
class="s5_158"
>:</text>

<text 
x="108" 
y="141" 
class="s3_158"
>num_words</text>

<text 
x="187" 
y="141" 
class="s5_158"
>=</text>

<text 
x="203" 
y="141" 
class="s6_158"
>int</text>

<text 
x="227" 
y="141" 
class="s5_158"
>(</text>

<text 
x="235" 
y="141" 
class="s3_158"
>sys</text>

<text 
x="258" 
y="141" 
class="s5_158"
>.</text>

<text 
x="266" 
y="141" 
class="s3_158"
>argv</text>

<text 
x="298" 
y="141" 
class="s5_158"
>[</text>

<text 
x="306" 
y="141" 
class="s7_158"
>1</text>

<text 
x="314" 
y="141" 
class="s5_158"
>])</text>

<text 
x="76" 
y="157" 
class="s1_158"
>except</text>

<text 
x="124" 
y="157" 
class="s5_158"
>:</text>

<text 
x="108" 
y="172" 
class="s1_158"
>print</text>

<text 
x="156" 
y="172" 
dx="0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s8_158"
>"usage: most_common_words.py num_words"</text>

<text 
x="108" 
y="188" 
class="s3_158"
>sys</text>

<text 
x="132" 
y="188" 
class="s5_158"
>.</text>

<text 
x="140" 
y="188" 
class="s3_158"
>exit</text>

<text 
x="171" 
y="188" 
class="s5_158"
>(</text>

<text 
x="179" 
y="188" 
class="s7_158"
>1</text>

<text 
x="187" 
y="188" 
class="s5_158"
>)</text>

<text 
x="219" 
y="188" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s4_158"
># non-zero exit code indicates error</text>

<text 
x="76" 
y="218" 
class="s3_158"
>counter</text>

<text 
x="140" 
y="218" 
class="s5_158"
>=</text>

<text 
x="156" 
y="218" 
class="s3_158"
>Counter</text>

<text 
x="211" 
y="218" 
class="s5_158"
>(</text>

<text 
x="219" 
y="218" 
class="s3_158"
>word</text>

<text 
x="250" 
y="218" 
class="s5_158"
>.</text>

<text 
x="258" 
y="218" 
class="s3_158"
>lower</text>

<text 
x="298" 
y="218" 
class="s5_158"
>()</text>

<text 
x="487" 
y="218" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s4_158"
># lowercase words</text>

<text 
x="219" 
y="234" 
class="s1_158"
>for</text>

<text 
x="250" 
y="234" 
class="s3_158"
>line</text>

<text 
x="290" 
y="234" 
class="s9_158"
>in</text>

<text 
x="314" 
y="234" 
class="s3_158"
>sys</text>

<text 
x="337" 
y="234" 
class="s5_158"
>.</text>

<text 
x="345" 
y="234" 
class="s3_158"
>stdin</text>

<text 
x="487" 
y="234" 
class="s4_158"
>#</text>

<text 
x="219" 
y="249" 
class="s1_158"
>for</text>

<text 
x="250" 
y="249" 
class="s3_158"
>word</text>

<text 
x="290" 
y="249" 
class="s9_158"
>in</text>

<text 
x="314" 
y="249" 
class="s3_158"
>line</text>

<text 
x="345" 
y="249" 
class="s5_158"
>.</text>

<text 
x="353" 
y="249" 
class="s3_158"
>strip</text>

<text 
x="393" 
y="249" 
class="s5_158"
>().</text>

<text 
x="416" 
y="249" 
class="s3_158"
>split</text>

<text 
x="456" 
y="249" 
class="s5_158"
>()</text>

<text 
x="487" 
y="249" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0" 
class="s4_158"
># split on spaces</text>

<text 
x="219" 
y="265" 
class="s1_158"
>if</text>

<text 
x="242" 
y="265" 
class="s3_158"
>word</text>

<text 
x="274" 
y="265" 
class="s5_158"
>)</text>

<text 
x="487" 
y="265" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s4_158"
># skip empty 'words'</text>

<text 
x="76" 
y="295" 
class="s1_158"
>for</text>

<text 
x="108" 
y="295" 
class="s3_158"
>word</text>

<text 
x="140" 
y="295" 
class="s5_158"
>,</text>

<text 
x="156" 
y="295" 
class="s3_158"
>count</text>

<text 
x="203" 
y="295" 
class="s9_158"
>in</text>

<text 
x="227" 
y="295" 
class="s3_158"
>counter</text>

<text 
x="282" 
y="295" 
class="s5_158"
>.</text>

<text 
x="290" 
y="295" 
class="s3_158"
>most_common</text>

<text 
x="377" 
y="295" 
class="s5_158"
>(</text>

<text 
x="385" 
y="295" 
class="s3_158"
>num_words</text>

<text 
x="456" 
y="295" 
class="s5_158"
>):</text>

<text 
x="108" 
y="311" 
class="s3_158"
>sys</text>

<text 
x="132" 
y="311" 
class="s5_158"
>.</text>

<text 
x="140" 
y="311" 
class="s3_158"
>stdout</text>

<text 
x="187" 
y="311" 
class="s5_158"
>.</text>

<text 
x="195" 
y="311" 
class="s3_158"
>write</text>

<text 
x="235" 
y="311" 
class="s5_158"
>(</text>

<text 
x="242" 
y="311" 
class="s6_158"
>str</text>

<text 
x="266" 
y="311" 
class="s5_158"
>(</text>

<text 
x="274" 
y="311" 
class="s3_158"
>count</text>

<text 
x="314" 
y="311" 
class="s5_158"
>))</text>

<text 
x="108" 
y="326" 
class="s3_158"
>sys</text>

<text 
x="132" 
y="326" 
class="s5_158"
>.</text>

<text 
x="140" 
y="326" 
class="s3_158"
>stdout</text>

<text 
x="187" 
y="326" 
class="s5_158"
>.</text>

<text 
x="195" 
y="326" 
class="s3_158"
>write</text>

<text 
x="235" 
y="326" 
class="s5_158"
>(</text>

<text 
x="242" 
y="326" 
class="s8_158"
>"</text>

<text 
x="250" 
y="326" 
class="s10_158"
>\t</text>

<text 
x="266" 
y="326" 
class="s8_158"
>"</text>

<text 
x="274" 
y="326" 
class="s5_158"
>)</text>

<text 
x="108" 
y="342" 
class="s3_158"
>sys</text>

<text 
x="132" 
y="342" 
class="s5_158"
>.</text>

<text 
x="140" 
y="342" 
class="s3_158"
>stdout</text>

<text 
x="187" 
y="342" 
class="s5_158"
>.</text>

<text 
x="195" 
y="342" 
class="s3_158"
>write</text>

<text 
x="235" 
y="342" 
class="s5_158"
>(</text>

<text 
x="242" 
y="342" 
class="s3_158"
>word</text>

<text 
x="274" 
y="342" 
class="s5_158"
>)</text>

<text 
x="108" 
y="357" 
class="s3_158"
>sys</text>

<text 
x="132" 
y="357" 
class="s5_158"
>.</text>

<text 
x="140" 
y="357" 
class="s3_158"
>stdout</text>

<text 
x="187" 
y="357" 
class="s5_158"
>.</text>

<text 
x="195" 
y="357" 
class="s3_158"
>write</text>

<text 
x="235" 
y="357" 
class="s5_158"
>(</text>

<text 
x="242" 
y="357" 
class="s8_158"
>"</text>

<text 
x="250" 
y="357" 
class="s10_158"
>\n</text>

<text 
x="266" 
y="357" 
class="s8_158"
>"</text>

<text 
x="274" 
y="357" 
class="s5_158"
>)</text>

<text 
x="55" 
y="410" 
class="s11_158"
>after which you could do something like:</text>

<text 
x="76" 
y="455" 
class="s5_158"
>C:\DataScience&gt;</text>

<text 
x="195" 
y="455" 
class="s3_158"
>type</text>

<text 
x="235" 
y="455" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.6" 
class="s5_158"
>the_bible.txt |</text>

<text 
x="361" 
y="455" 
class="s3_158"
>python</text>

<text 
x="416" 
y="455" 
class="s5_158"
>most_common_words.py</text>

<text 
x="582" 
y="455" 
class="s7_158"
>10</text>

<text 
x="76" 
y="470" 
class="s7_158"
>64193</text>

<text 
x="140" 
y="470" 
class="s5_158"
>the</text>

<text 
x="76" 
y="486" 
class="s7_158"
>51380</text>

<text 
x="140" 
y="486" 
class="s5_158"
>and</text>

<text 
x="76" 
y="501" 
class="s7_158"
>34753</text>

<text 
x="140" 
y="501" 
class="s5_158"
>of</text>

<text 
x="76" 
y="517" 
class="s7_158"
>13643</text>

<text 
x="140" 
y="517" 
class="s5_158"
>to</text>

<text 
x="76" 
y="532" 
class="s7_158"
>12799</text>

<text 
x="140" 
y="532" 
class="s5_158"
>that</text>

<text 
x="76" 
y="547" 
class="s7_158"
>12560</text>

<text 
x="140" 
y="547" 
class="s5_158"
>in</text>

<text 
x="76" 
y="563" 
class="s7_158"
>10263</text>

<text 
x="140" 
y="563" 
class="s5_158"
>he</text>

<text 
x="76" 
y="578" 
class="s7_158"
>9840</text>

<text 
x="140" 
y="578" 
class="s5_158"
>shall</text>

<text 
x="76" 
y="594" 
class="s7_158"
>8987</text>

<text 
x="140" 
y="594" 
class="s5_158"
>unto</text>

<text 
x="76" 
y="609" 
class="s7_158"
>8836</text>

<text 
x="140" 
y="609" 
class="s1_158"
>for</text>

<text 
x="421" 
y="666" 
dx="0,1.1,1.1,1.1" 
class="s12_158"
>NOTE</text>

<text 
x="97" 
y="696" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s13_158"
>If you are a seasoned Unix programmer, you are probably familiar with a wide variety of command-line</text>

<text 
x="97" 
y="716" 
class="s13_158"
>tools (for example,</text>

<text 
x="226" 
y="716" 
class="s5_158"
>egrep</text>

<text 
x="266" 
y="716" 
class="s13_158"
>) that are built into your operating system and that are probably preferable to</text>

<text 
x="97" 
y="738" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s13_158"
>building your own from scratch. Still, it’s good to know you can if you need to.</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

]]></style>

</svg>
