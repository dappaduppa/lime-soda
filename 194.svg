<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 194 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_194{
fill: #F1F6FC;
}
.g2_194{
fill: #C3C3C3;
}
.g3_194{
fill: #9D9D9D;
}

.s1_194{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_194{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_194{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s4_194{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s5_194{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #8E0012;
}
.s6_194{
font-size: 16.50px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s7_194{
font-size: 16.50px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s8_194{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s9_194{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s10_194{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s11_194{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s12_194{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s13_194{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s14_194{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s15_194{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s16_194{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<path d="M246.3,446.7l59.4,0l0,46.2l-59.4,0l0,-46.2Z" class="g1_194" />
<path d="M305.7,446.7l116.6,0l0,46.2l-116.6,0l0,-46.2Z" class="g1_194" />
<path d="M422.3,446.7l155,0l0,46.2l-155,0l0,-46.2Z" class="g1_194" />
<path d="M577.3,446.7l86.9,0l0,46.2l-86.9,0l0,-46.2Z" class="g1_194" />
<path d="M577.3,492.9l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g2_194" />
<path d="M577.3,539.1l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g2_194" />
<path d="M422.3,492.9l155,0l0,1.1l-155,0l0,-1.1Z" class="g2_194" />
<path d="M422.3,539.1l155,0l0,1.1l-155,0l0,-1.1Z" class="g2_194" />
<path d="M305.7,492.9l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g2_194" />
<path d="M305.7,539.1l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g2_194" />
<path d="M246.3,492.9l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g2_194" />
<path d="M246.3,539.1l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g2_194" />
<path d="M577.3,446.7l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g2_194" />
<path d="M577.3,492.9l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g2_194" />
<path d="M422.3,446.7l155,0l0,1.1l-155,0l0,-1.1Z" class="g2_194" />
<path d="M422.3,492.9l155,0l0,1.1l-155,0l0,-1.1Z" class="g2_194" />
<path d="M305.7,446.7l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g2_194" />
<path d="M305.7,492.9l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g2_194" />
<path d="M246.3,446.7l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g2_194" />
<path d="M246.3,492.9l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g2_194" />
<path d="M577.3,400.5l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g3_194" />
<path d="M577.3,446.7l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g2_194" />
<path d="M422.3,400.5l155,0l0,1.1l-155,0l0,-1.1Z" class="g3_194" />
<path d="M422.3,446.7l155,0l0,1.1l-155,0l0,-1.1Z" class="g2_194" />
<path d="M305.7,400.5l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g3_194" />
<path d="M305.7,446.7l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g2_194" />
<path d="M246.3,400.5l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g3_194" />
<path d="M246.3,446.7l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g2_194" />
<path d="M577.3,370.8l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g3_194" />
<path d="M577.3,400.5l86.9,0l0,1.1l-86.9,0l0,-1.1Z" class="g3_194" />
<path d="M422.3,370.8l155,0l0,1.1l-155,0l0,-1.1Z" class="g3_194" />
<path d="M422.3,400.5l155,0l0,1.1l-155,0l0,-1.1Z" class="g3_194" />
<path d="M305.7,370.8l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g3_194" />
<path d="M305.7,400.5l116.6,0l0,1.1l-116.6,0l0,-1.1Z" class="g3_194" />
<path d="M246.3,370.8l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g3_194" />
<path d="M246.3,400.5l59.4,0l0,1.1l-59.4,0l0,-1.1Z" class="g3_194" />
<text 
x="55" 
y="81" 
class="s1_194"
>Rescaling</text>

<text 
x="55" 
y="122" 
class="s2_194"
>Many techniques are sensitive to the</text>

<text 
x="381" 
y="122" 
class="s3_194"
>scale</text>

<text 
x="431" 
y="122" 
class="s2_194"
>of your data. For example, imagine that you</text>

<text 
x="55" 
y="149" 
class="s2_194"
>have a data set consisting of the heights and weights of hundreds of data scientists, and</text>

<text 
x="55" 
y="177" 
class="s2_194"
>that you are trying to identify</text>

<text 
x="318" 
y="177" 
class="s3_194"
>clusters</text>

<text 
x="392" 
y="177" 
class="s2_194"
>of body sizes.</text>

<text 
x="55" 
y="215" 
dx="0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>Intuitively, we’d like clusters to represent points near each other, which means that we</text>

<text 
x="55" 
y="243" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>need some notion of distance between points. We already have a Euclidean</text>

<text 
x="720" 
y="243" 
class="s4_194"
>distance</text>

<text 
x="55" 
y="272" 
class="s2_194"
>function, so a natural approach might be to treat (height, weight) pairs as points in two-</text>

<text 
x="55" 
y="300" 
class="s2_194"
>dimensional space. Consider the people listed in</text>

<text 
x="484" 
y="300" 
dx="0,-1.6,0,0,0,0,0,0,0,0" 
class="s5_194"
>Table 10-1</text>

<text 
x="579" 
y="300" 
class="s2_194"
>.</text>

<text 
x="312" 
y="354" 
dx="0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0" 
class="s3_194"
>Table 10-1. Heights and Weights</text>

<text 
x="250" 
y="391" 
class="s6_194"
>Person</text>

<text 
x="310" 
y="391" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s6_194"
>Height (inches) Height (centimeters)</text>

<text 
x="581" 
y="391" 
dx="0,-0.9,0,0,0,0" 
class="s6_194"
>Weight</text>

<text 
x="250" 
y="430" 
class="s7_194"
>A</text>

<text 
x="310" 
y="430" 
class="s7_194"
>63 inches</text>

<text 
x="426" 
y="430" 
class="s7_194"
>160 cm</text>

<text 
x="581" 
y="430" 
class="s7_194"
>150 pounds</text>

<text 
x="250" 
y="476" 
class="s7_194"
>B</text>

<text 
x="310" 
y="476" 
class="s7_194"
>67 inches</text>

<text 
x="426" 
y="476" 
class="s7_194"
>170.2 cm</text>

<text 
x="581" 
y="476" 
class="s7_194"
>160 pounds</text>

<text 
x="250" 
y="522" 
class="s7_194"
>C</text>

<text 
x="310" 
y="522" 
class="s7_194"
>70 inches</text>

<text 
x="426" 
y="522" 
class="s7_194"
>177.8 cm</text>

<text 
x="581" 
y="522" 
class="s7_194"
>171 pounds</text>

<text 
x="55" 
y="594" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>If we measure height in inches, then B’s nearest neighbor is A:</text>

<text 
x="76" 
y="639" 
class="s8_194"
>a_to_b</text>

<text 
x="132" 
y="639" 
class="s9_194"
>=</text>

<text 
x="148" 
y="639" 
class="s8_194"
>distance</text>

<text 
x="211" 
y="639" 
class="s9_194"
>([</text>

<text 
x="227" 
y="639" 
class="s10_194"
>63</text>

<text 
x="242" 
y="639" 
class="s9_194"
>,</text>

<text 
x="258" 
y="639" 
class="s10_194"
>150</text>

<text 
x="282" 
y="639" 
dx="0,0,0,4.6" 
class="s9_194"
>], [</text>

<text 
x="314" 
y="639" 
class="s10_194"
>67</text>

<text 
x="329" 
y="639" 
class="s9_194"
>,</text>

<text 
x="345" 
y="639" 
class="s10_194"
>160</text>

<text 
x="369" 
y="639" 
class="s9_194"
>])</text>

<text 
x="448" 
y="639" 
dx="0,0,4.6,0,0,0,0" 
class="s11_194"
># 10.77</text>

<text 
x="76" 
y="654" 
class="s8_194"
>a_to_c</text>

<text 
x="132" 
y="654" 
class="s9_194"
>=</text>

<text 
x="148" 
y="654" 
class="s8_194"
>distance</text>

<text 
x="211" 
y="654" 
class="s9_194"
>([</text>

<text 
x="227" 
y="654" 
class="s10_194"
>63</text>

<text 
x="242" 
y="654" 
class="s9_194"
>,</text>

<text 
x="258" 
y="654" 
class="s10_194"
>150</text>

<text 
x="282" 
y="654" 
dx="0,0,0,4.6" 
class="s9_194"
>], [</text>

<text 
x="314" 
y="654" 
class="s10_194"
>70</text>

<text 
x="329" 
y="654" 
class="s9_194"
>,</text>

<text 
x="345" 
y="654" 
class="s10_194"
>171</text>

<text 
x="369" 
y="654" 
class="s9_194"
>])</text>

<text 
x="448" 
y="654" 
dx="0,0,4.6,0,0,0,0" 
class="s11_194"
># 22.14</text>

<text 
x="76" 
y="670" 
class="s8_194"
>b_to_c</text>

<text 
x="132" 
y="670" 
class="s9_194"
>=</text>

<text 
x="148" 
y="670" 
class="s8_194"
>distance</text>

<text 
x="211" 
y="670" 
class="s9_194"
>([</text>

<text 
x="227" 
y="670" 
class="s10_194"
>67</text>

<text 
x="242" 
y="670" 
class="s9_194"
>,</text>

<text 
x="258" 
y="670" 
class="s10_194"
>160</text>

<text 
x="282" 
y="670" 
dx="0,0,0,4.6" 
class="s9_194"
>], [</text>

<text 
x="314" 
y="670" 
class="s10_194"
>70</text>

<text 
x="329" 
y="670" 
class="s9_194"
>,</text>

<text 
x="345" 
y="670" 
class="s10_194"
>171</text>

<text 
x="369" 
y="670" 
class="s9_194"
>])</text>

<text 
x="448" 
y="670" 
dx="0,0,4.6,0,0,0,0" 
class="s11_194"
># 11.40</text>

<text 
x="55" 
y="722" 
dx="0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>However, if we measure height in centimeters, then B’s nearest neighbor is instead C:</text>

<text 
x="76" 
y="767" 
class="s8_194"
>a_to_b</text>

<text 
x="132" 
y="767" 
class="s9_194"
>=</text>

<text 
x="148" 
y="767" 
class="s8_194"
>distance</text>

<text 
x="211" 
y="767" 
class="s9_194"
>([</text>

<text 
x="227" 
y="767" 
class="s10_194"
>160</text>

<text 
x="250" 
y="767" 
class="s9_194"
>,</text>

<text 
x="266" 
y="767" 
class="s10_194"
>150</text>

<text 
x="290" 
y="767" 
dx="0,0,0,4.6" 
class="s9_194"
>], [</text>

<text 
x="322" 
y="767" 
class="s10_194"
>170.2</text>

<text 
x="361" 
y="767" 
class="s9_194"
>,</text>

<text 
x="377" 
y="767" 
class="s10_194"
>160</text>

<text 
x="401" 
y="767" 
class="s9_194"
>])</text>

<text 
x="448" 
y="767" 
dx="0,0,4.6,0,0,0,0" 
class="s11_194"
># 14.28</text>

<text 
x="76" 
y="783" 
class="s8_194"
>a_to_c</text>

<text 
x="132" 
y="783" 
class="s9_194"
>=</text>

<text 
x="148" 
y="783" 
class="s8_194"
>distance</text>

<text 
x="211" 
y="783" 
class="s9_194"
>([</text>

<text 
x="227" 
y="783" 
class="s10_194"
>160</text>

<text 
x="250" 
y="783" 
class="s9_194"
>,</text>

<text 
x="266" 
y="783" 
class="s10_194"
>150</text>

<text 
x="290" 
y="783" 
dx="0,0,0,4.6" 
class="s9_194"
>], [</text>

<text 
x="322" 
y="783" 
class="s10_194"
>177.8</text>

<text 
x="361" 
y="783" 
class="s9_194"
>,</text>

<text 
x="377" 
y="783" 
class="s10_194"
>171</text>

<text 
x="401" 
y="783" 
class="s9_194"
>])</text>

<text 
x="448" 
y="783" 
dx="0,0,4.6,0,0,0,0" 
class="s11_194"
># 27.53</text>

<text 
x="76" 
y="798" 
class="s8_194"
>b_to_c</text>

<text 
x="132" 
y="798" 
class="s9_194"
>=</text>

<text 
x="148" 
y="798" 
class="s8_194"
>distance</text>

<text 
x="211" 
y="798" 
class="s9_194"
>([</text>

<text 
x="227" 
y="798" 
class="s10_194"
>170.2</text>

<text 
x="266" 
y="798" 
class="s9_194"
>,</text>

<text 
x="282" 
y="798" 
class="s10_194"
>160</text>

<text 
x="306" 
y="798" 
dx="0,0,0,4.6" 
class="s9_194"
>], [</text>

<text 
x="337" 
y="798" 
class="s10_194"
>177.8</text>

<text 
x="377" 
y="798" 
class="s9_194"
>,</text>

<text 
x="393" 
y="798" 
class="s10_194"
>171</text>

<text 
x="416" 
y="798" 
class="s9_194"
>])</text>

<text 
x="448" 
y="798" 
dx="0,0,4.6,0,0,0,0" 
class="s11_194"
># 13.37</text>

<text 
x="55" 
y="851" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>Obviously it’s problematic if changing units can change results like this. For this reason,</text>

<text 
x="55" 
y="879" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>when dimensions aren’t comparable with one another, we will sometimes</text>

<text 
x="706" 
y="879" 
dx="0,-0.8,0,0,0,0,0" 
class="s3_194"
>rescale</text>

<text 
x="774" 
y="879" 
class="s2_194"
>our data</text>

<text 
x="55" 
y="906" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>so that each dimension has mean 0 and standard deviation 1. This effectively gets rid of</text>

<text 
x="55" 
y="934" 
class="s2_194"
>the units, converting each dimension to “standard deviations from the mean.”</text>

<text 
x="55" 
y="972" 
dx="0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_194"
>To start with, we’ll need to compute the</text>

<text 
x="410" 
y="972" 
class="s4_194"
>mean</text>

<text 
x="458" 
y="972" 
class="s2_194"
>and the</text>

<text 
x="527" 
y="972" 
class="s4_194"
>standard_deviation</text>

<text 
x="723" 
y="972" 
class="s2_194"
>for each</text>

<text 
x="55" 
y="1002" 
class="s2_194"
>column:</text>

<text 
x="76" 
y="1047" 
class="s12_194"
>def</text>

<text 
x="108" 
y="1047" 
class="s13_194"
>scale</text>

<text 
x="148" 
y="1047" 
class="s9_194"
>(</text>

<text 
x="156" 
y="1047" 
class="s8_194"
>data_matrix</text>

<text 
x="242" 
y="1047" 
class="s9_194"
>):</text>

<text 
x="108" 
y="1062" 
dx="0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s14_194"
>"""returns the means and standard deviations of each column"""</text>

<text 
x="108" 
y="1078" 
class="s8_194"
>num_rows</text>

<text 
x="171" 
y="1078" 
class="s9_194"
>,</text>

<text 
x="187" 
y="1078" 
class="s8_194"
>num_cols</text>

<text 
x="258" 
y="1078" 
class="s9_194"
>=</text>

<text 
x="274" 
y="1078" 
class="s8_194"
>shape</text>

<text 
x="314" 
y="1078" 
class="s9_194"
>(</text>

<text 
x="322" 
y="1078" 
class="s8_194"
>data_matrix</text>

<text 
x="408" 
y="1078" 
class="s9_194"
>)</text>

<text 
x="108" 
y="1093" 
class="s8_194"
>means</text>

<text 
x="156" 
y="1093" 
dx="0,0,4.6" 
class="s9_194"
>= [</text>

<text 
x="179" 
y="1093" 
class="s8_194"
>mean</text>

<text 
x="211" 
y="1093" 
class="s9_194"
>(</text>

<text 
x="219" 
y="1093" 
class="s8_194"
>get_column</text>

<text 
x="298" 
y="1093" 
class="s9_194"
>(</text>

<text 
x="306" 
y="1093" 
class="s8_194"
>data_matrix</text>

<text 
x="393" 
y="1093" 
class="s9_194"
>,</text>

<text 
x="401" 
y="1093" 
class="s8_194"
>j</text>

<text 
x="408" 
y="1093" 
class="s9_194"
>))</text>

<text 
x="179" 
y="1109" 
class="s12_194"
>for</text>

<text 
x="211" 
y="1109" 
class="s8_194"
>j</text>

<text 
x="227" 
y="1109" 
class="s15_194"
>in</text>

<text 
x="250" 
y="1109" 
class="s16_194"
>range</text>

<text 
x="290" 
y="1109" 
class="s9_194"
>(</text>

<text 
x="298" 
y="1109" 
class="s8_194"
>num_cols</text>

<text 
x="361" 
y="1109" 
class="s9_194"
>)]</text>

<text 
x="108" 
y="1124" 
class="s8_194"
>stdevs</text>

<text 
x="163" 
y="1124" 
dx="0,0,4.6" 
class="s9_194"
>= [</text>

<text 
x="187" 
y="1124" 
class="s8_194"
>standard_deviation</text>

<text 
x="329" 
y="1124" 
class="s9_194"
>(</text>

<text 
x="337" 
y="1124" 
class="s8_194"
>get_column</text>

<text 
x="416" 
y="1124" 
class="s9_194"
>(</text>

<text 
x="424" 
y="1124" 
class="s8_194"
>data_matrix</text>

<text 
x="511" 
y="1124" 
class="s9_194"
>,</text>

<text 
x="519" 
y="1124" 
class="s8_194"
>j</text>

<text 
x="527" 
y="1124" 
class="s9_194"
>))</text>

<text 
x="187" 
y="1139" 
class="s12_194"
>for</text>

<text 
x="219" 
y="1139" 
class="s8_194"
>j</text>

<text 
x="235" 
y="1139" 
class="s15_194"
>in</text>

<text 
x="258" 
y="1139" 
class="s16_194"
>range</text>

<text 
x="298" 
y="1139" 
class="s9_194"
>(</text>

<text 
x="306" 
y="1139" 
class="s8_194"
>num_cols</text>

<text 
x="369" 
y="1139" 
class="s9_194"
>)]</text>

<text 
x="108" 
y="1155" 
class="s12_194"
>return</text>

<text 
x="163" 
y="1155" 
class="s8_194"
>means</text>

<text 
x="203" 
y="1155" 
class="s9_194"
>,</text>

<text 
x="219" 
y="1155" 
class="s8_194"
>stdevs</text>

<text 
x="55" 
y="1208" 
class="s2_194"
>And then use them to create a new data matrix:</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
