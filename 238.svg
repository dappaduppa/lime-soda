<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 238 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_238{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s2_238{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="80" 
class="s1_238"
>The only challenge left is coming up with estimates for</text>

<image preserveAspectRatio="none" x="545" y="54" width="94" height="26" xlink:href="238/img/1.png" />
<text 
x="644" 
y="80" 
class="s1_238"
>and</text>

<image preserveAspectRatio="none" x="682" y="54" width="123" height="26" xlink:href="238/img/2.png" />
<text 
x="805" 
y="80" 
class="s1_238"
>, the</text>

<text 
x="55" 
y="107" 
class="s1_238"
>probabilities that a spam message (or nonspam message) contains the word</text>

<image preserveAspectRatio="none" x="721" y="88" width="25" height="20" xlink:href="238/img/3.png" />
<text 
x="745" 
y="107" 
class="s1_238"
>. If we have</text>

<text 
x="55" 
y="135" 
class="s1_238"
>a fair number of “training” messages labeled as spam and not-spam, an obvious first try is</text>

<text 
x="55" 
y="168" 
class="s1_238"
>to estimate</text>

<image preserveAspectRatio="none" x="156" y="142" width="94" height="26" xlink:href="238/img/4.png" />
<text 
x="255" 
y="168" 
class="s1_238"
>simply as the fraction of spam messages containing word</text>

<image preserveAspectRatio="none" x="764" y="149" width="24" height="19" xlink:href="238/img/5.png" />
<text 
x="788" 
y="168" 
class="s1_238"
>.</text>

<text 
x="55" 
y="206" 
class="s1_238"
>This causes a big problem, though. Imagine that in our training set the vocabulary word</text>

<text 
x="55" 
y="242" 
class="s1_238"
>“data” only occurs in nonspam messages. Then we’d estimate</text>

<image preserveAspectRatio="none" x="605" y="213" width="214" height="29" xlink:href="238/img/6.png" />
<text 
x="818" 
y="242" 
class="s1_238"
>.</text>

<text 
x="55" 
y="269" 
class="s1_238"
>The result is that our Naive Bayes classifier would always assign spam probability 0 to</text>

<text 
x="55" 
y="297" 
class="s2_238"
>any</text>

<text 
x="92" 
y="297" 
class="s1_238"
>message containing the word “data,” even a message like “data on cheap viagra and</text>

<text 
x="55" 
y="324" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_238"
>authentic rolex watches.” To avoid this problem, we usually use some kind of smoothing.</text>

<text 
x="55" 
y="363" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_238"
>In particular, we’ll choose a</text>

<text 
x="305" 
y="363" 
class="s2_238"
>pseudocount</text>

<text 
x="422" 
y="363" 
class="s1_238"
>—</text>

<text 
x="449" 
y="363" 
class="s2_238"
>k</text>

<text 
x="465" 
y="363" 
class="s1_238"
>— and estimate the probability of seeing</text>

<text 
x="55" 
y="390" 
class="s1_238"
>the</text>

<text 
x="87" 
y="390" 
class="s2_238"
>i</text>

<text 
x="93" 
y="390" 
class="s1_238"
>th word in a spam as:</text>

<image preserveAspectRatio="none" x="55" y="408" width="799" height="27" xlink:href="238/img/7.png" />
<text 
x="55" 
y="470" 
class="s1_238"
>Similarly for</text>

<image preserveAspectRatio="none" x="174" y="445" width="123" height="26" xlink:href="238/img/8.png" />
<text 
x="296" 
y="470" 
class="s1_238"
>. That is, when computing the spam probabilities for the</text>

<text 
x="794" 
y="470" 
class="s2_238"
>i</text>

<text 
x="800" 
y="470" 
class="s1_238"
>th</text>

<text 
x="55" 
y="498" 
class="s1_238"
>word, we assume we also saw</text>

<text 
x="324" 
y="498" 
class="s2_238"
>k</text>

<text 
x="339" 
y="498" 
class="s1_238"
>additional spams containing the word and</text>

<text 
x="711" 
y="498" 
class="s2_238"
>k</text>

<text 
x="727" 
y="498" 
class="s1_238"
>additional</text>

<text 
x="55" 
y="525" 
class="s1_238"
>spams not containing the word.</text>

<text 
x="55" 
y="564" 
class="s1_238"
>For example, if “data” occurs in 0/98 spam documents, and if</text>

<text 
x="601" 
y="564" 
class="s2_238"
>k</text>

<text 
x="616" 
y="564" 
class="s1_238"
>is 1, we estimate</text>

<image preserveAspectRatio="none" x="55" y="571" width="161" height="29" xlink:href="238/img/9.png" />
<text 
x="221" 
y="599" 
class="s1_238"
>as 1/100 = 0.01, which allows our classifier to still assign some nonzero</text>

<text 
x="55" 
y="627" 
class="s1_238"
>spam probability to messages that contain the word “data.”</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
