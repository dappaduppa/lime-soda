<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 328 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_328{
stroke: #000000;
stroke-width: 1.0996486;
stroke-linecap: square;
stroke-linejoin: miter;
}

.s1_328{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s2_328{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_328{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_328{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s5_328{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s6_328{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_328{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s8_328{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s9_328{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s10_328{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s11_328{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="235" 
y="64" 
dx="0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s1_328"
>(13, [(15, [(17, [([-11, -6],),</text>

<text 
x="377" 
y="80" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s1_328"
>([-12, -8],)]),</text>

<text 
x="329" 
y="95" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s1_328"
>([-14, -5],)]),</text>

<text 
x="282" 
y="111" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0" 
class="s1_328"
>([-18, -3],)])]),</text>

<text 
x="195" 
y="126" 
dx="0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s1_328"
>(12, [([-13, -19],),</text>

<text 
x="242" 
y="141" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_328"
>([-9, -16],)])])])])</text>

<text 
x="55" 
y="194" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>For every merged cluster, I lined up its children vertically. If we say “cluster 0” for the</text>

<text 
x="55" 
y="222" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>cluster with merge order 0, you can interpret this as:</text>

<path d="M61.6,249.8l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_328" />
<text 
x="82" 
y="259" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>Cluster 0 is the merger of cluster 1 and cluster 2.</text>

<path d="M61.6,297.1l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_328" />
<text 
x="82" 
y="306" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>Cluster 1 is the merger of cluster 3 and cluster 16.</text>

<path d="M61.6,344.4l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_328" />
<text 
x="82" 
y="354" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>Cluster 16 is the merger of the leaf</text>

<text 
x="393" 
y="354" 
dx="0,0,0,0,0,6.1,0,0" 
class="s3_328"
>[11, 15]</text>

<text 
x="483" 
y="354" 
class="s2_328"
>and the leaf</text>

<text 
x="591" 
y="354" 
dx="0,0,0,0,0,6.1,0,0" 
class="s3_328"
>[13, 13]</text>

<text 
x="675" 
y="354" 
class="s2_328"
>.</text>

<path d="M61.6,391.7l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_328" />
<text 
x="82" 
y="401" 
class="s2_328"
>And so on…</text>

<text 
x="55" 
y="450" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>Since we had 20 inputs, it took 19 merges to get to this one cluster. The first merge created</text>

<text 
x="55" 
y="477" 
class="s2_328"
>cluster 18 by combining the leaves</text>

<text 
x="366" 
y="477" 
dx="0,0,0,0,0,6.1,0,0" 
class="s3_328"
>[19, 28]</text>

<text 
x="456" 
y="477" 
class="s2_328"
>and</text>

<text 
x="493" 
y="477" 
dx="0,0,0,0,0,6.1,0,0" 
class="s3_328"
>[21, 27]</text>

<text 
x="577" 
y="477" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>. And the last merge created</text>

<text 
x="55" 
y="507" 
class="s2_328"
>cluster 0.</text>

<text 
x="55" 
y="545" 
dx="0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>Generally, though, we don’t want to be squinting at nasty text representations like this.</text>

<text 
x="55" 
y="573" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>(Although it could be an interesting exercise to create a user-friendlier visualization of the</text>

<text 
x="55" 
y="600" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_328"
>cluster hierarchy.) Instead let’s write a function that generates any number of clusters by</text>

<text 
x="55" 
y="628" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0" 
class="s2_328"
>performing the appropriate number of unmerges:</text>

<text 
x="76" 
y="673" 
class="s4_328"
>def</text>

<text 
x="108" 
y="673" 
class="s5_328"
>generate_clusters</text>

<text 
x="242" 
y="673" 
class="s1_328"
>(</text>

<text 
x="250" 
y="673" 
class="s6_328"
>base_cluster</text>

<text 
x="345" 
y="673" 
class="s1_328"
>,</text>

<text 
x="361" 
y="673" 
class="s6_328"
>num_clusters</text>

<text 
x="456" 
y="673" 
class="s1_328"
>):</text>

<text 
x="108" 
y="688" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_328"
># start with a list with just the base cluster</text>

<text 
x="108" 
y="704" 
class="s6_328"
>clusters</text>

<text 
x="179" 
y="704" 
dx="0,0,4.6" 
class="s1_328"
>= [</text>

<text 
x="203" 
y="704" 
class="s6_328"
>base_cluster</text>

<text 
x="298" 
y="704" 
class="s1_328"
>]</text>

<text 
x="108" 
y="734" 
dx="0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0" 
class="s7_328"
># as long as we don't have enough clusters yet…</text>

<text 
x="108" 
y="750" 
class="s4_328"
>while</text>

<text 
x="156" 
y="750" 
class="s8_328"
>len</text>

<text 
x="179" 
y="750" 
class="s1_328"
>(</text>

<text 
x="187" 
y="750" 
class="s6_328"
>clusters</text>

<text 
x="250" 
y="750" 
dx="0,0,4.6" 
class="s1_328"
>) &lt;</text>

<text 
x="282" 
y="750" 
class="s6_328"
>num_clusters</text>

<text 
x="377" 
y="750" 
class="s1_328"
>:</text>

<text 
x="140" 
y="765" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s7_328"
># choose the last-merged of our clusters</text>

<text 
x="140" 
y="781" 
class="s6_328"
>next_cluster</text>

<text 
x="242" 
y="781" 
class="s1_328"
>=</text>

<text 
x="258" 
y="781" 
class="s8_328"
>min</text>

<text 
x="282" 
y="781" 
class="s1_328"
>(</text>

<text 
x="290" 
y="781" 
class="s6_328"
>clusters</text>

<text 
x="353" 
y="781" 
class="s1_328"
>,</text>

<text 
x="369" 
y="781" 
class="s6_328"
>key</text>

<text 
x="393" 
y="781" 
class="s1_328"
>=</text>

<text 
x="401" 
y="781" 
class="s6_328"
>get_merge_order</text>

<text 
x="519" 
y="781" 
class="s1_328"
>)</text>

<text 
x="140" 
y="796" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s7_328"
># remove it from the list</text>

<text 
x="140" 
y="811" 
class="s6_328"
>clusters</text>

<text 
x="211" 
y="811" 
dx="0,0,4.6" 
class="s1_328"
>= [</text>

<text 
x="235" 
y="811" 
class="s6_328"
>c</text>

<text 
x="250" 
y="811" 
class="s4_328"
>for</text>

<text 
x="282" 
y="811" 
class="s6_328"
>c</text>

<text 
x="298" 
y="811" 
class="s9_328"
>in</text>

<text 
x="322" 
y="811" 
class="s6_328"
>clusters</text>

<text 
x="393" 
y="811" 
class="s4_328"
>if</text>

<text 
x="416" 
y="811" 
class="s6_328"
>c</text>

<text 
x="432" 
y="811" 
class="s1_328"
>!=</text>

<text 
x="456" 
y="811" 
class="s6_328"
>next_cluster</text>

<text 
x="551" 
y="811" 
class="s1_328"
>]</text>

<text 
x="140" 
y="827" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0" 
class="s7_328"
># and add its children to the list (i.e., unmerge it)</text>

<text 
x="140" 
y="842" 
class="s6_328"
>clusters</text>

<text 
x="203" 
y="842" 
class="s1_328"
>.</text>

<text 
x="211" 
y="842" 
class="s6_328"
>extend</text>

<text 
x="258" 
y="842" 
class="s1_328"
>(</text>

<text 
x="266" 
y="842" 
class="s6_328"
>get_children</text>

<text 
x="361" 
y="842" 
class="s1_328"
>(</text>

<text 
x="369" 
y="842" 
class="s6_328"
>next_cluster</text>

<text 
x="464" 
y="842" 
class="s1_328"
>))</text>

<text 
x="108" 
y="873" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s7_328"
># once we have enough clusters…</text>

<text 
x="108" 
y="889" 
class="s4_328"
>return</text>

<text 
x="163" 
y="889" 
class="s6_328"
>clusters</text>

<text 
x="55" 
y="941" 
class="s2_328"
>So, for example, if we want to generate three clusters, we can just do:</text>

<text 
x="76" 
y="986" 
class="s6_328"
>three_clusters</text>

<text 
x="195" 
y="986" 
dx="0,0,4.6" 
class="s1_328"
>= [</text>

<text 
x="219" 
y="986" 
class="s6_328"
>get_values</text>

<text 
x="298" 
y="986" 
class="s1_328"
>(</text>

<text 
x="306" 
y="986" 
class="s6_328"
>cluster</text>

<text 
x="361" 
y="986" 
class="s1_328"
>)</text>

<text 
x="219" 
y="1002" 
class="s4_328"
>for</text>

<text 
x="250" 
y="1002" 
class="s6_328"
>cluster</text>

<text 
x="314" 
y="1002" 
class="s9_328"
>in</text>

<text 
x="337" 
y="1002" 
class="s6_328"
>generate_clusters</text>

<text 
x="472" 
y="1002" 
class="s1_328"
>(</text>

<text 
x="480" 
y="1002" 
class="s6_328"
>base_cluster</text>

<text 
x="574" 
y="1002" 
class="s1_328"
>,</text>

<text 
x="590" 
y="1002" 
class="s10_328"
>3</text>

<text 
x="598" 
y="1002" 
class="s1_328"
>)]</text>

<text 
x="55" 
y="1055" 
class="s2_328"
>which we can easily plot:</text>

<text 
x="76" 
y="1100" 
class="s4_328"
>for</text>

<text 
x="108" 
y="1100" 
class="s6_328"
>i</text>

<text 
x="116" 
y="1100" 
class="s1_328"
>,</text>

<text 
x="132" 
y="1100" 
class="s6_328"
>cluster</text>

<text 
x="187" 
y="1100" 
class="s1_328"
>,</text>

<text 
x="203" 
y="1100" 
class="s6_328"
>marker</text>

<text 
x="250" 
y="1100" 
class="s1_328"
>,</text>

<text 
x="266" 
y="1100" 
class="s6_328"
>color</text>

<text 
x="314" 
y="1100" 
class="s9_328"
>in</text>

<text 
x="337" 
y="1100" 
class="s8_328"
>zip</text>

<text 
x="361" 
y="1100" 
class="s1_328"
>([</text>

<text 
x="377" 
y="1100" 
class="s10_328"
>1</text>

<text 
x="385" 
y="1100" 
class="s1_328"
>,</text>

<text 
x="401" 
y="1100" 
class="s10_328"
>2</text>

<text 
x="408" 
y="1100" 
class="s1_328"
>,</text>

<text 
x="424" 
y="1100" 
class="s10_328"
>3</text>

<text 
x="432" 
y="1100" 
class="s1_328"
>],</text>

<text 
x="369" 
y="1115" 
class="s6_328"
>three_clusters</text>

<text 
x="480" 
y="1115" 
class="s1_328"
>,</text>

<text 
x="369" 
y="1131" 
class="s1_328"
>[</text>

<text 
x="377" 
y="1131" 
class="s11_328"
>'D'</text>

<text 
x="401" 
y="1131" 
class="s1_328"
>,</text>

<text 
x="408" 
y="1131" 
class="s11_328"
>'o'</text>

<text 
x="432" 
y="1131" 
class="s1_328"
>,</text>

<text 
x="440" 
y="1131" 
class="s11_328"
>'*'</text>

<text 
x="464" 
y="1131" 
class="s1_328"
>],</text>

<text 
x="369" 
y="1146" 
class="s1_328"
>[</text>

<text 
x="377" 
y="1146" 
class="s11_328"
>'r'</text>

<text 
x="401" 
y="1146" 
class="s1_328"
>,</text>

<text 
x="408" 
y="1146" 
class="s11_328"
>'g'</text>

<text 
x="432" 
y="1146" 
class="s1_328"
>,</text>

<text 
x="440" 
y="1146" 
class="s11_328"
>'b'</text>

<text 
x="464" 
y="1146" 
class="s1_328"
>]):</text>

<text 
x="108" 
y="1161" 
class="s6_328"
>xs</text>

<text 
x="124" 
y="1161" 
class="s1_328"
>,</text>

<text 
x="140" 
y="1161" 
class="s6_328"
>ys</text>

<text 
x="163" 
y="1161" 
class="s1_328"
>=</text>

<text 
x="179" 
y="1161" 
class="s8_328"
>zip</text>

<text 
x="203" 
y="1161" 
class="s1_328"
>(*</text>

<text 
x="219" 
y="1161" 
class="s6_328"
>cluster</text>

<text 
x="274" 
y="1161" 
class="s1_328"
>)</text>

<text 
x="298" 
y="1161" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0" 
class="s7_328"
># magic unzipping trick</text>

<text 
x="108" 
y="1177" 
class="s6_328"
>plt</text>

<text 
x="132" 
y="1177" 
class="s1_328"
>.</text>

<text 
x="140" 
y="1177" 
class="s6_328"
>scatter</text>

<text 
x="195" 
y="1177" 
class="s1_328"
>(</text>

<text 
x="203" 
y="1177" 
class="s6_328"
>xs</text>

<text 
x="219" 
y="1177" 
class="s1_328"
>,</text>

<text 
x="235" 
y="1177" 
class="s6_328"
>ys</text>

<text 
x="250" 
y="1177" 
class="s1_328"
>,</text>

<text 
x="266" 
y="1177" 
class="s6_328"
>color</text>

<text 
x="306" 
y="1177" 
class="s1_328"
>=</text>

<text 
x="314" 
y="1177" 
class="s6_328"
>color</text>

<text 
x="353" 
y="1177" 
class="s1_328"
>,</text>

<text 
x="369" 
y="1177" 
class="s6_328"
>marker</text>

<text 
x="416" 
y="1177" 
class="s1_328"
>=</text>

<text 
x="424" 
y="1177" 
class="s6_328"
>marker</text>

<text 
x="472" 
y="1177" 
class="s1_328"
>)</text>

<text 
x="108" 
y="1208" 
dx="0,0,4.6,0,0,0,4.6,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0" 
class="s7_328"
># put a number at the mean of the cluster</text>

<text 
x="108" 
y="1223" 
class="s6_328"
>x</text>

<text 
x="116" 
y="1223" 
class="s1_328"
>,</text>

<text 
x="132" 
y="1223" 
class="s6_328"
>y</text>

<text 
x="148" 
y="1223" 
class="s1_328"
>=</text>

<text 
x="163" 
y="1223" 
class="s6_328"
>vector_mean</text>

<text 
x="250" 
y="1223" 
class="s1_328"
>(</text>

<text 
x="258" 
y="1223" 
class="s6_328"
>cluster</text>

<text 
x="314" 
y="1223" 
class="s1_328"
>)</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
