<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 293 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_293{
stroke: #000000;
stroke-width: 1.0996486;
stroke-linecap: square;
stroke-linejoin: miter;
}

.s1_293{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_293{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_293{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_293{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_293{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_293{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s7_293{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s8_293{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
dx="0,0,-0.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.3,-0.6,0" 
class="s1_293"
>Creating a Decision Tree</text>

<text 
x="55" 
y="122" 
dx="0,0,0,0,0,0,0,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>The VP provides you with the interviewee data, consisting of (per your specification) pairs</text>

<text 
x="55" 
y="149" 
dx="0,0,0,0,0,0,0,0,6.1,0,0,0,0,0" 
class="s3_293"
>(input, label)</text>

<text 
x="202" 
y="149" 
class="s2_293"
>, where each</text>

<text 
x="318" 
y="149" 
class="s3_293"
>input</text>

<text 
x="376" 
y="149" 
class="s2_293"
>is a</text>

<text 
x="412" 
y="149" 
class="s3_293"
>dict</text>

<text 
x="460" 
y="149" 
class="s2_293"
>of candidate attributes, and each label is</text>

<text 
x="55" 
y="179" 
class="s2_293"
>either</text>

<text 
x="110" 
y="179" 
class="s3_293"
>True</text>

<text 
x="158" 
y="179" 
class="s2_293"
>(the candidate interviewed well) or</text>

<text 
x="471" 
y="179" 
class="s3_293"
>False</text>

<text 
x="529" 
y="179" 
class="s2_293"
>(the candidate interviewed poorly).</text>

<text 
x="55" 
y="209" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>In particular, you are provided with each candidate’s level, her preferred language,</text>

<text 
x="55" 
y="236" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.6,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>whether she is active on Twitter, and whether she has a PhD:</text>

<text 
x="76" 
y="281" 
class="s4_293"
>inputs</text>

<text 
x="132" 
y="281" 
dx="0,0,4.6" 
class="s5_293"
>= [</text>

<text 
x="108" 
y="297" 
class="s5_293"
>({</text>

<text 
x="124" 
y="297" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="297" 
class="s5_293"
>:</text>

<text 
x="187" 
y="297" 
class="s6_293"
>'Senior'</text>

<text 
x="250" 
y="297" 
class="s5_293"
>,</text>

<text 
x="266" 
y="297" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="297" 
class="s5_293"
>:</text>

<text 
x="322" 
y="297" 
class="s6_293"
>'Java'</text>

<text 
x="369" 
y="297" 
class="s5_293"
>,</text>

<text 
x="385" 
y="297" 
class="s6_293"
>'tweets'</text>

<text 
x="448" 
y="297" 
class="s5_293"
>:</text>

<text 
x="456" 
y="297" 
class="s6_293"
>'no'</text>

<text 
x="487" 
y="297" 
class="s5_293"
>,</text>

<text 
x="503" 
y="297" 
class="s6_293"
>'phd'</text>

<text 
x="543" 
y="297" 
class="s5_293"
>:</text>

<text 
x="551" 
y="297" 
class="s6_293"
>'no'</text>

<text 
x="582" 
y="297" 
class="s5_293"
>},</text>

<text 
x="630" 
y="297" 
class="s7_293"
>False</text>

<text 
x="669" 
y="297" 
class="s5_293"
>),</text>

<text 
x="108" 
y="312" 
class="s5_293"
>({</text>

<text 
x="124" 
y="312" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="312" 
class="s5_293"
>:</text>

<text 
x="187" 
y="312" 
class="s6_293"
>'Senior'</text>

<text 
x="250" 
y="312" 
class="s5_293"
>,</text>

<text 
x="266" 
y="312" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="312" 
class="s5_293"
>:</text>

<text 
x="322" 
y="312" 
class="s6_293"
>'Java'</text>

<text 
x="369" 
y="312" 
class="s5_293"
>,</text>

<text 
x="385" 
y="312" 
class="s6_293"
>'tweets'</text>

<text 
x="448" 
y="312" 
class="s5_293"
>:</text>

<text 
x="456" 
y="312" 
class="s6_293"
>'no'</text>

<text 
x="487" 
y="312" 
class="s5_293"
>,</text>

<text 
x="503" 
y="312" 
class="s6_293"
>'phd'</text>

<text 
x="543" 
y="312" 
class="s5_293"
>:</text>

<text 
x="551" 
y="312" 
class="s6_293"
>'yes'</text>

<text 
x="590" 
y="312" 
class="s5_293"
>},</text>

<text 
x="630" 
y="312" 
class="s7_293"
>False</text>

<text 
x="669" 
y="312" 
class="s5_293"
>),</text>

<text 
x="108" 
y="327" 
class="s5_293"
>({</text>

<text 
x="124" 
y="327" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="327" 
class="s5_293"
>:</text>

<text 
x="187" 
y="327" 
class="s6_293"
>'Mid'</text>

<text 
x="227" 
y="327" 
class="s5_293"
>,</text>

<text 
x="242" 
y="327" 
class="s6_293"
>'lang'</text>

<text 
x="290" 
y="327" 
class="s5_293"
>:</text>

<text 
x="298" 
y="327" 
class="s6_293"
>'Python'</text>

<text 
x="361" 
y="327" 
class="s5_293"
>,</text>

<text 
x="377" 
y="327" 
class="s6_293"
>'tweets'</text>

<text 
x="440" 
y="327" 
class="s5_293"
>:</text>

<text 
x="448" 
y="327" 
class="s6_293"
>'no'</text>

<text 
x="480" 
y="327" 
class="s5_293"
>,</text>

<text 
x="495" 
y="327" 
class="s6_293"
>'phd'</text>

<text 
x="535" 
y="327" 
class="s5_293"
>:</text>

<text 
x="543" 
y="327" 
class="s6_293"
>'no'</text>

<text 
x="574" 
y="327" 
class="s5_293"
>},</text>

<text 
x="638" 
y="327" 
class="s7_293"
>True</text>

<text 
x="669" 
y="327" 
class="s5_293"
>),</text>

<text 
x="108" 
y="343" 
class="s5_293"
>({</text>

<text 
x="124" 
y="343" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="343" 
class="s5_293"
>:</text>

<text 
x="187" 
y="343" 
class="s6_293"
>'Junior'</text>

<text 
x="250" 
y="343" 
class="s5_293"
>,</text>

<text 
x="266" 
y="343" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="343" 
class="s5_293"
>:</text>

<text 
x="322" 
y="343" 
class="s6_293"
>'Python'</text>

<text 
x="385" 
y="343" 
class="s5_293"
>,</text>

<text 
x="401" 
y="343" 
class="s6_293"
>'tweets'</text>

<text 
x="464" 
y="343" 
class="s5_293"
>:</text>

<text 
x="472" 
y="343" 
class="s6_293"
>'no'</text>

<text 
x="503" 
y="343" 
class="s5_293"
>,</text>

<text 
x="519" 
y="343" 
class="s6_293"
>'phd'</text>

<text 
x="559" 
y="343" 
class="s5_293"
>:</text>

<text 
x="567" 
y="343" 
class="s6_293"
>'no'</text>

<text 
x="598" 
y="343" 
class="s5_293"
>},</text>

<text 
x="638" 
y="343" 
class="s7_293"
>True</text>

<text 
x="669" 
y="343" 
class="s5_293"
>),</text>

<text 
x="108" 
y="358" 
class="s5_293"
>({</text>

<text 
x="124" 
y="358" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="358" 
class="s5_293"
>:</text>

<text 
x="187" 
y="358" 
class="s6_293"
>'Junior'</text>

<text 
x="250" 
y="358" 
class="s5_293"
>,</text>

<text 
x="266" 
y="358" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="358" 
class="s5_293"
>:</text>

<text 
x="322" 
y="358" 
class="s6_293"
>'R'</text>

<text 
x="345" 
y="358" 
class="s5_293"
>,</text>

<text 
x="361" 
y="358" 
class="s6_293"
>'tweets'</text>

<text 
x="424" 
y="358" 
class="s5_293"
>:</text>

<text 
x="432" 
y="358" 
class="s6_293"
>'yes'</text>

<text 
x="472" 
y="358" 
class="s5_293"
>,</text>

<text 
x="487" 
y="358" 
class="s6_293"
>'phd'</text>

<text 
x="527" 
y="358" 
class="s5_293"
>:</text>

<text 
x="535" 
y="358" 
class="s6_293"
>'no'</text>

<text 
x="567" 
y="358" 
class="s5_293"
>},</text>

<text 
x="638" 
y="358" 
class="s7_293"
>True</text>

<text 
x="669" 
y="358" 
class="s5_293"
>),</text>

<text 
x="108" 
y="374" 
class="s5_293"
>({</text>

<text 
x="124" 
y="374" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="374" 
class="s5_293"
>:</text>

<text 
x="187" 
y="374" 
class="s6_293"
>'Junior'</text>

<text 
x="250" 
y="374" 
class="s5_293"
>,</text>

<text 
x="266" 
y="374" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="374" 
class="s5_293"
>:</text>

<text 
x="322" 
y="374" 
class="s6_293"
>'R'</text>

<text 
x="345" 
y="374" 
class="s5_293"
>,</text>

<text 
x="361" 
y="374" 
class="s6_293"
>'tweets'</text>

<text 
x="424" 
y="374" 
class="s5_293"
>:</text>

<text 
x="432" 
y="374" 
class="s6_293"
>'yes'</text>

<text 
x="472" 
y="374" 
class="s5_293"
>,</text>

<text 
x="487" 
y="374" 
class="s6_293"
>'phd'</text>

<text 
x="527" 
y="374" 
class="s5_293"
>:</text>

<text 
x="535" 
y="374" 
class="s6_293"
>'yes'</text>

<text 
x="574" 
y="374" 
class="s5_293"
>},</text>

<text 
x="630" 
y="374" 
class="s7_293"
>False</text>

<text 
x="669" 
y="374" 
class="s5_293"
>),</text>

<text 
x="108" 
y="389" 
class="s5_293"
>({</text>

<text 
x="124" 
y="389" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="389" 
class="s5_293"
>:</text>

<text 
x="187" 
y="389" 
class="s6_293"
>'Mid'</text>

<text 
x="227" 
y="389" 
class="s5_293"
>,</text>

<text 
x="242" 
y="389" 
class="s6_293"
>'lang'</text>

<text 
x="290" 
y="389" 
class="s5_293"
>:</text>

<text 
x="298" 
y="389" 
class="s6_293"
>'R'</text>

<text 
x="322" 
y="389" 
class="s5_293"
>,</text>

<text 
x="337" 
y="389" 
class="s6_293"
>'tweets'</text>

<text 
x="401" 
y="389" 
class="s5_293"
>:</text>

<text 
x="408" 
y="389" 
class="s6_293"
>'yes'</text>

<text 
x="448" 
y="389" 
class="s5_293"
>,</text>

<text 
x="464" 
y="389" 
class="s6_293"
>'phd'</text>

<text 
x="503" 
y="389" 
class="s5_293"
>:</text>

<text 
x="511" 
y="389" 
class="s6_293"
>'yes'</text>

<text 
x="551" 
y="389" 
class="s5_293"
>},</text>

<text 
x="638" 
y="389" 
class="s7_293"
>True</text>

<text 
x="669" 
y="389" 
class="s5_293"
>),</text>

<text 
x="108" 
y="404" 
class="s5_293"
>({</text>

<text 
x="124" 
y="404" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="404" 
class="s5_293"
>:</text>

<text 
x="187" 
y="404" 
class="s6_293"
>'Senior'</text>

<text 
x="250" 
y="404" 
class="s5_293"
>,</text>

<text 
x="266" 
y="404" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="404" 
class="s5_293"
>:</text>

<text 
x="322" 
y="404" 
class="s6_293"
>'Python'</text>

<text 
x="385" 
y="404" 
class="s5_293"
>,</text>

<text 
x="401" 
y="404" 
class="s6_293"
>'tweets'</text>

<text 
x="464" 
y="404" 
class="s5_293"
>:</text>

<text 
x="472" 
y="404" 
class="s6_293"
>'no'</text>

<text 
x="503" 
y="404" 
class="s5_293"
>,</text>

<text 
x="519" 
y="404" 
class="s6_293"
>'phd'</text>

<text 
x="559" 
y="404" 
class="s5_293"
>:</text>

<text 
x="567" 
y="404" 
class="s6_293"
>'no'</text>

<text 
x="598" 
y="404" 
class="s5_293"
>},</text>

<text 
x="630" 
y="404" 
class="s7_293"
>False</text>

<text 
x="669" 
y="404" 
class="s5_293"
>),</text>

<text 
x="108" 
y="420" 
class="s5_293"
>({</text>

<text 
x="124" 
y="420" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="420" 
class="s5_293"
>:</text>

<text 
x="187" 
y="420" 
class="s6_293"
>'Senior'</text>

<text 
x="250" 
y="420" 
class="s5_293"
>,</text>

<text 
x="266" 
y="420" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="420" 
class="s5_293"
>:</text>

<text 
x="322" 
y="420" 
class="s6_293"
>'R'</text>

<text 
x="345" 
y="420" 
class="s5_293"
>,</text>

<text 
x="361" 
y="420" 
class="s6_293"
>'tweets'</text>

<text 
x="424" 
y="420" 
class="s5_293"
>:</text>

<text 
x="432" 
y="420" 
class="s6_293"
>'yes'</text>

<text 
x="472" 
y="420" 
class="s5_293"
>,</text>

<text 
x="487" 
y="420" 
class="s6_293"
>'phd'</text>

<text 
x="527" 
y="420" 
class="s5_293"
>:</text>

<text 
x="535" 
y="420" 
class="s6_293"
>'no'</text>

<text 
x="567" 
y="420" 
class="s5_293"
>},</text>

<text 
x="638" 
y="420" 
class="s7_293"
>True</text>

<text 
x="669" 
y="420" 
class="s5_293"
>),</text>

<text 
x="108" 
y="435" 
class="s5_293"
>({</text>

<text 
x="124" 
y="435" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="435" 
class="s5_293"
>:</text>

<text 
x="187" 
y="435" 
class="s6_293"
>'Junior'</text>

<text 
x="250" 
y="435" 
class="s5_293"
>,</text>

<text 
x="266" 
y="435" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="435" 
class="s5_293"
>:</text>

<text 
x="322" 
y="435" 
class="s6_293"
>'Python'</text>

<text 
x="385" 
y="435" 
class="s5_293"
>,</text>

<text 
x="401" 
y="435" 
class="s6_293"
>'tweets'</text>

<text 
x="464" 
y="435" 
class="s5_293"
>:</text>

<text 
x="472" 
y="435" 
class="s6_293"
>'yes'</text>

<text 
x="511" 
y="435" 
class="s5_293"
>,</text>

<text 
x="527" 
y="435" 
class="s6_293"
>'phd'</text>

<text 
x="567" 
y="435" 
class="s5_293"
>:</text>

<text 
x="574" 
y="435" 
class="s6_293"
>'no'</text>

<text 
x="606" 
y="435" 
class="s5_293"
>},</text>

<text 
x="638" 
y="435" 
class="s7_293"
>True</text>

<text 
x="669" 
y="435" 
class="s5_293"
>),</text>

<text 
x="108" 
y="451" 
class="s5_293"
>({</text>

<text 
x="124" 
y="451" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="451" 
class="s5_293"
>:</text>

<text 
x="187" 
y="451" 
class="s6_293"
>'Senior'</text>

<text 
x="250" 
y="451" 
class="s5_293"
>,</text>

<text 
x="266" 
y="451" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="451" 
class="s5_293"
>:</text>

<text 
x="322" 
y="451" 
class="s6_293"
>'Python'</text>

<text 
x="385" 
y="451" 
class="s5_293"
>,</text>

<text 
x="401" 
y="451" 
class="s6_293"
>'tweets'</text>

<text 
x="464" 
y="451" 
class="s5_293"
>:</text>

<text 
x="472" 
y="451" 
class="s6_293"
>'yes'</text>

<text 
x="511" 
y="451" 
class="s5_293"
>,</text>

<text 
x="527" 
y="451" 
class="s6_293"
>'phd'</text>

<text 
x="567" 
y="451" 
class="s5_293"
>:</text>

<text 
x="574" 
y="451" 
class="s6_293"
>'yes'</text>

<text 
x="614" 
y="451" 
class="s5_293"
>},</text>

<text 
x="638" 
y="451" 
class="s7_293"
>True</text>

<text 
x="669" 
y="451" 
class="s5_293"
>),</text>

<text 
x="108" 
y="466" 
class="s5_293"
>({</text>

<text 
x="124" 
y="466" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="466" 
class="s5_293"
>:</text>

<text 
x="187" 
y="466" 
class="s6_293"
>'Mid'</text>

<text 
x="227" 
y="466" 
class="s5_293"
>,</text>

<text 
x="242" 
y="466" 
class="s6_293"
>'lang'</text>

<text 
x="290" 
y="466" 
class="s5_293"
>:</text>

<text 
x="298" 
y="466" 
class="s6_293"
>'Python'</text>

<text 
x="361" 
y="466" 
class="s5_293"
>,</text>

<text 
x="377" 
y="466" 
class="s6_293"
>'tweets'</text>

<text 
x="440" 
y="466" 
class="s5_293"
>:</text>

<text 
x="448" 
y="466" 
class="s6_293"
>'no'</text>

<text 
x="480" 
y="466" 
class="s5_293"
>,</text>

<text 
x="495" 
y="466" 
class="s6_293"
>'phd'</text>

<text 
x="535" 
y="466" 
class="s5_293"
>:</text>

<text 
x="543" 
y="466" 
class="s6_293"
>'yes'</text>

<text 
x="582" 
y="466" 
class="s5_293"
>},</text>

<text 
x="638" 
y="466" 
class="s7_293"
>True</text>

<text 
x="669" 
y="466" 
class="s5_293"
>),</text>

<text 
x="108" 
y="481" 
class="s5_293"
>({</text>

<text 
x="124" 
y="481" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="481" 
class="s5_293"
>:</text>

<text 
x="187" 
y="481" 
class="s6_293"
>'Mid'</text>

<text 
x="227" 
y="481" 
class="s5_293"
>,</text>

<text 
x="242" 
y="481" 
class="s6_293"
>'lang'</text>

<text 
x="290" 
y="481" 
class="s5_293"
>:</text>

<text 
x="298" 
y="481" 
class="s6_293"
>'Java'</text>

<text 
x="345" 
y="481" 
class="s5_293"
>,</text>

<text 
x="361" 
y="481" 
class="s6_293"
>'tweets'</text>

<text 
x="424" 
y="481" 
class="s5_293"
>:</text>

<text 
x="432" 
y="481" 
class="s6_293"
>'yes'</text>

<text 
x="472" 
y="481" 
class="s5_293"
>,</text>

<text 
x="487" 
y="481" 
class="s6_293"
>'phd'</text>

<text 
x="527" 
y="481" 
class="s5_293"
>:</text>

<text 
x="535" 
y="481" 
class="s6_293"
>'no'</text>

<text 
x="567" 
y="481" 
class="s5_293"
>},</text>

<text 
x="638" 
y="481" 
class="s7_293"
>True</text>

<text 
x="669" 
y="481" 
class="s5_293"
>),</text>

<text 
x="108" 
y="497" 
class="s5_293"
>({</text>

<text 
x="124" 
y="497" 
class="s6_293"
>'level'</text>

<text 
x="179" 
y="497" 
class="s5_293"
>:</text>

<text 
x="187" 
y="497" 
class="s6_293"
>'Junior'</text>

<text 
x="250" 
y="497" 
class="s5_293"
>,</text>

<text 
x="266" 
y="497" 
class="s6_293"
>'lang'</text>

<text 
x="314" 
y="497" 
class="s5_293"
>:</text>

<text 
x="322" 
y="497" 
class="s6_293"
>'Python'</text>

<text 
x="385" 
y="497" 
class="s5_293"
>,</text>

<text 
x="401" 
y="497" 
class="s6_293"
>'tweets'</text>

<text 
x="464" 
y="497" 
class="s5_293"
>:</text>

<text 
x="472" 
y="497" 
class="s6_293"
>'no'</text>

<text 
x="503" 
y="497" 
class="s5_293"
>,</text>

<text 
x="519" 
y="497" 
class="s6_293"
>'phd'</text>

<text 
x="559" 
y="497" 
class="s5_293"
>:</text>

<text 
x="567" 
y="497" 
class="s6_293"
>'yes'</text>

<text 
x="606" 
y="497" 
class="s5_293"
>},</text>

<text 
x="630" 
y="497" 
class="s7_293"
>False</text>

<text 
x="669" 
y="497" 
class="s5_293"
>)</text>

<text 
x="76" 
y="512" 
class="s5_293"
>]</text>

<text 
x="55" 
y="565" 
class="s2_293"
>Our tree will consist of</text>

<text 
x="263" 
y="565" 
class="s8_293"
>decision nodes</text>

<text 
x="398" 
y="565" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0" 
class="s2_293"
>(which ask a question and direct us differently</text>

<text 
x="55" 
y="593" 
class="s2_293"
>depending on the answer) and</text>

<text 
x="324" 
y="593" 
class="s8_293"
>leaf nodes</text>

<text 
x="419" 
y="593" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>(which give us a prediction). We will build it</text>

<text 
x="55" 
y="620" 
class="s2_293"
>using the relatively simple</text>

<text 
x="293" 
y="620" 
class="s8_293"
>ID3</text>

<text 
x="332" 
y="620" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,-1.2" 
class="s2_293"
>algorithm, which operates in the following manner. Let’s</text>

<text 
x="55" 
y="648" 
class="s2_293"
>say we’re given some labeled data, and a list of attributes to consider branching on.</text>

<path d="M61.6,675.6l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_293" />
<text 
x="82" 
y="685" 
class="s2_293"
>If the data all have the same label, then create a leaf node that predicts that label and</text>

<text 
x="82" 
y="710" 
class="s2_293"
>then stop.</text>

<path d="M61.6,748.2l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_293" />
<text 
x="82" 
y="758" 
class="s2_293"
>If the list of attributes is empty (i.e., there are no more possible questions to ask), then</text>

<text 
x="82" 
y="783" 
class="s2_293"
>create a leaf node that predicts the most common label and then stop.</text>

<path d="M61.6,820.8l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_293" />
<text 
x="82" 
y="830" 
class="s2_293"
>Otherwise, try partitioning the data by each of the attributes</text>

<path d="M61.6,868.1l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_293" />
<text 
x="82" 
y="878" 
class="s2_293"
>Choose the partition with the lowest partition entropy</text>

<path d="M61.6,915.4l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_293" />
<text 
x="82" 
y="925" 
class="s2_293"
>Add a decision node based on the chosen attribute</text>

<path d="M61.6,962.7l6.6,0l0,6.6l-6.6,0l0,-6.6Z" class="g1_293" />
<text 
x="82" 
y="972" 
class="s2_293"
>Recur on each partitioned subset using the remaining attributes</text>

<text 
x="55" 
y="1021" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>This is what’s known as a “greedy” algorithm because, at each step, it chooses the most</text>

<text 
x="55" 
y="1048" 
class="s2_293"
>immediately best option. Given a data set, there may be a better tree with a worse-looking</text>

<text 
x="55" 
y="1076" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>first move. If so, this algorithm won’t find it. Nonetheless, it is relatively easy to</text>

<text 
x="55" 
y="1103" 
class="s2_293"
>understand and implement, which makes it a good place to begin exploring decision trees.</text>

<text 
x="55" 
y="1142" 
dx="0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>Let’s manually go through these steps on the interviewee data set. The data set has both</text>

<text 
x="55" 
y="1169" 
class="s3_293"
>True</text>

<text 
x="102" 
y="1169" 
class="s2_293"
>and</text>

<text 
x="139" 
y="1169" 
class="s3_293"
>False</text>

<text 
x="198" 
y="1169" 
class="s2_293"
>labels, and we have four attributes we can split on. So our first step will</text>

<text 
x="55" 
y="1199" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_293"
>be to find the partition with the least entropy. We’ll start by writing a function that does</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
