<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 49 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_49{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_49{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_49{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s4_49{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_49{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_49{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s7_49{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s8_49{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s9_49{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s10_49{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s11_49{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s12_49{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #CC0000;
}
.s13_49{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
class="s1_49"
>Dictionaries</text>

<text 
x="55" 
y="115" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>Another fundamental data structure is a dictionary, which associates</text>

<text 
x="659" 
y="115" 
class="s3_49"
>values</text>

<text 
x="720" 
y="115" 
class="s2_49"
>with</text>

<text 
x="765" 
y="115" 
class="s3_49"
>keys</text>

<text 
x="808" 
y="115" 
class="s2_49"
>and</text>

<text 
x="55" 
y="143" 
class="s2_49"
>allows you to quickly retrieve the value corresponding to a given key:</text>

<text 
x="76" 
y="188" 
class="s4_49"
>empty_dict</text>

<text 
x="163" 
y="188" 
dx="0,0,4.6,0" 
class="s5_49"
>= {}</text>

<text 
x="393" 
y="188" 
dx="0,0,4.6,0,0,0,0,0,0,0" 
class="s6_49"
># Pythonic</text>

<text 
x="76" 
y="203" 
class="s4_49"
>empty_dict2</text>

<text 
x="171" 
y="203" 
class="s5_49"
>=</text>

<text 
x="187" 
y="203" 
class="s7_49"
>dict</text>

<text 
x="219" 
y="203" 
class="s5_49"
>()</text>

<text 
x="393" 
y="203" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s6_49"
># less Pythonic</text>

<text 
x="76" 
y="218" 
class="s4_49"
>grades</text>

<text 
x="132" 
y="218" 
dx="0,0,4.6" 
class="s5_49"
>= {</text>

<text 
x="163" 
y="218" 
class="s8_49"
>"Joel"</text>

<text 
x="219" 
y="218" 
class="s5_49"
>:</text>

<text 
x="235" 
y="218" 
class="s9_49"
>80</text>

<text 
x="250" 
y="218" 
class="s5_49"
>,</text>

<text 
x="266" 
y="218" 
class="s8_49"
>"Tim"</text>

<text 
x="314" 
y="218" 
class="s5_49"
>:</text>

<text 
x="329" 
y="218" 
class="s9_49"
>95</text>

<text 
x="353" 
y="218" 
class="s5_49"
>}</text>

<text 
x="393" 
y="218" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s6_49"
># dictionary literal</text>

<text 
x="55" 
y="271" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>You can look up the value for a key using square brackets:</text>

<text 
x="76" 
y="316" 
class="s4_49"
>joels_grade</text>

<text 
x="171" 
y="316" 
class="s5_49"
>=</text>

<text 
x="187" 
y="316" 
class="s4_49"
>grades</text>

<text 
x="235" 
y="316" 
class="s5_49"
>[</text>

<text 
x="242" 
y="316" 
class="s8_49"
>"Joel"</text>

<text 
x="290" 
y="316" 
class="s5_49"
>]</text>

<text 
x="393" 
y="316" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0" 
class="s6_49"
># equals 80</text>

<text 
x="55" 
y="369" 
class="s2_49"
>But you’ll get a</text>

<text 
x="197" 
y="369" 
class="s10_49"
>KeyError</text>

<text 
x="287" 
y="369" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>if you ask for a key that’s not in the dictionary:</text>

<text 
x="76" 
y="416" 
class="s11_49"
>try</text>

<text 
x="100" 
y="416" 
class="s5_49"
>:</text>

<text 
x="108" 
y="432" 
class="s4_49"
>kates_grade</text>

<text 
x="203" 
y="432" 
class="s5_49"
>=</text>

<text 
x="219" 
y="432" 
class="s4_49"
>grades</text>

<text 
x="266" 
y="432" 
class="s5_49"
>[</text>

<text 
x="274" 
y="432" 
class="s8_49"
>"Kate"</text>

<text 
x="322" 
y="432" 
class="s5_49"
>]</text>

<text 
x="76" 
y="447" 
class="s11_49"
>except</text>

<text 
x="132" 
y="447" 
class="s12_49"
>KeyError</text>

<text 
x="195" 
y="447" 
class="s5_49"
>:</text>

<text 
x="108" 
y="463" 
class="s11_49"
>print</text>

<text 
x="156" 
y="463" 
dx="0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0" 
class="s8_49"
>"no grade for Kate!"</text>

<text 
x="55" 
y="516" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>You can check for the existence of a key using</text>

<text 
x="469" 
y="516" 
class="s10_49"
>in</text>

<text 
x="490" 
y="516" 
class="s2_49"
>:</text>

<text 
x="76" 
y="563" 
class="s4_49"
>joel_has_grade</text>

<text 
x="195" 
y="563" 
class="s5_49"
>=</text>

<text 
x="211" 
y="563" 
class="s8_49"
>"Joel"</text>

<text 
x="266" 
y="563" 
class="s13_49"
>in</text>

<text 
x="290" 
y="563" 
class="s4_49"
>grades</text>

<text 
x="377" 
y="563" 
dx="0,0,4.6,0,0,0" 
class="s6_49"
># True</text>

<text 
x="76" 
y="578" 
class="s4_49"
>kate_has_grade</text>

<text 
x="195" 
y="578" 
class="s5_49"
>=</text>

<text 
x="211" 
y="578" 
class="s8_49"
>"Kate"</text>

<text 
x="266" 
y="578" 
class="s13_49"
>in</text>

<text 
x="290" 
y="578" 
class="s4_49"
>grades</text>

<text 
x="377" 
y="578" 
dx="0,0,4.6,0,0,0,0" 
class="s6_49"
># False</text>

<text 
x="55" 
y="631" 
class="s2_49"
>Dictionaries have a</text>

<text 
x="230" 
y="631" 
class="s10_49"
>get</text>

<text 
x="267" 
y="631" 
class="s2_49"
>method that returns a default value (instead of raising an</text>

<text 
x="55" 
y="661" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>exception) when you look up a key that’s not in the dictionary:</text>

<text 
x="76" 
y="706" 
class="s4_49"
>joels_grade</text>

<text 
x="171" 
y="706" 
class="s5_49"
>=</text>

<text 
x="187" 
y="706" 
class="s4_49"
>grades</text>

<text 
x="235" 
y="706" 
class="s5_49"
>.</text>

<text 
x="242" 
y="706" 
class="s4_49"
>get</text>

<text 
x="266" 
y="706" 
class="s5_49"
>(</text>

<text 
x="274" 
y="706" 
class="s8_49"
>"Joel"</text>

<text 
x="322" 
y="706" 
class="s5_49"
>,</text>

<text 
x="337" 
y="706" 
class="s9_49"
>0</text>

<text 
x="345" 
y="706" 
class="s5_49"
>)</text>

<text 
x="377" 
y="706" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0" 
class="s6_49"
># equals 80</text>

<text 
x="76" 
y="721" 
class="s4_49"
>kates_grade</text>

<text 
x="171" 
y="721" 
class="s5_49"
>=</text>

<text 
x="187" 
y="721" 
class="s4_49"
>grades</text>

<text 
x="235" 
y="721" 
class="s5_49"
>.</text>

<text 
x="242" 
y="721" 
class="s4_49"
>get</text>

<text 
x="266" 
y="721" 
class="s5_49"
>(</text>

<text 
x="274" 
y="721" 
class="s8_49"
>"Kate"</text>

<text 
x="322" 
y="721" 
class="s5_49"
>,</text>

<text 
x="337" 
y="721" 
class="s9_49"
>0</text>

<text 
x="345" 
y="721" 
class="s5_49"
>)</text>

<text 
x="377" 
y="721" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s6_49"
># equals 0</text>

<text 
x="76" 
y="737" 
class="s4_49"
>no_ones_grade</text>

<text 
x="187" 
y="737" 
class="s5_49"
>=</text>

<text 
x="203" 
y="737" 
class="s4_49"
>grades</text>

<text 
x="250" 
y="737" 
class="s5_49"
>.</text>

<text 
x="258" 
y="737" 
class="s4_49"
>get</text>

<text 
x="282" 
y="737" 
class="s5_49"
>(</text>

<text 
x="290" 
y="737" 
dx="0,0,0,0,4.6,0,0,0" 
class="s8_49"
>"No One"</text>

<text 
x="353" 
y="737" 
class="s5_49"
>)</text>

<text 
x="377" 
y="737" 
dx="0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0" 
class="s6_49"
># default default is None</text>

<text 
x="55" 
y="789" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>You assign key-value pairs using the same square brackets:</text>

<text 
x="76" 
y="835" 
class="s4_49"
>grades</text>

<text 
x="124" 
y="835" 
class="s5_49"
>[</text>

<text 
x="132" 
y="835" 
class="s8_49"
>"Tim"</text>

<text 
x="171" 
y="835" 
dx="0,0,4.6" 
class="s5_49"
>] =</text>

<text 
x="203" 
y="835" 
class="s9_49"
>99</text>

<text 
x="377" 
y="835" 
dx="0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0" 
class="s6_49"
># replaces the old value</text>

<text 
x="76" 
y="850" 
class="s4_49"
>grades</text>

<text 
x="124" 
y="850" 
class="s5_49"
>[</text>

<text 
x="132" 
y="850" 
class="s8_49"
>"Kate"</text>

<text 
x="179" 
y="850" 
dx="0,0,4.6" 
class="s5_49"
>] =</text>

<text 
x="211" 
y="850" 
class="s9_49"
>100</text>

<text 
x="377" 
y="850" 
dx="0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,0,4.6,0,0,0,0" 
class="s6_49"
># adds a third entry</text>

<text 
x="76" 
y="865" 
class="s4_49"
>num_students</text>

<text 
x="179" 
y="865" 
class="s5_49"
>=</text>

<text 
x="195" 
y="865" 
class="s7_49"
>len</text>

<text 
x="219" 
y="865" 
class="s5_49"
>(</text>

<text 
x="227" 
y="865" 
class="s4_49"
>grades</text>

<text 
x="274" 
y="865" 
class="s5_49"
>)</text>

<text 
x="377" 
y="865" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s6_49"
># equals 3</text>

<text 
x="55" 
y="918" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_49"
>We will frequently use dictionaries as a simple way to represent structured data:</text>

<text 
x="76" 
y="963" 
class="s4_49"
>tweet</text>

<text 
x="124" 
y="963" 
dx="0,0,4.6" 
class="s5_49"
>= {</text>

<text 
x="108" 
y="979" 
class="s8_49"
>"user"</text>

<text 
x="163" 
y="979" 
class="s5_49"
>:</text>

<text 
x="179" 
y="979" 
class="s8_49"
>"joelgrus"</text>

<text 
x="258" 
y="979" 
class="s5_49"
>,</text>

<text 
x="108" 
y="994" 
class="s8_49"
>"text"</text>

<text 
x="163" 
y="994" 
class="s5_49"
>:</text>

<text 
x="179" 
y="994" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0" 
class="s8_49"
>"Data Science is Awesome"</text>

<text 
x="377" 
y="994" 
class="s5_49"
>,</text>

<text 
x="108" 
y="1010" 
class="s8_49"
>"retweet_count"</text>

<text 
x="235" 
y="1010" 
class="s5_49"
>:</text>

<text 
x="250" 
y="1010" 
class="s9_49"
>100</text>

<text 
x="274" 
y="1010" 
class="s5_49"
>,</text>

<text 
x="108" 
y="1025" 
class="s8_49"
>"hashtags"</text>

<text 
x="195" 
y="1025" 
dx="0,0,4.6" 
class="s5_49"
>: [</text>

<text 
x="219" 
y="1025" 
class="s8_49"
>"#data"</text>

<text 
x="274" 
y="1025" 
class="s5_49"
>,</text>

<text 
x="290" 
y="1025" 
class="s8_49"
>"#science"</text>

<text 
x="369" 
y="1025" 
class="s5_49"
>,</text>

<text 
x="385" 
y="1025" 
class="s8_49"
>"#datascience"</text>

<text 
x="495" 
y="1025" 
class="s5_49"
>,</text>

<text 
x="511" 
y="1025" 
class="s8_49"
>"#awesome"</text>

<text 
x="590" 
y="1025" 
class="s5_49"
>,</text>

<text 
x="606" 
y="1025" 
class="s8_49"
>"#yolo"</text>

<text 
x="661" 
y="1025" 
class="s5_49"
>]</text>

<text 
x="76" 
y="1040" 
class="s5_49"
>}</text>

<text 
x="55" 
y="1093" 
class="s2_49"
>Besides looking for specific keys we can look at all of them:</text>

<text 
x="76" 
y="1138" 
class="s4_49"
>tweet_keys</text>

<text 
x="179" 
y="1138" 
class="s5_49"
>=</text>

<text 
x="195" 
y="1138" 
class="s4_49"
>tweet</text>

<text 
x="235" 
y="1138" 
class="s5_49"
>.</text>

<text 
x="242" 
y="1138" 
class="s4_49"
>keys</text>

<text 
x="274" 
y="1138" 
class="s5_49"
>()</text>

<text 
x="329" 
y="1138" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0" 
class="s6_49"
># list of keys</text>

<text 
x="76" 
y="1154" 
class="s4_49"
>tweet_values</text>

<text 
x="179" 
y="1154" 
class="s5_49"
>=</text>

<text 
x="195" 
y="1154" 
class="s4_49"
>tweet</text>

<text 
x="235" 
y="1154" 
class="s5_49"
>.</text>

<text 
x="242" 
y="1154" 
class="s4_49"
>values</text>

<text 
x="290" 
y="1154" 
class="s5_49"
>()</text>

<text 
x="329" 
y="1154" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0" 
class="s6_49"
># list of values</text>

<text 
x="76" 
y="1169" 
class="s4_49"
>tweet_items</text>

<text 
x="179" 
y="1169" 
class="s5_49"
>=</text>

<text 
x="195" 
y="1169" 
class="s4_49"
>tweet</text>

<text 
x="235" 
y="1169" 
class="s5_49"
>.</text>

<text 
x="242" 
y="1169" 
class="s4_49"
>items</text>

<text 
x="282" 
y="1169" 
class="s5_49"
>()</text>

<text 
x="329" 
y="1169" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s6_49"
># list of (key, value) tuples</text>

<text 
x="76" 
y="1200" 
class="s8_49"
>"user"</text>

<text 
x="132" 
y="1200" 
class="s13_49"
>in</text>

<text 
x="156" 
y="1200" 
class="s4_49"
>tweet_keys</text>

<text 
x="329" 
y="1200" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0" 
class="s6_49"
># True, but uses a slow list in</text>

<text 
x="76" 
y="1215" 
class="s8_49"
>"user"</text>

<text 
x="132" 
y="1215" 
class="s13_49"
>in</text>

<text 
x="156" 
y="1215" 
class="s4_49"
>tweet</text>

<text 
x="329" 
y="1215" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0" 
class="s6_49"
># more Pythonic, uses faster dict in</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
