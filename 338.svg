<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 338 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_338{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s2_338{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s3_338{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_338{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_338{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_338{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s7_338{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s8_338{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s9_338{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s10_338{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s11_338{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s12_338{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="74" 
class="s1_338"
>randomly choose one of these to be the next word, and we repeat the process until we get</text>

<text 
x="55" 
y="102" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>to a period, which signifies the end of the sentence. We call this a</text>

<text 
x="635" 
y="102" 
class="s2_338"
>bigram model</text>

<text 
x="758" 
y="102" 
class="s1_338"
>, as it is</text>

<text 
x="55" 
y="129" 
class="s1_338"
>determined completely by the frequencies of the bigrams (word pairs) in the original data.</text>

<text 
x="55" 
y="168" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>What about a starting word? We can just pick randomly from words that</text>

<text 
x="696" 
y="168" 
class="s2_338"
>follow</text>

<text 
x="756" 
y="168" 
class="s1_338"
>a period.</text>

<text 
x="55" 
y="195" 
dx="0,-1.6,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>To start, let’s precompute the possible word transitions. Recall that</text>

<text 
x="646" 
y="195" 
class="s3_338"
>zip</text>

<text 
x="683" 
y="195" 
class="s1_338"
>stops when any of</text>

<text 
x="55" 
y="225" 
class="s1_338"
>its inputs is done, so that</text>

<text 
x="277" 
y="225" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.1,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s3_338"
>zip(document, document[1:])</text>

<text 
x="568" 
y="225" 
class="s1_338"
>gives us precisely the pairs of</text>

<text 
x="55" 
y="255" 
class="s1_338"
>consecutive elements of</text>

<text 
x="271" 
y="255" 
class="s3_338"
>document</text>

<text 
x="356" 
y="255" 
class="s1_338"
>:</text>

<text 
x="76" 
y="302" 
class="s4_338"
>bigrams</text>

<text 
x="140" 
y="302" 
class="s5_338"
>=</text>

<text 
x="156" 
y="302" 
class="s6_338"
>zip</text>

<text 
x="179" 
y="302" 
class="s5_338"
>(</text>

<text 
x="187" 
y="302" 
class="s4_338"
>document</text>

<text 
x="250" 
y="302" 
class="s5_338"
>,</text>

<text 
x="266" 
y="302" 
class="s4_338"
>document</text>

<text 
x="329" 
y="302" 
class="s5_338"
>[</text>

<text 
x="337" 
y="302" 
class="s7_338"
>1</text>

<text 
x="345" 
y="302" 
class="s5_338"
>:])</text>

<text 
x="76" 
y="317" 
class="s4_338"
>transitions</text>

<text 
x="171" 
y="317" 
class="s5_338"
>=</text>

<text 
x="187" 
y="317" 
class="s4_338"
>defaultdict</text>

<text 
x="274" 
y="317" 
class="s5_338"
>(</text>

<text 
x="282" 
y="317" 
class="s6_338"
>list</text>

<text 
x="314" 
y="317" 
class="s5_338"
>)</text>

<text 
x="76" 
y="333" 
class="s8_338"
>for</text>

<text 
x="108" 
y="333" 
class="s4_338"
>prev</text>

<text 
x="140" 
y="333" 
class="s5_338"
>,</text>

<text 
x="156" 
y="333" 
class="s4_338"
>current</text>

<text 
x="219" 
y="333" 
class="s9_338"
>in</text>

<text 
x="242" 
y="333" 
class="s4_338"
>bigrams</text>

<text 
x="298" 
y="333" 
class="s5_338"
>:</text>

<text 
x="108" 
y="348" 
class="s4_338"
>transitions</text>

<text 
x="195" 
y="348" 
class="s5_338"
>[</text>

<text 
x="203" 
y="348" 
class="s4_338"
>prev</text>

<text 
x="235" 
y="348" 
class="s5_338"
>].</text>

<text 
x="250" 
y="348" 
class="s4_338"
>append</text>

<text 
x="298" 
y="348" 
class="s5_338"
>(</text>

<text 
x="306" 
y="348" 
class="s4_338"
>current</text>

<text 
x="361" 
y="348" 
class="s5_338"
>)</text>

<text 
x="55" 
y="401" 
class="s1_338"
>Now we’re ready to generate sentences:</text>

<text 
x="76" 
y="446" 
class="s8_338"
>def</text>

<text 
x="108" 
y="446" 
class="s10_338"
>generate_using_bigrams</text>

<text 
x="282" 
y="446" 
class="s5_338"
>():</text>

<text 
x="108" 
y="462" 
class="s4_338"
>current</text>

<text 
x="171" 
y="462" 
class="s5_338"
>=</text>

<text 
x="187" 
y="462" 
class="s11_338"
>"."</text>

<text 
x="235" 
y="462" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0" 
class="s12_338"
># this means the next word will start a sentence</text>

<text 
x="108" 
y="477" 
class="s4_338"
>result</text>

<text 
x="163" 
y="477" 
dx="0,0,4.6,0" 
class="s5_338"
>= []</text>

<text 
x="108" 
y="492" 
class="s8_338"
>while</text>

<text 
x="156" 
y="492" 
class="s6_338"
>True</text>

<text 
x="187" 
y="492" 
class="s5_338"
>:</text>

<text 
x="140" 
y="508" 
class="s4_338"
>next_word_candidates</text>

<text 
x="306" 
y="508" 
class="s5_338"
>=</text>

<text 
x="322" 
y="508" 
class="s4_338"
>transitions</text>

<text 
x="408" 
y="508" 
class="s5_338"
>[</text>

<text 
x="416" 
y="508" 
class="s4_338"
>current</text>

<text 
x="472" 
y="508" 
class="s5_338"
>]</text>

<text 
x="511" 
y="508" 
dx="0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,0,4.6,0" 
class="s12_338"
># bigrams (current, _)</text>

<text 
x="140" 
y="523" 
class="s4_338"
>current</text>

<text 
x="203" 
y="523" 
class="s5_338"
>=</text>

<text 
x="219" 
y="523" 
class="s4_338"
>random</text>

<text 
x="266" 
y="523" 
class="s5_338"
>.</text>

<text 
x="274" 
y="523" 
class="s4_338"
>choice</text>

<text 
x="322" 
y="523" 
class="s5_338"
>(</text>

<text 
x="329" 
y="523" 
class="s4_338"
>next_word_candidates</text>

<text 
x="487" 
y="523" 
class="s5_338"
>)</text>

<text 
x="511" 
y="523" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0" 
class="s12_338"
># choose one at random</text>

<text 
x="140" 
y="539" 
class="s4_338"
>result</text>

<text 
x="187" 
y="539" 
class="s5_338"
>.</text>

<text 
x="195" 
y="539" 
class="s4_338"
>append</text>

<text 
x="242" 
y="539" 
class="s5_338"
>(</text>

<text 
x="250" 
y="539" 
class="s4_338"
>current</text>

<text 
x="306" 
y="539" 
class="s5_338"
>)</text>

<text 
x="511" 
y="539" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0" 
class="s12_338"
># append it to results</text>

<text 
x="140" 
y="554" 
class="s8_338"
>if</text>

<text 
x="163" 
y="554" 
class="s4_338"
>current</text>

<text 
x="227" 
y="554" 
class="s5_338"
>==</text>

<text 
x="250" 
y="554" 
class="s11_338"
>"."</text>

<text 
x="274" 
y="554" 
class="s5_338"
>:</text>

<text 
x="290" 
y="554" 
class="s8_338"
>return</text>

<text 
x="345" 
y="554" 
dx="0,0,4.6" 
class="s11_338"
>" "</text>

<text 
x="369" 
y="554" 
class="s5_338"
>.</text>

<text 
x="377" 
y="554" 
class="s4_338"
>join</text>

<text 
x="408" 
y="554" 
class="s5_338"
>(</text>

<text 
x="416" 
y="554" 
class="s4_338"
>result</text>

<text 
x="464" 
y="554" 
class="s5_338"
>)</text>

<text 
x="511" 
y="554" 
dx="0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0" 
class="s12_338"
># if "." we're done</text>

<text 
x="55" 
y="607" 
class="s1_338"
>The sentences it produces are gibberish, but they’re the kind of gibberish you might put on</text>

<text 
x="55" 
y="634" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>your website if you were trying to sound data-sciencey. For example:</text>

<text 
x="65" 
y="672" 
class="s1_338"
>If you may know which are you want to data sort the data feeds web friend someone on</text>

<text 
x="65" 
y="697" 
class="s1_338"
>trending topics as the data in Hadoop is the data science requires a book demonstrates</text>

<text 
x="65" 
y="722" 
class="s1_338"
>why visualizations are but we do massive correlations across many commercial disk</text>

<text 
x="65" 
y="748" 
class="s1_338"
>drives in Python language and creates more tractable form making connections then use</text>

<text 
x="65" 
y="773" 
class="s1_338"
>and uses it to solve a data.</text>

<text 
x="65" 
y="809" 
class="s1_338"
>Bigram Model</text>

<text 
x="55" 
y="847" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>We can make the sentences less gibberishy by looking at</text>

<text 
x="558" 
y="847" 
class="s2_338"
>trigrams</text>

<text 
x="634" 
y="847" 
class="s1_338"
>, triplets of consecutive</text>

<text 
x="55" 
y="874" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>words. (More generally, you might look at</text>

<text 
x="432" 
y="874" 
class="s2_338"
>n-grams</text>

<text 
x="511" 
y="874" 
class="s1_338"
>consisting of</text>

<text 
x="630" 
y="874" 
class="s2_338"
>n</text>

<text 
x="646" 
y="874" 
class="s1_338"
>consecutive words, but</text>

<text 
x="55" 
y="902" 
class="s1_338"
>three will be plenty for us.) Now the transitions will depend on the previous</text>

<text 
x="727" 
y="902" 
class="s2_338"
>two</text>

<text 
x="764" 
y="902" 
class="s1_338"
>words:</text>

<text 
x="76" 
y="947" 
class="s4_338"
>trigrams</text>

<text 
x="148" 
y="947" 
class="s5_338"
>=</text>

<text 
x="163" 
y="947" 
class="s6_338"
>zip</text>

<text 
x="187" 
y="947" 
class="s5_338"
>(</text>

<text 
x="195" 
y="947" 
class="s4_338"
>document</text>

<text 
x="258" 
y="947" 
class="s5_338"
>,</text>

<text 
x="274" 
y="947" 
class="s4_338"
>document</text>

<text 
x="337" 
y="947" 
class="s5_338"
>[</text>

<text 
x="345" 
y="947" 
class="s7_338"
>1</text>

<text 
x="353" 
y="947" 
class="s5_338"
>:],</text>

<text 
x="385" 
y="947" 
class="s4_338"
>document</text>

<text 
x="448" 
y="947" 
class="s5_338"
>[</text>

<text 
x="456" 
y="947" 
class="s7_338"
>2</text>

<text 
x="464" 
y="947" 
class="s5_338"
>:])</text>

<text 
x="76" 
y="962" 
class="s4_338"
>trigram_transitions</text>

<text 
x="235" 
y="962" 
class="s5_338"
>=</text>

<text 
x="250" 
y="962" 
class="s4_338"
>defaultdict</text>

<text 
x="337" 
y="962" 
class="s5_338"
>(</text>

<text 
x="345" 
y="962" 
class="s6_338"
>list</text>

<text 
x="377" 
y="962" 
class="s5_338"
>)</text>

<text 
x="76" 
y="978" 
class="s4_338"
>starts</text>

<text 
x="132" 
y="978" 
dx="0,0,4.6,0" 
class="s5_338"
>= []</text>

<text 
x="76" 
y="1008" 
class="s8_338"
>for</text>

<text 
x="108" 
y="1008" 
class="s4_338"
>prev</text>

<text 
x="140" 
y="1008" 
class="s5_338"
>,</text>

<text 
x="156" 
y="1008" 
class="s4_338"
>current</text>

<text 
x="211" 
y="1008" 
class="s5_338"
>,</text>

<text 
x="227" 
y="1008" 
class="s6_338"
>next</text>

<text 
x="266" 
y="1008" 
class="s9_338"
>in</text>

<text 
x="290" 
y="1008" 
class="s4_338"
>trigrams</text>

<text 
x="353" 
y="1008" 
class="s5_338"
>:</text>

<text 
x="108" 
y="1039" 
class="s8_338"
>if</text>

<text 
x="132" 
y="1039" 
class="s4_338"
>prev</text>

<text 
x="171" 
y="1039" 
class="s5_338"
>==</text>

<text 
x="195" 
y="1039" 
class="s11_338"
>"."</text>

<text 
x="219" 
y="1039" 
class="s5_338"
>:</text>

<text 
x="337" 
y="1039" 
dx="0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,4.6,0,0,0,0,0" 
class="s12_338"
># if the previous "word" was a period</text>

<text 
x="140" 
y="1055" 
class="s4_338"
>starts</text>

<text 
x="187" 
y="1055" 
class="s5_338"
>.</text>

<text 
x="195" 
y="1055" 
class="s4_338"
>append</text>

<text 
x="242" 
y="1055" 
class="s5_338"
>(</text>

<text 
x="250" 
y="1055" 
class="s4_338"
>current</text>

<text 
x="306" 
y="1055" 
class="s5_338"
>)</text>

<text 
x="337" 
y="1055" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0,0,0,4.6,0,0,0" 
class="s12_338"
># then this is a start word</text>

<text 
x="108" 
y="1085" 
class="s4_338"
>trigram_transitions</text>

<text 
x="258" 
y="1085" 
class="s5_338"
>[(</text>

<text 
x="274" 
y="1085" 
class="s4_338"
>prev</text>

<text 
x="306" 
y="1085" 
class="s5_338"
>,</text>

<text 
x="322" 
y="1085" 
class="s4_338"
>current</text>

<text 
x="377" 
y="1085" 
class="s5_338"
>)].</text>

<text 
x="401" 
y="1085" 
class="s4_338"
>append</text>

<text 
x="448" 
y="1085" 
class="s5_338"
>(</text>

<text 
x="456" 
y="1085" 
class="s6_338"
>next</text>

<text 
x="487" 
y="1085" 
class="s5_338"
>)</text>

<text 
x="55" 
y="1138" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s1_338"
>Notice that now we have to track the starting words separately. We can generate sentences</text>

<text 
x="55" 
y="1166" 
class="s1_338"
>in pretty much the same way:</text>

<text 
x="76" 
y="1211" 
class="s8_338"
>def</text>

<text 
x="108" 
y="1211" 
class="s10_338"
>generate_using_trigrams</text>

<text 
x="290" 
y="1211" 
class="s5_338"
>():</text>

<text 
x="108" 
y="1226" 
class="s4_338"
>current</text>

<text 
x="171" 
y="1226" 
class="s5_338"
>=</text>

<text 
x="187" 
y="1226" 
class="s4_338"
>random</text>

<text 
x="235" 
y="1226" 
class="s5_338"
>.</text>

<text 
x="242" 
y="1226" 
class="s4_338"
>choice</text>

<text 
x="290" 
y="1226" 
class="s5_338"
>(</text>

<text 
x="298" 
y="1226" 
class="s4_338"
>starts</text>

<text 
x="345" 
y="1226" 
class="s5_338"
>)</text>

<text 
x="377" 
y="1226" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0" 
class="s12_338"
># choose a random starting word</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
