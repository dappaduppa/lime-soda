<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 160 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_160{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_160{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_160{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s4_160{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s5_160{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s6_160{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s7_160{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s8_160{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s9_160{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s10_160{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s11_160{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s12_160{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s13_160{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #8E0012;
}
.s14_160{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s15_160{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.3,0,0,0,0,0,0,0,0" 
class="s1_160"
>The Basics of Text Files</text>

<text 
x="55" 
y="115" 
class="s2_160"
>The first step to working with a text file is to obtain a</text>

<text 
x="529" 
y="115" 
class="s3_160"
>file object</text>

<text 
x="622" 
y="115" 
class="s2_160"
>using</text>

<text 
x="675" 
y="115" 
class="s4_160"
>open</text>

<text 
x="717" 
y="115" 
class="s2_160"
>:</text>

<text 
x="76" 
y="162" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s5_160"
># 'r' means read-only</text>

<text 
x="76" 
y="178" 
class="s6_160"
>file_for_reading</text>

<text 
x="211" 
y="178" 
class="s7_160"
>=</text>

<text 
x="227" 
y="178" 
class="s8_160"
>open</text>

<text 
x="258" 
y="178" 
class="s7_160"
>(</text>

<text 
x="266" 
y="178" 
class="s9_160"
>'reading_file.txt'</text>

<text 
x="408" 
y="178" 
class="s7_160"
>,</text>

<text 
x="424" 
y="178" 
class="s9_160"
>'r'</text>

<text 
x="448" 
y="178" 
class="s7_160"
>)</text>

<text 
x="76" 
y="209" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s5_160"
># 'w' is write—will destroy the file if it already exists!</text>

<text 
x="76" 
y="224" 
class="s6_160"
>file_for_writing</text>

<text 
x="211" 
y="224" 
class="s7_160"
>=</text>

<text 
x="227" 
y="224" 
class="s8_160"
>open</text>

<text 
x="258" 
y="224" 
class="s7_160"
>(</text>

<text 
x="266" 
y="224" 
class="s9_160"
>'writing_file.txt'</text>

<text 
x="408" 
y="224" 
class="s7_160"
>,</text>

<text 
x="424" 
y="224" 
class="s9_160"
>'w'</text>

<text 
x="448" 
y="224" 
class="s7_160"
>)</text>

<text 
x="76" 
y="255" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s5_160"
># 'a' is append—for adding to the end of the file</text>

<text 
x="76" 
y="270" 
class="s6_160"
>file_for_appending</text>

<text 
x="227" 
y="270" 
class="s7_160"
>=</text>

<text 
x="242" 
y="270" 
class="s8_160"
>open</text>

<text 
x="274" 
y="270" 
class="s7_160"
>(</text>

<text 
x="282" 
y="270" 
class="s9_160"
>'appending_file.txt'</text>

<text 
x="440" 
y="270" 
class="s7_160"
>,</text>

<text 
x="456" 
y="270" 
class="s9_160"
>'a'</text>

<text 
x="480" 
y="270" 
class="s7_160"
>)</text>

<text 
x="76" 
y="301" 
dx="0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0" 
class="s5_160"
># don't forget to close your files when you're done</text>

<text 
x="76" 
y="316" 
class="s6_160"
>file_for_writing</text>

<text 
x="203" 
y="316" 
class="s7_160"
>.</text>

<text 
x="211" 
y="316" 
class="s6_160"
>close</text>

<text 
x="250" 
y="316" 
class="s7_160"
>()</text>

<text 
x="55" 
y="369" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_160"
>Because it is easy to forget to close your files, you should always use them in a</text>

<text 
x="755" 
y="369" 
class="s4_160"
>with</text>

<text 
x="55" 
y="399" 
class="s2_160"
>block, at the end of which they will be closed automatically:</text>

<text 
x="76" 
y="444" 
class="s10_160"
>with</text>

<text 
x="116" 
y="444" 
class="s8_160"
>open</text>

<text 
x="148" 
y="444" 
class="s7_160"
>(</text>

<text 
x="156" 
y="444" 
class="s6_160"
>filename</text>

<text 
x="219" 
y="444" 
class="s7_160"
>,</text>

<text 
x="227" 
y="444" 
class="s9_160"
>'r'</text>

<text 
x="250" 
y="444" 
class="s7_160"
>)</text>

<text 
x="266" 
y="444" 
class="s10_160"
>as</text>

<text 
x="290" 
y="444" 
class="s6_160"
>f</text>

<text 
x="298" 
y="444" 
class="s7_160"
>:</text>

<text 
x="108" 
y="459" 
class="s6_160"
>data</text>

<text 
x="148" 
y="459" 
class="s7_160"
>=</text>

<text 
x="163" 
y="459" 
class="s6_160"
>function_that_gets_data_from</text>

<text 
x="385" 
y="459" 
class="s7_160"
>(</text>

<text 
x="393" 
y="459" 
class="s6_160"
>f</text>

<text 
x="401" 
y="459" 
class="s7_160"
>)</text>

<text 
x="76" 
y="490" 
dx="0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0" 
class="s5_160"
># at this point f has already been closed, so don't try to use it</text>

<text 
x="76" 
y="506" 
class="s6_160"
>process</text>

<text 
x="132" 
y="506" 
class="s7_160"
>(</text>

<text 
x="140" 
y="506" 
class="s6_160"
>data</text>

<text 
x="171" 
y="506" 
class="s7_160"
>)</text>

<text 
x="55" 
y="558" 
class="s2_160"
>If you need to read a whole text file, you can just iterate over the lines of the file using</text>

<text 
x="55" 
y="586" 
class="s4_160"
>for</text>

<text 
x="86" 
y="586" 
class="s2_160"
>:</text>

<text 
x="76" 
y="633" 
class="s6_160"
>starts_with_hash</text>

<text 
x="211" 
y="633" 
class="s7_160"
>=</text>

<text 
x="227" 
y="633" 
class="s11_160"
>0</text>

<text 
x="76" 
y="664" 
class="s10_160"
>with</text>

<text 
x="116" 
y="664" 
class="s8_160"
>open</text>

<text 
x="148" 
y="664" 
class="s7_160"
>(</text>

<text 
x="156" 
y="664" 
class="s9_160"
>'input.txt'</text>

<text 
x="242" 
y="664" 
class="s7_160"
>,</text>

<text 
x="250" 
y="664" 
class="s9_160"
>'r'</text>

<text 
x="274" 
y="664" 
class="s7_160"
>)</text>

<text 
x="290" 
y="664" 
class="s10_160"
>as</text>

<text 
x="314" 
y="664" 
class="s6_160"
>f</text>

<text 
x="322" 
y="664" 
class="s7_160"
>:</text>

<text 
x="108" 
y="679" 
class="s10_160"
>for</text>

<text 
x="140" 
y="679" 
class="s6_160"
>line</text>

<text 
x="179" 
y="679" 
class="s12_160"
>in</text>

<text 
x="203" 
y="679" 
class="s8_160"
>file</text>

<text 
x="235" 
y="679" 
class="s7_160"
>:</text>

<text 
x="361" 
y="679" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0" 
class="s5_160"
># look at each line in the file</text>

<text 
x="140" 
y="695" 
class="s10_160"
>if</text>

<text 
x="163" 
y="695" 
class="s6_160"
>re</text>

<text 
x="179" 
y="695" 
class="s7_160"
>.</text>

<text 
x="187" 
y="695" 
class="s6_160"
>match</text>

<text 
x="227" 
y="695" 
class="s7_160"
>(</text>

<text 
x="235" 
y="695" 
class="s9_160"
>"^#"</text>

<text 
x="266" 
y="695" 
class="s7_160"
>,</text>

<text 
x="274" 
y="695" 
class="s6_160"
>line</text>

<text 
x="306" 
y="695" 
class="s7_160"
>):</text>

<text 
x="361" 
y="695" 
dx="0,0,4.6,0,0,0,4.6,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0" 
class="s5_160"
># use a regex to see if it starts with '#'</text>

<text 
x="171" 
y="710" 
class="s6_160"
>starts_with_hash</text>

<text 
x="306" 
y="710" 
class="s7_160"
>+=</text>

<text 
x="329" 
y="710" 
class="s11_160"
>1</text>

<text 
x="361" 
y="710" 
dx="0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0" 
class="s5_160"
># if it does, add 1 to the count</text>

<text 
x="55" 
y="763" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_160"
>Every line you get this way ends in a newline character, so you’ll often want to</text>

<text 
x="755" 
y="763" 
class="s4_160"
>strip()</text>

<text 
x="834" 
y="763" 
class="s2_160"
>it</text>

<text 
x="55" 
y="793" 
class="s2_160"
>before doing anything with it.</text>

<text 
x="55" 
y="831" 
class="s2_160"
>For example, imagine you have a file full of email addresses, one per line, and that you</text>

<text 
x="55" 
y="859" 
class="s2_160"
>need to generate a histogram of the domains. The rules for correctly extracting domains</text>

<text 
x="55" 
y="886" 
class="s2_160"
>are somewhat subtle (e.g., the</text>

<text 
x="322" 
y="886" 
dx="0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0" 
class="s13_160"
>Public Suffix List</text>

<text 
x="478" 
y="886" 
class="s2_160"
>), but a good first approximation is to just</text>

<text 
x="55" 
y="914" 
class="s2_160"
>take the parts of the email addresses that come after the</text>

<text 
x="547" 
y="914" 
class="s4_160"
>@</text>

<text 
x="558" 
y="914" 
class="s2_160"
>. (Which gives the wrong answer</text>

<text 
x="55" 
y="944" 
class="s2_160"
>for email addresses like</text>

<text 
x="268" 
y="944" 
class="s4_160"
>joel@mail.datasciencester.com</text>

<text 
x="574" 
y="944" 
class="s2_160"
>.)</text>

<text 
x="76" 
y="991" 
class="s10_160"
>def</text>

<text 
x="108" 
y="991" 
class="s14_160"
>get_domain</text>

<text 
x="187" 
y="991" 
class="s7_160"
>(</text>

<text 
x="195" 
y="991" 
class="s6_160"
>email_address</text>

<text 
x="298" 
y="991" 
class="s7_160"
>):</text>

<text 
x="108" 
y="1006" 
dx="0,0,0,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s15_160"
>"""split on '@' and return the last piece"""</text>

<text 
x="108" 
y="1022" 
class="s10_160"
>return</text>

<text 
x="163" 
y="1022" 
class="s6_160"
>email_address</text>

<text 
x="266" 
y="1022" 
class="s7_160"
>.</text>

<text 
x="274" 
y="1022" 
class="s6_160"
>lower</text>

<text 
x="314" 
y="1022" 
class="s7_160"
>().</text>

<text 
x="337" 
y="1022" 
class="s6_160"
>split</text>

<text 
x="377" 
y="1022" 
class="s7_160"
>(</text>

<text 
x="385" 
y="1022" 
class="s9_160"
>"@"</text>

<text 
x="408" 
y="1022" 
class="s7_160"
>)[-</text>

<text 
x="432" 
y="1022" 
class="s11_160"
>1</text>

<text 
x="440" 
y="1022" 
class="s7_160"
>]</text>

<text 
x="76" 
y="1052" 
class="s10_160"
>with</text>

<text 
x="116" 
y="1052" 
class="s8_160"
>open</text>

<text 
x="148" 
y="1052" 
class="s7_160"
>(</text>

<text 
x="156" 
y="1052" 
class="s9_160"
>'email_addresses.txt'</text>

<text 
x="322" 
y="1052" 
class="s7_160"
>,</text>

<text 
x="337" 
y="1052" 
class="s9_160"
>'r'</text>

<text 
x="361" 
y="1052" 
class="s7_160"
>)</text>

<text 
x="377" 
y="1052" 
class="s10_160"
>as</text>

<text 
x="401" 
y="1052" 
class="s6_160"
>f</text>

<text 
x="408" 
y="1052" 
class="s7_160"
>:</text>

<text 
x="108" 
y="1068" 
class="s6_160"
>domain_counts</text>

<text 
x="219" 
y="1068" 
class="s7_160"
>=</text>

<text 
x="235" 
y="1068" 
class="s6_160"
>Counter</text>

<text 
x="290" 
y="1068" 
class="s7_160"
>(</text>

<text 
x="298" 
y="1068" 
class="s6_160"
>get_domain</text>

<text 
x="377" 
y="1068" 
class="s7_160"
>(</text>

<text 
x="385" 
y="1068" 
class="s6_160"
>line</text>

<text 
x="416" 
y="1068" 
class="s7_160"
>.</text>

<text 
x="424" 
y="1068" 
class="s6_160"
>strip</text>

<text 
x="464" 
y="1068" 
class="s7_160"
>())</text>

<text 
x="298" 
y="1083" 
class="s10_160"
>for</text>

<text 
x="329" 
y="1083" 
class="s6_160"
>line</text>

<text 
x="369" 
y="1083" 
class="s12_160"
>in</text>

<text 
x="393" 
y="1083" 
class="s6_160"
>f</text>

<text 
x="298" 
y="1099" 
class="s10_160"
>if</text>

<text 
x="322" 
y="1099" 
class="s9_160"
>"@"</text>

<text 
x="353" 
y="1099" 
class="s12_160"
>in</text>

<text 
x="377" 
y="1099" 
class="s6_160"
>line</text>

<text 
x="408" 
y="1099" 
class="s7_160"
>)</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
