<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 192 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_192{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #006699;
}
.s2_192{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC00FF;
}
.s3_192{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_192{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_192{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #CC3300;
}
.s6_192{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s7_192{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s8_192{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s9_192{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s10_192{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}
.s11_192{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s12_192{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="76" 
y="92" 
class="s1_192"
>def</text>

<text 
x="108" 
y="92" 
class="s2_192"
>picker</text>

<text 
x="156" 
y="92" 
class="s3_192"
>(</text>

<text 
x="163" 
y="92" 
class="s4_192"
>field_name</text>

<text 
x="242" 
y="92" 
class="s3_192"
>):</text>

<text 
x="108" 
y="107" 
dx="0,0,0,0,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,4.6,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,4.6,0,0,0,0,0,0" 
class="s5_192"
>"""returns a function that picks a field out of a dict"""</text>

<text 
x="108" 
y="123" 
dx="0,0,0,0,0,0,0,4.6,0,0,0,0,0" 
class="s1_192"
>return lambda</text>

<text 
x="219" 
y="123" 
class="s4_192"
>row</text>

<text 
x="242" 
y="123" 
class="s3_192"
>:</text>

<text 
x="258" 
y="123" 
class="s4_192"
>row</text>

<text 
x="282" 
y="123" 
class="s3_192"
>[</text>

<text 
x="290" 
y="123" 
class="s4_192"
>field_name</text>

<text 
x="369" 
y="123" 
class="s3_192"
>]</text>

<text 
x="76" 
y="154" 
class="s1_192"
>def</text>

<text 
x="108" 
y="154" 
class="s2_192"
>pluck</text>

<text 
x="148" 
y="154" 
class="s3_192"
>(</text>

<text 
x="156" 
y="154" 
class="s4_192"
>field_name</text>

<text 
x="235" 
y="154" 
class="s3_192"
>,</text>

<text 
x="250" 
y="154" 
class="s4_192"
>rows</text>

<text 
x="282" 
y="154" 
class="s3_192"
>):</text>

<text 
x="108" 
y="169" 
dx="0,0,0,0,0,0,0,0,4.6,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s5_192"
>"""turn a list of dicts into the list of field_name values"""</text>

<text 
x="108" 
y="184" 
class="s1_192"
>return</text>

<text 
x="163" 
y="184" 
class="s6_192"
>map</text>

<text 
x="187" 
y="184" 
class="s3_192"
>(</text>

<text 
x="195" 
y="184" 
class="s4_192"
>picker</text>

<text 
x="242" 
y="184" 
class="s3_192"
>(</text>

<text 
x="250" 
y="184" 
class="s4_192"
>field_name</text>

<text 
x="329" 
y="184" 
class="s3_192"
>),</text>

<text 
x="353" 
y="184" 
class="s4_192"
>rows</text>

<text 
x="385" 
y="184" 
class="s3_192"
>)</text>

<text 
x="55" 
y="237" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>We can also create a function to group rows by the result of a</text>

<text 
x="599" 
y="237" 
class="s8_192"
>grouper</text>

<text 
x="678" 
y="237" 
class="s7_192"
>function and to</text>

<text 
x="55" 
y="267" 
class="s7_192"
>optionally apply some sort of</text>

<text 
x="318" 
y="267" 
class="s8_192"
>value_transform</text>

<text 
x="481" 
y="267" 
class="s7_192"
>to each group:</text>

<text 
x="76" 
y="314" 
class="s1_192"
>def</text>

<text 
x="108" 
y="314" 
class="s2_192"
>group_by</text>

<text 
x="171" 
y="314" 
class="s3_192"
>(</text>

<text 
x="179" 
y="314" 
class="s4_192"
>grouper</text>

<text 
x="235" 
y="314" 
class="s3_192"
>,</text>

<text 
x="250" 
y="314" 
class="s4_192"
>rows</text>

<text 
x="282" 
y="314" 
class="s3_192"
>,</text>

<text 
x="298" 
y="314" 
class="s4_192"
>value_transform</text>

<text 
x="416" 
y="314" 
class="s3_192"
>=</text>

<text 
x="424" 
y="314" 
class="s6_192"
>None</text>

<text 
x="456" 
y="314" 
class="s3_192"
>):</text>

<text 
x="108" 
y="330" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0" 
class="s9_192"
># key is output of grouper, value is list of rows</text>

<text 
x="108" 
y="345" 
class="s4_192"
>grouped</text>

<text 
x="171" 
y="345" 
class="s3_192"
>=</text>

<text 
x="187" 
y="345" 
class="s4_192"
>defaultdict</text>

<text 
x="274" 
y="345" 
class="s3_192"
>(</text>

<text 
x="282" 
y="345" 
class="s6_192"
>list</text>

<text 
x="314" 
y="345" 
class="s3_192"
>)</text>

<text 
x="108" 
y="360" 
class="s1_192"
>for</text>

<text 
x="140" 
y="360" 
class="s4_192"
>row</text>

<text 
x="171" 
y="360" 
class="s10_192"
>in</text>

<text 
x="195" 
y="360" 
class="s4_192"
>rows</text>

<text 
x="227" 
y="360" 
class="s3_192"
>:</text>

<text 
x="140" 
y="376" 
class="s4_192"
>grouped</text>

<text 
x="195" 
y="376" 
class="s3_192"
>[</text>

<text 
x="203" 
y="376" 
class="s4_192"
>grouper</text>

<text 
x="258" 
y="376" 
class="s3_192"
>(</text>

<text 
x="266" 
y="376" 
class="s4_192"
>row</text>

<text 
x="290" 
y="376" 
class="s3_192"
>)].</text>

<text 
x="314" 
y="376" 
class="s4_192"
>append</text>

<text 
x="361" 
y="376" 
class="s3_192"
>(</text>

<text 
x="369" 
y="376" 
class="s4_192"
>row</text>

<text 
x="393" 
y="376" 
class="s3_192"
>)</text>

<text 
x="108" 
y="407" 
class="s1_192"
>if</text>

<text 
x="132" 
y="407" 
class="s4_192"
>value_transform</text>

<text 
x="258" 
y="407" 
class="s10_192"
>is</text>

<text 
x="282" 
y="407" 
class="s6_192"
>None</text>

<text 
x="314" 
y="407" 
class="s3_192"
>:</text>

<text 
x="140" 
y="422" 
class="s1_192"
>return</text>

<text 
x="195" 
y="422" 
class="s4_192"
>grouped</text>

<text 
x="108" 
y="437" 
class="s1_192"
>else</text>

<text 
x="140" 
y="437" 
class="s3_192"
>:</text>

<text 
x="140" 
y="453" 
class="s1_192"
>return</text>

<text 
x="195" 
y="453" 
class="s3_192"
>{</text>

<text 
x="211" 
y="453" 
class="s4_192"
>key</text>

<text 
x="242" 
y="453" 
class="s3_192"
>:</text>

<text 
x="258" 
y="453" 
class="s4_192"
>value_transform</text>

<text 
x="377" 
y="453" 
class="s3_192"
>(</text>

<text 
x="385" 
y="453" 
class="s4_192"
>rows</text>

<text 
x="416" 
y="453" 
class="s3_192"
>)</text>

<text 
x="211" 
y="468" 
class="s1_192"
>for</text>

<text 
x="242" 
y="468" 
class="s4_192"
>key</text>

<text 
x="266" 
y="468" 
class="s3_192"
>,</text>

<text 
x="282" 
y="468" 
class="s4_192"
>rows</text>

<text 
x="322" 
y="468" 
class="s10_192"
>in</text>

<text 
x="345" 
y="468" 
class="s4_192"
>grouped</text>

<text 
x="401" 
y="468" 
class="s3_192"
>.</text>

<text 
x="408" 
y="468" 
class="s4_192"
>iteritems</text>

<text 
x="480" 
y="468" 
dx="0,0,0,4.6" 
class="s3_192"
>() }</text>

<text 
x="55" 
y="521" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>This allows us to rewrite our previous examples quite simply. For example:</text>

<text 
x="76" 
y="566" 
class="s4_192"
>max_price_by_symbol</text>

<text 
x="235" 
y="566" 
class="s3_192"
>=</text>

<text 
x="250" 
y="566" 
class="s4_192"
>group_by</text>

<text 
x="314" 
y="566" 
class="s3_192"
>(</text>

<text 
x="322" 
y="566" 
class="s4_192"
>picker</text>

<text 
x="369" 
y="566" 
class="s3_192"
>(</text>

<text 
x="377" 
y="566" 
class="s11_192"
>"symbol"</text>

<text 
x="440" 
y="566" 
class="s3_192"
>),</text>

<text 
x="322" 
y="582" 
class="s4_192"
>data</text>

<text 
x="353" 
y="582" 
class="s3_192"
>,</text>

<text 
x="322" 
y="597" 
class="s1_192"
>lambda</text>

<text 
x="377" 
y="597" 
class="s4_192"
>rows</text>

<text 
x="408" 
y="597" 
class="s3_192"
>:</text>

<text 
x="424" 
y="597" 
class="s6_192"
>max</text>

<text 
x="448" 
y="597" 
class="s3_192"
>(</text>

<text 
x="456" 
y="597" 
class="s4_192"
>pluck</text>

<text 
x="495" 
y="597" 
class="s3_192"
>(</text>

<text 
x="503" 
y="597" 
class="s11_192"
>"closing_price"</text>

<text 
x="622" 
y="597" 
class="s3_192"
>,</text>

<text 
x="638" 
y="597" 
class="s4_192"
>rows</text>

<text 
x="669" 
y="597" 
class="s3_192"
>)))</text>

<text 
x="55" 
y="650" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>We can now start to ask more complicated things, like what are the largest and smallest</text>

<text 
x="55" 
y="677" 
class="s7_192"
>one-day percent changes in our data set. The percent change is</text>

<text 
x="610" 
y="677" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,6.1" 
class="s8_192"
>price_today /</text>

<text 
x="55" 
y="707" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.1,0,6.1" 
class="s8_192"
>price_yesterday - 1</text>

<text 
x="255" 
y="707" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>, which means we need some way of associating today’s price and</text>

<text 
x="55" 
y="737" 
dx="0,0,0,0,0,0,0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>yesterday’s price. One approach is to group the prices by symbol, then, within each group:</text>

<text 
x="75" 
y="774" 
dx="0,0,0,6.6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>1. Order the prices by date.</text>

<text 
x="75" 
y="821" 
dx="0,0,0,6.6,0,0" 
class="s7_192"
>2. Use</text>

<text 
x="144" 
y="821" 
class="s8_192"
>zip</text>

<text 
x="181" 
y="821" 
class="s7_192"
>to get pairs (previous, current).</text>

<text 
x="75" 
y="869" 
dx="0,0,0,6.6,-0.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>3. Turn the pairs into new “percent change” rows.</text>

<text 
x="55" 
y="917" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s7_192"
>We’ll start by writing a function to do all the within-each-group work:</text>

<text 
x="76" 
y="962" 
class="s1_192"
>def</text>

<text 
x="108" 
y="962" 
class="s2_192"
>percent_price_change</text>

<text 
x="266" 
y="962" 
class="s3_192"
>(</text>

<text 
x="274" 
y="962" 
class="s4_192"
>yesterday</text>

<text 
x="345" 
y="962" 
class="s3_192"
>,</text>

<text 
x="361" 
y="962" 
class="s4_192"
>today</text>

<text 
x="401" 
y="962" 
class="s3_192"
>):</text>

<text 
x="108" 
y="978" 
class="s1_192"
>return</text>

<text 
x="163" 
y="978" 
class="s4_192"
>today</text>

<text 
x="203" 
y="978" 
class="s3_192"
>[</text>

<text 
x="211" 
y="978" 
class="s11_192"
>"closing_price"</text>

<text 
x="329" 
y="978" 
dx="0,0,4.6" 
class="s3_192"
>] /</text>

<text 
x="361" 
y="978" 
class="s4_192"
>yesterday</text>

<text 
x="432" 
y="978" 
class="s3_192"
>[</text>

<text 
x="440" 
y="978" 
class="s11_192"
>"closing_price"</text>

<text 
x="559" 
y="978" 
dx="0,0,4.6" 
class="s3_192"
>] -</text>

<text 
x="590" 
y="978" 
class="s12_192"
>1</text>

<text 
x="76" 
y="1008" 
class="s1_192"
>def</text>

<text 
x="108" 
y="1008" 
class="s2_192"
>day_over_day_changes</text>

<text 
x="266" 
y="1008" 
class="s3_192"
>(</text>

<text 
x="274" 
y="1008" 
class="s4_192"
>grouped_rows</text>

<text 
x="369" 
y="1008" 
class="s3_192"
>):</text>

<text 
x="108" 
y="1024" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0" 
class="s9_192"
># sort the rows by date</text>

<text 
x="108" 
y="1039" 
class="s4_192"
>ordered</text>

<text 
x="171" 
y="1039" 
class="s3_192"
>=</text>

<text 
x="187" 
y="1039" 
class="s6_192"
>sorted</text>

<text 
x="235" 
y="1039" 
class="s3_192"
>(</text>

<text 
x="242" 
y="1039" 
class="s4_192"
>grouped_rows</text>

<text 
x="337" 
y="1039" 
class="s3_192"
>,</text>

<text 
x="353" 
y="1039" 
class="s4_192"
>key</text>

<text 
x="377" 
y="1039" 
class="s3_192"
>=</text>

<text 
x="385" 
y="1039" 
class="s4_192"
>picker</text>

<text 
x="432" 
y="1039" 
class="s3_192"
>(</text>

<text 
x="440" 
y="1039" 
class="s11_192"
>"date"</text>

<text 
x="487" 
y="1039" 
class="s3_192"
>))</text>

<text 
x="108" 
y="1070" 
dx="0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0" 
class="s9_192"
># zip with an offset to get pairs of consecutive days</text>

<text 
x="108" 
y="1085" 
class="s1_192"
>return</text>

<text 
x="163" 
y="1085" 
class="s3_192"
>[{</text>

<text 
x="187" 
y="1085" 
class="s11_192"
>"symbol"</text>

<text 
x="258" 
y="1085" 
class="s3_192"
>:</text>

<text 
x="274" 
y="1085" 
class="s4_192"
>today</text>

<text 
x="314" 
y="1085" 
class="s3_192"
>[</text>

<text 
x="322" 
y="1085" 
class="s11_192"
>"symbol"</text>

<text 
x="385" 
y="1085" 
class="s3_192"
>],</text>

<text 
x="187" 
y="1101" 
class="s11_192"
>"date"</text>

<text 
x="242" 
y="1101" 
class="s3_192"
>:</text>

<text 
x="258" 
y="1101" 
class="s4_192"
>today</text>

<text 
x="298" 
y="1101" 
class="s3_192"
>[</text>

<text 
x="306" 
y="1101" 
class="s11_192"
>"date"</text>

<text 
x="353" 
y="1101" 
class="s3_192"
>],</text>

<text 
x="187" 
y="1116" 
class="s11_192"
>"change"</text>

<text 
x="258" 
y="1116" 
class="s3_192"
>:</text>

<text 
x="274" 
y="1116" 
class="s4_192"
>percent_price_change</text>

<text 
x="432" 
y="1116" 
class="s3_192"
>(</text>

<text 
x="440" 
y="1116" 
class="s4_192"
>yesterday</text>

<text 
x="511" 
y="1116" 
class="s3_192"
>,</text>

<text 
x="527" 
y="1116" 
class="s4_192"
>today</text>

<text 
x="567" 
y="1116" 
dx="0,0,4.6" 
class="s3_192"
>) }</text>

<text 
x="171" 
y="1132" 
class="s1_192"
>for</text>

<text 
x="203" 
y="1132" 
class="s4_192"
>yesterday</text>

<text 
x="274" 
y="1132" 
class="s3_192"
>,</text>

<text 
x="290" 
y="1132" 
class="s4_192"
>today</text>

<text 
x="337" 
y="1132" 
class="s10_192"
>in</text>

<text 
x="361" 
y="1132" 
class="s6_192"
>zip</text>

<text 
x="385" 
y="1132" 
class="s3_192"
>(</text>

<text 
x="393" 
y="1132" 
class="s4_192"
>ordered</text>

<text 
x="448" 
y="1132" 
class="s3_192"
>,</text>

<text 
x="464" 
y="1132" 
class="s4_192"
>ordered</text>

<text 
x="519" 
y="1132" 
class="s3_192"
>[</text>

<text 
x="527" 
y="1132" 
class="s12_192"
>1</text>

<text 
x="535" 
y="1132" 
class="s3_192"
>:])]</text>

<text 
x="55" 
y="1184" 
class="s7_192"
>Then we can just use this as the</text>

<text 
x="338" 
y="1184" 
class="s8_192"
>value_transform</text>

<text 
x="502" 
y="1184" 
class="s7_192"
>in a</text>

<text 
x="539" 
y="1184" 
class="s8_192"
>group_by</text>

<text 
x="624" 
y="1184" 
class="s7_192"
>:</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
