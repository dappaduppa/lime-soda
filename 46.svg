<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 46 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_46{
font-size: 25.31px;
font-family: LiberationSerif-Bold_b;
fill: #000000;
}
.s2_46{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_46{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s4_46{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_46{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_46{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #FF6600;
}
.s7_46{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s8_46{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #336666;
}
.s9_46{
font-size: 13.20px;
font-family: LiberationMono-Italic_10;
fill: #0099FF;
}
.s10_46{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s11_46{
font-size: 13.20px;
font-family: LiberationMono-Bold_1w;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="77" 
class="s1_46"
>Lists</text>

<text 
x="55" 
y="115" 
class="s2_46"
>Probably the most fundamental data structure in Python is the</text>

<text 
x="603" 
y="115" 
class="s3_46"
>list</text>

<text 
x="645" 
y="115" 
dx="0,0,0,0,-1.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_46"
>. A list is simply an</text>

<text 
x="55" 
y="145" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0,0,0,0" 
class="s2_46"
>ordered collection. (It is similar to what in other languages might be called an array, but</text>

<text 
x="55" 
y="172" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.4,0" 
class="s2_46"
>with some added functionality.)</text>

<text 
x="76" 
y="217" 
class="s4_46"
>integer_list</text>

<text 
x="179" 
y="217" 
dx="0,0,4.6" 
class="s5_46"
>= [</text>

<text 
x="203" 
y="217" 
class="s6_46"
>1</text>

<text 
x="211" 
y="217" 
class="s5_46"
>,</text>

<text 
x="227" 
y="217" 
class="s6_46"
>2</text>

<text 
x="235" 
y="217" 
class="s5_46"
>,</text>

<text 
x="250" 
y="217" 
class="s6_46"
>3</text>

<text 
x="258" 
y="217" 
class="s5_46"
>]</text>

<text 
x="76" 
y="233" 
class="s4_46"
>heterogeneous_list</text>

<text 
x="227" 
y="233" 
dx="0,0,4.6" 
class="s5_46"
>= [</text>

<text 
x="250" 
y="233" 
class="s7_46"
>"string"</text>

<text 
x="314" 
y="233" 
class="s5_46"
>,</text>

<text 
x="329" 
y="233" 
class="s6_46"
>0.1</text>

<text 
x="353" 
y="233" 
class="s5_46"
>,</text>

<text 
x="369" 
y="233" 
class="s8_46"
>True</text>

<text 
x="401" 
y="233" 
class="s5_46"
>]</text>

<text 
x="76" 
y="248" 
class="s4_46"
>list_of_lists</text>

<text 
x="187" 
y="248" 
dx="0,0,4.6" 
class="s5_46"
>= [</text>

<text 
x="219" 
y="248" 
class="s4_46"
>integer_list</text>

<text 
x="314" 
y="248" 
class="s5_46"
>,</text>

<text 
x="329" 
y="248" 
class="s4_46"
>heterogeneous_list</text>

<text 
x="472" 
y="248" 
dx="0,0,4.6,0,0,4.6" 
class="s5_46"
>, [] ]</text>

<text 
x="76" 
y="279" 
class="s4_46"
>list_length</text>

<text 
x="171" 
y="279" 
class="s5_46"
>=</text>

<text 
x="187" 
y="279" 
class="s8_46"
>len</text>

<text 
x="211" 
y="279" 
class="s5_46"
>(</text>

<text 
x="219" 
y="279" 
class="s4_46"
>integer_list</text>

<text 
x="314" 
y="279" 
class="s5_46"
>)</text>

<text 
x="361" 
y="279" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s9_46"
># equals 3</text>

<text 
x="76" 
y="294" 
class="s4_46"
>list_sum</text>

<text 
x="171" 
y="294" 
class="s5_46"
>=</text>

<text 
x="187" 
y="294" 
class="s8_46"
>sum</text>

<text 
x="211" 
y="294" 
class="s5_46"
>(</text>

<text 
x="219" 
y="294" 
class="s4_46"
>integer_list</text>

<text 
x="314" 
y="294" 
class="s5_46"
>)</text>

<text 
x="361" 
y="294" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s9_46"
># equals 6</text>

<text 
x="55" 
y="347" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_46"
>You can get or set the</text>

<text 
x="250" 
y="347" 
class="s10_46"
>n</text>

<text 
x="261" 
y="347" 
class="s2_46"
>th element of a list with square brackets:</text>

<text 
x="76" 
y="392" 
class="s4_46"
>x</text>

<text 
x="92" 
y="392" 
class="s5_46"
>=</text>

<text 
x="108" 
y="392" 
class="s8_46"
>range</text>

<text 
x="148" 
y="392" 
class="s5_46"
>(</text>

<text 
x="156" 
y="392" 
class="s6_46"
>10</text>

<text 
x="171" 
y="392" 
class="s5_46"
>)</text>

<text 
x="203" 
y="392" 
dx="0,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0" 
class="s9_46"
># is the list [0, 1, ..., 9]</text>

<text 
x="76" 
y="408" 
class="s4_46"
>zero</text>

<text 
x="116" 
y="408" 
class="s5_46"
>=</text>

<text 
x="132" 
y="408" 
class="s4_46"
>x</text>

<text 
x="140" 
y="408" 
class="s5_46"
>[</text>

<text 
x="148" 
y="408" 
class="s6_46"
>0</text>

<text 
x="156" 
y="408" 
class="s5_46"
>]</text>

<text 
x="203" 
y="408" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s9_46"
># equals 0, lists are 0-indexed</text>

<text 
x="76" 
y="423" 
class="s4_46"
>one</text>

<text 
x="108" 
y="423" 
class="s5_46"
>=</text>

<text 
x="124" 
y="423" 
class="s4_46"
>x</text>

<text 
x="132" 
y="423" 
class="s5_46"
>[</text>

<text 
x="140" 
y="423" 
class="s6_46"
>1</text>

<text 
x="148" 
y="423" 
class="s5_46"
>]</text>

<text 
x="203" 
y="423" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s9_46"
># equals 1</text>

<text 
x="76" 
y="439" 
class="s4_46"
>nine</text>

<text 
x="116" 
y="439" 
class="s5_46"
>=</text>

<text 
x="132" 
y="439" 
class="s4_46"
>x</text>

<text 
x="140" 
y="439" 
class="s5_46"
>[-</text>

<text 
x="156" 
y="439" 
class="s6_46"
>1</text>

<text 
x="163" 
y="439" 
class="s5_46"
>]</text>

<text 
x="203" 
y="439" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s9_46"
># equals 9, 'Pythonic' for last element</text>

<text 
x="76" 
y="454" 
class="s4_46"
>eight</text>

<text 
x="124" 
y="454" 
class="s5_46"
>=</text>

<text 
x="140" 
y="454" 
class="s4_46"
>x</text>

<text 
x="148" 
y="454" 
class="s5_46"
>[-</text>

<text 
x="163" 
y="454" 
class="s6_46"
>2</text>

<text 
x="171" 
y="454" 
class="s5_46"
>]</text>

<text 
x="203" 
y="454" 
dx="0,0,4.6,0,0,0,0,0,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0,4.6,0,0,0,0,0,0" 
class="s9_46"
># equals 8, 'Pythonic' for next-to-last element</text>

<text 
x="76" 
y="469" 
class="s4_46"
>x</text>

<text 
x="84" 
y="469" 
class="s5_46"
>[</text>

<text 
x="92" 
y="469" 
class="s6_46"
>0</text>

<text 
x="100" 
y="469" 
dx="0,0,4.6,0,4.6" 
class="s5_46"
>] = -</text>

<text 
x="140" 
y="469" 
class="s6_46"
>1</text>

<text 
x="203" 
y="469" 
dx="0,0,4.6,0,0,0,4.6,0,4.6,0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0" 
class="s9_46"
># now x is [-1, 1, 2, 3, ..., 9]</text>

<text 
x="55" 
y="522" 
dx="0,-2.2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_46"
>You can also use square brackets to “slice” lists:</text>

<text 
x="76" 
y="567" 
class="s4_46"
>first_three</text>

<text 
x="187" 
y="567" 
class="s5_46"
>=</text>

<text 
x="203" 
y="567" 
class="s4_46"
>x</text>

<text 
x="211" 
y="567" 
class="s5_46"
>[:</text>

<text 
x="227" 
y="567" 
class="s6_46"
>3</text>

<text 
x="235" 
y="567" 
class="s5_46"
>]</text>

<text 
x="361" 
y="567" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0" 
class="s9_46"
># [-1, 1, 2]</text>

<text 
x="76" 
y="583" 
class="s4_46"
>three_to_end</text>

<text 
x="179" 
y="583" 
class="s5_46"
>=</text>

<text 
x="195" 
y="583" 
class="s4_46"
>x</text>

<text 
x="203" 
y="583" 
class="s5_46"
>[</text>

<text 
x="211" 
y="583" 
class="s6_46"
>3</text>

<text 
x="219" 
y="583" 
class="s5_46"
>:]</text>

<text 
x="361" 
y="583" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0" 
class="s9_46"
># [3, 4, ..., 9]</text>

<text 
x="76" 
y="598" 
class="s4_46"
>one_to_four</text>

<text 
x="171" 
y="598" 
class="s5_46"
>=</text>

<text 
x="187" 
y="598" 
class="s4_46"
>x</text>

<text 
x="195" 
y="598" 
class="s5_46"
>[</text>

<text 
x="203" 
y="598" 
class="s6_46"
>1</text>

<text 
x="211" 
y="598" 
class="s5_46"
>:</text>

<text 
x="219" 
y="598" 
class="s6_46"
>5</text>

<text 
x="227" 
y="598" 
class="s5_46"
>]</text>

<text 
x="361" 
y="598" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0" 
class="s9_46"
># [1, 2, 3, 4]</text>

<text 
x="76" 
y="613" 
class="s4_46"
>last_three</text>

<text 
x="163" 
y="613" 
class="s5_46"
>=</text>

<text 
x="179" 
y="613" 
class="s4_46"
>x</text>

<text 
x="187" 
y="613" 
class="s5_46"
>[-</text>

<text 
x="203" 
y="613" 
class="s6_46"
>3</text>

<text 
x="211" 
y="613" 
class="s5_46"
>:]</text>

<text 
x="361" 
y="613" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0" 
class="s9_46"
># [7, 8, 9]</text>

<text 
x="76" 
y="629" 
class="s4_46"
>without_first_and_last</text>

<text 
x="258" 
y="629" 
class="s5_46"
>=</text>

<text 
x="274" 
y="629" 
class="s4_46"
>x</text>

<text 
x="282" 
y="629" 
class="s5_46"
>[</text>

<text 
x="290" 
y="629" 
class="s6_46"
>1</text>

<text 
x="298" 
y="629" 
class="s5_46"
>:-</text>

<text 
x="314" 
y="629" 
class="s6_46"
>1</text>

<text 
x="322" 
y="629" 
class="s5_46"
>]</text>

<text 
x="361" 
y="629" 
dx="0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0" 
class="s9_46"
># [1, 2, ..., 8]</text>

<text 
x="76" 
y="644" 
class="s4_46"
>copy_of_x</text>

<text 
x="156" 
y="644" 
class="s5_46"
>=</text>

<text 
x="171" 
y="644" 
class="s4_46"
>x</text>

<text 
x="179" 
y="644" 
class="s5_46"
>[:]</text>

<text 
x="361" 
y="644" 
dx="0,0,4.6,0,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,0,4.6,0" 
class="s9_46"
># [-1, 1, 2, ..., 9]</text>

<text 
x="55" 
y="697" 
class="s2_46"
>Python has an</text>

<text 
x="183" 
y="697" 
class="s3_46"
>in</text>

<text 
x="210" 
y="697" 
class="s2_46"
>operator to check for list membership:</text>

<text 
x="76" 
y="744" 
class="s6_46"
>1</text>

<text 
x="92" 
y="744" 
class="s11_46"
>in</text>

<text 
x="116" 
y="744" 
class="s5_46"
>[</text>

<text 
x="124" 
y="744" 
class="s6_46"
>1</text>

<text 
x="132" 
y="744" 
class="s5_46"
>,</text>

<text 
x="148" 
y="744" 
class="s6_46"
>2</text>

<text 
x="156" 
y="744" 
class="s5_46"
>,</text>

<text 
x="171" 
y="744" 
class="s6_46"
>3</text>

<text 
x="179" 
y="744" 
class="s5_46"
>]</text>

<text 
x="219" 
y="744" 
dx="0,0,4.6,0,0,0" 
class="s9_46"
># True</text>

<text 
x="76" 
y="760" 
class="s6_46"
>0</text>

<text 
x="92" 
y="760" 
class="s11_46"
>in</text>

<text 
x="116" 
y="760" 
class="s5_46"
>[</text>

<text 
x="124" 
y="760" 
class="s6_46"
>1</text>

<text 
x="132" 
y="760" 
class="s5_46"
>,</text>

<text 
x="148" 
y="760" 
class="s6_46"
>2</text>

<text 
x="156" 
y="760" 
class="s5_46"
>,</text>

<text 
x="171" 
y="760" 
class="s6_46"
>3</text>

<text 
x="179" 
y="760" 
class="s5_46"
>]</text>

<text 
x="219" 
y="760" 
dx="0,0,4.6,0,0,0,0" 
class="s9_46"
># False</text>

<text 
x="55" 
y="813" 
class="s2_46"
>This check involves examining the elements of the list one at a time, which means that</text>

<text 
x="55" 
y="840" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_46"
>you probably shouldn’t use it unless you know your list is pretty small (or unless you</text>

<text 
x="55" 
y="868" 
dx="0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_46"
>don’t care how long the check takes).</text>

<text 
x="55" 
y="906" 
class="s2_46"
>It is easy to concatenate lists together:</text>

<text 
x="76" 
y="951" 
class="s4_46"
>x</text>

<text 
x="92" 
y="951" 
dx="0,0,4.6" 
class="s5_46"
>= [</text>

<text 
x="116" 
y="951" 
class="s6_46"
>1</text>

<text 
x="124" 
y="951" 
class="s5_46"
>,</text>

<text 
x="140" 
y="951" 
class="s6_46"
>2</text>

<text 
x="148" 
y="951" 
class="s5_46"
>,</text>

<text 
x="163" 
y="951" 
class="s6_46"
>3</text>

<text 
x="171" 
y="951" 
class="s5_46"
>]</text>

<text 
x="76" 
y="967" 
class="s4_46"
>x</text>

<text 
x="84" 
y="967" 
class="s5_46"
>.</text>

<text 
x="92" 
y="967" 
class="s4_46"
>extend</text>

<text 
x="140" 
y="967" 
class="s5_46"
>([</text>

<text 
x="156" 
y="967" 
class="s6_46"
>4</text>

<text 
x="163" 
y="967" 
class="s5_46"
>,</text>

<text 
x="179" 
y="967" 
class="s6_46"
>5</text>

<text 
x="187" 
y="967" 
class="s5_46"
>,</text>

<text 
x="203" 
y="967" 
class="s6_46"
>6</text>

<text 
x="211" 
y="967" 
class="s5_46"
>])</text>

<text 
x="266" 
y="967" 
dx="0,0,4.6,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s9_46"
># x is now [1,2,3,4,5,6]</text>

<text 
x="55" 
y="1019" 
dx="0,0,0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_46"
>If you don’t want to modify</text>

<text 
x="304" 
y="1019" 
class="s3_46"
>x</text>

<text 
x="321" 
y="1019" 
class="s2_46"
>you can use list addition:</text>

<text 
x="76" 
y="1067" 
class="s4_46"
>x</text>

<text 
x="92" 
y="1067" 
dx="0,0,4.6" 
class="s5_46"
>= [</text>

<text 
x="116" 
y="1067" 
class="s6_46"
>1</text>

<text 
x="124" 
y="1067" 
class="s5_46"
>,</text>

<text 
x="140" 
y="1067" 
class="s6_46"
>2</text>

<text 
x="148" 
y="1067" 
class="s5_46"
>,</text>

<text 
x="163" 
y="1067" 
class="s6_46"
>3</text>

<text 
x="171" 
y="1067" 
class="s5_46"
>]</text>

<text 
x="76" 
y="1082" 
class="s4_46"
>y</text>

<text 
x="92" 
y="1082" 
class="s5_46"
>=</text>

<text 
x="108" 
y="1082" 
class="s4_46"
>x</text>

<text 
x="124" 
y="1082" 
dx="0,0,4.6" 
class="s5_46"
>+ [</text>

<text 
x="148" 
y="1082" 
class="s6_46"
>4</text>

<text 
x="156" 
y="1082" 
class="s5_46"
>,</text>

<text 
x="171" 
y="1082" 
class="s6_46"
>5</text>

<text 
x="179" 
y="1082" 
class="s5_46"
>,</text>

<text 
x="195" 
y="1082" 
class="s6_46"
>6</text>

<text 
x="203" 
y="1082" 
class="s5_46"
>]</text>

<text 
x="266" 
y="1082" 
dx="0,0,4.6,0,4.6,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,4.6,0,0,0,4.6,0,4.6,0,0,4.6,0,0,0,0,0,0,0,0" 
class="s9_46"
># y is [1, 2, 3, 4, 5, 6]; x is unchanged</text>

<text 
x="55" 
y="1135" 
class="s2_46"
>More frequently we will append to lists one item at a time:</text>

<text 
x="76" 
y="1180" 
class="s4_46"
>x</text>

<text 
x="92" 
y="1180" 
dx="0,0,4.6" 
class="s5_46"
>= [</text>

<text 
x="116" 
y="1180" 
class="s6_46"
>1</text>

<text 
x="124" 
y="1180" 
class="s5_46"
>,</text>

<text 
x="140" 
y="1180" 
class="s6_46"
>2</text>

<text 
x="148" 
y="1180" 
class="s5_46"
>,</text>

<text 
x="163" 
y="1180" 
class="s6_46"
>3</text>

<text 
x="171" 
y="1180" 
class="s5_46"
>]</text>

<text 
x="76" 
y="1195" 
class="s4_46"
>x</text>

<text 
x="84" 
y="1195" 
class="s5_46"
>.</text>

<text 
x="92" 
y="1195" 
class="s4_46"
>append</text>

<text 
x="140" 
y="1195" 
class="s5_46"
>(</text>

<text 
x="148" 
y="1195" 
class="s6_46"
>0</text>

<text 
x="156" 
y="1195" 
class="s5_46"
>)</text>

<text 
x="211" 
y="1195" 
dx="0,0,4.6,0,4.6,0,0,4.6,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0" 
class="s9_46"
># x is now [1, 2, 3, 0]</text>

<text 
x="76" 
y="1211" 
class="s4_46"
>y</text>

<text 
x="92" 
y="1211" 
class="s5_46"
>=</text>

<text 
x="108" 
y="1211" 
class="s4_46"
>x</text>

<text 
x="116" 
y="1211" 
class="s5_46"
>[-</text>

<text 
x="132" 
y="1211" 
class="s6_46"
>1</text>

<text 
x="140" 
y="1211" 
class="s5_46"
>]</text>

<text 
x="211" 
y="1211" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s9_46"
># equals 0</text>

<text 
x="76" 
y="1226" 
class="s4_46"
>z</text>

<text 
x="92" 
y="1226" 
class="s5_46"
>=</text>

<text 
x="108" 
y="1226" 
class="s8_46"
>len</text>

<text 
x="132" 
y="1226" 
class="s5_46"
>(</text>

<text 
x="140" 
y="1226" 
class="s4_46"
>x</text>

<text 
x="148" 
y="1226" 
class="s5_46"
>)</text>

<text 
x="211" 
y="1226" 
dx="0,0,4.6,0,0,0,0,0,0,4.6" 
class="s9_46"
># equals 4</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Bold_1w;
	src: url("fonts/LiberationMono-Bold_1w.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationMono-Italic_10;
	src: url("fonts/LiberationMono-Italic_10.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
