<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 340 -->
<svg x="0" y="0" width="909" height="1286" viewBox="0 0 909 1286" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[


.s1_340{
font-size: 30.81px;
font-family: LiberationSerif-Bold_b;
fill: #8E0012;
}
.s2_340{
font-size: 22.01px;
font-family: LiberationSerif_e;
fill: #000000;
}
.s3_340{
font-size: 22.01px;
font-family: LiberationSerif-Italic_l;
fill: #000000;
}
.s4_340{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000088;
}
.s5_340{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #000000;
}
.s6_340{
font-size: 13.20px;
font-family: LiberationMono_1q;
fill: #CC3300;
}
.s7_340{
font-size: 17.60px;
font-family: LiberationMono_1q;
fill: #000000;
}

]]></style>

</defs>
<path d="M0,0
L0,1286
L909,1286
L909,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="55" 
y="81" 
class="s1_340"
>Grammars</text>

<text 
x="55" 
y="122" 
dx="0,0,-1.2,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_340"
>A different approach to modeling language is with</text>

<text 
x="502" 
y="122" 
class="s3_340"
>grammars</text>

<text 
x="593" 
y="122" 
class="s2_340"
>, rules for generating</text>

<text 
x="55" 
y="149" 
class="s2_340"
>acceptable sentences. In elementary school, you probably learned about parts of speech</text>

<text 
x="55" 
y="177" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9,0,0,0,0" 
class="s2_340"
>and how to combine them. For example, if you had a really bad English teacher, you</text>

<text 
x="55" 
y="204" 
class="s2_340"
>might say that a sentence necessarily consists of a</text>

<text 
x="498" 
y="204" 
class="s3_340"
>noun</text>

<text 
x="548" 
y="204" 
class="s2_340"
>followed by a</text>

<text 
x="674" 
y="204" 
class="s3_340"
>verb</text>

<text 
x="713" 
y="204" 
class="s2_340"
>. If you then</text>

<text 
x="55" 
y="232" 
class="s2_340"
>have a list of nouns and verbs, you can generate sentences according to the rule.</text>

<text 
x="55" 
y="270" 
dx="0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_340"
>We’ll define a slightly more complicated grammar:</text>

<text 
x="76" 
y="315" 
class="s4_340"
>grammar</text>

<text 
x="140" 
y="315" 
dx="0,0,4.6" 
class="s5_340"
>= {</text>

<text 
x="108" 
y="331" 
class="s6_340"
>"_S"</text>

<text 
x="156" 
y="331" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="331" 
dx="0,0,0,0,0,4.6,0,0,0" 
class="s6_340"
>"_NP _VP"</text>

<text 
x="250" 
y="331" 
class="s5_340"
>],</text>

<text 
x="108" 
y="346" 
class="s6_340"
>"_NP"</text>

<text 
x="156" 
y="346" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="346" 
class="s6_340"
>"_N"</text>

<text 
x="211" 
y="346" 
class="s5_340"
>,</text>

<text 
x="179" 
y="361" 
dx="0,0,0,0,4.6,0,0,0,4.6,0,0,4.6,0,0,4.6,0,0" 
class="s6_340"
>"_A _NP _P _A _N"</text>

<text 
x="314" 
y="361" 
class="s5_340"
>],</text>

<text 
x="108" 
y="377" 
class="s6_340"
>"_VP"</text>

<text 
x="156" 
y="377" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="377" 
class="s6_340"
>"_V"</text>

<text 
x="211" 
y="377" 
class="s5_340"
>,</text>

<text 
x="179" 
y="392" 
dx="0,0,0,0,4.6,0,0,0" 
class="s6_340"
>"_V _NP"</text>

<text 
x="242" 
y="392" 
class="s5_340"
>],</text>

<text 
x="108" 
y="408" 
class="s6_340"
>"_N"</text>

<text 
x="156" 
y="408" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="408" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s6_340"
>"data science"</text>

<text 
x="290" 
y="408" 
class="s5_340"
>,</text>

<text 
x="306" 
y="408" 
class="s6_340"
>"Python"</text>

<text 
x="369" 
y="408" 
class="s5_340"
>,</text>

<text 
x="385" 
y="408" 
class="s6_340"
>"regression"</text>

<text 
x="480" 
y="408" 
class="s5_340"
>],</text>

<text 
x="108" 
y="423" 
class="s6_340"
>"_A"</text>

<text 
x="156" 
y="423" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="423" 
class="s6_340"
>"big"</text>

<text 
x="219" 
y="423" 
class="s5_340"
>,</text>

<text 
x="235" 
y="423" 
class="s6_340"
>"linear"</text>

<text 
x="298" 
y="423" 
class="s5_340"
>,</text>

<text 
x="314" 
y="423" 
class="s6_340"
>"logistic"</text>

<text 
x="393" 
y="423" 
class="s5_340"
>],</text>

<text 
x="108" 
y="439" 
class="s6_340"
>"_P"</text>

<text 
x="156" 
y="439" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="439" 
class="s6_340"
>"about"</text>

<text 
x="235" 
y="439" 
class="s5_340"
>,</text>

<text 
x="250" 
y="439" 
class="s6_340"
>"near"</text>

<text 
x="298" 
y="439" 
class="s5_340"
>],</text>

<text 
x="108" 
y="454" 
class="s6_340"
>"_V"</text>

<text 
x="156" 
y="454" 
dx="0,0,4.6" 
class="s5_340"
>: [</text>

<text 
x="179" 
y="454" 
class="s6_340"
>"learns"</text>

<text 
x="242" 
y="454" 
class="s5_340"
>,</text>

<text 
x="258" 
y="454" 
class="s6_340"
>"trains"</text>

<text 
x="322" 
y="454" 
class="s5_340"
>,</text>

<text 
x="337" 
y="454" 
class="s6_340"
>"tests"</text>

<text 
x="393" 
y="454" 
class="s5_340"
>,</text>

<text 
x="408" 
y="454" 
class="s6_340"
>"is"</text>

<text 
x="440" 
y="454" 
class="s5_340"
>]</text>

<text 
x="76" 
y="469" 
class="s5_340"
>}</text>

<text 
x="55" 
y="522" 
class="s2_340"
>I made up the convention that names starting with underscores refer to</text>

<text 
x="680" 
y="522" 
class="s3_340"
>rules</text>

<text 
x="729" 
y="522" 
class="s2_340"
>that need</text>

<text 
x="55" 
y="550" 
class="s2_340"
>further expanding, and that other names are</text>

<text 
x="443" 
y="550" 
class="s3_340"
>terminals</text>

<text 
x="531" 
y="550" 
dx="0,0,0,0,0,0,0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_340"
>that don’t need further processing.</text>

<text 
x="55" 
y="588" 
class="s2_340"
>So, for example,</text>

<text 
x="205" 
y="588" 
class="s7_340"
>"_S"</text>

<text 
x="253" 
y="588" 
class="s2_340"
>is the “sentence” rule, which produces a</text>

<text 
x="611" 
y="588" 
class="s7_340"
>"_NP"</text>

<text 
x="669" 
y="588" 
class="s2_340"
>(“noun phrase”) rule</text>

<text 
x="55" 
y="618" 
class="s2_340"
>followed by a</text>

<text 
x="181" 
y="618" 
class="s7_340"
>"_VP"</text>

<text 
x="239" 
y="618" 
class="s2_340"
>(“verb phrase”) rule.</text>

<text 
x="55" 
y="659" 
class="s2_340"
>The verb phrase rule can produce either the</text>

<text 
x="442" 
y="659" 
class="s7_340"
>"_V"</text>

<text 
x="489" 
y="659" 
class="s2_340"
>(“verb”) rule, or the verb rule followed</text>

<text 
x="55" 
y="688" 
class="s2_340"
>by the noun phrase rule.</text>

<text 
x="55" 
y="727" 
class="s2_340"
>Notice that the</text>

<text 
x="189" 
y="727" 
class="s7_340"
>"_NP"</text>

<text 
x="248" 
y="727" 
class="s2_340"
>rule contains itself in one of its productions. Grammars can be</text>

<text 
x="55" 
y="756" 
class="s2_340"
>recursive, which allows even finite grammars like this to generate infinitely many</text>

<text 
x="55" 
y="784" 
dx="0,0,0,-0.4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_340"
>different sentences.</text>

<text 
x="55" 
y="822" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_340"
>How do we generate sentences from this grammar? We’ll start with a list containing the</text>

<text 
x="55" 
y="850" 
class="s2_340"
>sentence rule</text>

<text 
x="175" 
y="850" 
class="s7_340"
>["_S"]</text>

<text 
x="239" 
y="850" 
class="s2_340"
>. And then we’ll repeatedly expand each rule by replacing it with a</text>

<text 
x="55" 
y="880" 
dx="0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0" 
class="s2_340"
>randomly chosen one of its productions. We stop when we have a list consisting solely of</text>

<text 
x="55" 
y="907" 
class="s2_340"
>terminals.</text>

<text 
x="55" 
y="946" 
class="s2_340"
>For example, one such progression might look like:</text>

<text 
x="76" 
y="991" 
class="s5_340"
>[</text>

<text 
x="84" 
y="991" 
class="s6_340"
>'_S'</text>

<text 
x="116" 
y="991" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1006" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1006" 
class="s6_340"
>'_NP'</text>

<text 
x="124" 
y="1006" 
class="s5_340"
>,</text>

<text 
x="132" 
y="1006" 
class="s6_340"
>'_VP'</text>

<text 
x="171" 
y="1006" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1022" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1022" 
class="s6_340"
>'_N'</text>

<text 
x="116" 
y="1022" 
class="s5_340"
>,</text>

<text 
x="124" 
y="1022" 
class="s6_340"
>'_VP'</text>

<text 
x="163" 
y="1022" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1037" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1037" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1037" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1037" 
class="s6_340"
>'_VP'</text>

<text 
x="195" 
y="1037" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1052" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1052" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1052" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1052" 
class="s6_340"
>'_V'</text>

<text 
x="187" 
y="1052" 
class="s5_340"
>,</text>

<text 
x="195" 
y="1052" 
class="s6_340"
>'_NP'</text>

<text 
x="235" 
y="1052" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1068" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1068" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1068" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1068" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1068" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1068" 
class="s6_340"
>'_NP'</text>

<text 
x="266" 
y="1068" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1083" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1083" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1083" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1083" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1083" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1083" 
class="s6_340"
>'_A'</text>

<text 
x="258" 
y="1083" 
class="s5_340"
>,</text>

<text 
x="266" 
y="1083" 
class="s6_340"
>'_NP'</text>

<text 
x="306" 
y="1083" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1083" 
class="s6_340"
>'_P'</text>

<text 
x="345" 
y="1083" 
class="s5_340"
>,</text>

<text 
x="353" 
y="1083" 
class="s6_340"
>'_A'</text>

<text 
x="385" 
y="1083" 
class="s5_340"
>,</text>

<text 
x="393" 
y="1083" 
class="s6_340"
>'_N'</text>

<text 
x="424" 
y="1083" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1099" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1099" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1099" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1099" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1099" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1099" 
class="s6_340"
>'logistic'</text>

<text 
x="306" 
y="1099" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1099" 
class="s6_340"
>'_NP'</text>

<text 
x="353" 
y="1099" 
class="s5_340"
>,</text>

<text 
x="361" 
y="1099" 
class="s6_340"
>'_P'</text>

<text 
x="393" 
y="1099" 
class="s5_340"
>,</text>

<text 
x="401" 
y="1099" 
class="s6_340"
>'_A'</text>

<text 
x="432" 
y="1099" 
class="s5_340"
>,</text>

<text 
x="440" 
y="1099" 
class="s6_340"
>'_N'</text>

<text 
x="472" 
y="1099" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1114" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1114" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1114" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1114" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1114" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1114" 
class="s6_340"
>'logistic'</text>

<text 
x="306" 
y="1114" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1114" 
class="s6_340"
>'_N'</text>

<text 
x="345" 
y="1114" 
class="s5_340"
>,</text>

<text 
x="353" 
y="1114" 
class="s6_340"
>'_P'</text>

<text 
x="385" 
y="1114" 
class="s5_340"
>,</text>

<text 
x="393" 
y="1114" 
class="s6_340"
>'_A'</text>

<text 
x="424" 
y="1114" 
class="s5_340"
>,</text>

<text 
x="432" 
y="1114" 
class="s6_340"
>'_N'</text>

<text 
x="464" 
y="1114" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1129" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1129" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1129" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1129" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1129" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1129" 
class="s6_340"
>'logistic'</text>

<text 
x="306" 
y="1129" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1129" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s6_340"
>'data science'</text>

<text 
x="424" 
y="1129" 
class="s5_340"
>,</text>

<text 
x="432" 
y="1129" 
class="s6_340"
>'_P'</text>

<text 
x="464" 
y="1129" 
class="s5_340"
>,</text>

<text 
x="472" 
y="1129" 
class="s6_340"
>'_A'</text>

<text 
x="503" 
y="1129" 
class="s5_340"
>,</text>

<text 
x="511" 
y="1129" 
class="s6_340"
>'_N'</text>

<text 
x="543" 
y="1129" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1145" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1145" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1145" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1145" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1145" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1145" 
class="s6_340"
>'logistic'</text>

<text 
x="306" 
y="1145" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1145" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s6_340"
>'data science'</text>

<text 
x="424" 
y="1145" 
class="s5_340"
>,</text>

<text 
x="432" 
y="1145" 
class="s6_340"
>'about'</text>

<text 
x="487" 
y="1145" 
class="s5_340"
>,</text>

<text 
x="495" 
y="1145" 
class="s6_340"
>'_A'</text>

<text 
x="527" 
y="1145" 
class="s5_340"
>,</text>

<text 
x="543" 
y="1145" 
class="s6_340"
>'_N'</text>

<text 
x="574" 
y="1145" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1160" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1160" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1160" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1160" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1160" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1160" 
class="s6_340"
>'logistic'</text>

<text 
x="306" 
y="1160" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1160" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s6_340"
>'data science'</text>

<text 
x="424" 
y="1160" 
class="s5_340"
>,</text>

<text 
x="432" 
y="1160" 
class="s6_340"
>'about'</text>

<text 
x="487" 
y="1160" 
class="s5_340"
>,</text>

<text 
x="495" 
y="1160" 
class="s6_340"
>'logistic'</text>

<text 
x="574" 
y="1160" 
class="s5_340"
>,</text>

<text 
x="582" 
y="1160" 
class="s6_340"
>'_N'</text>

<text 
x="614" 
y="1160" 
class="s5_340"
>]</text>

<text 
x="76" 
y="1176" 
class="s5_340"
>[</text>

<text 
x="84" 
y="1176" 
class="s6_340"
>'Python'</text>

<text 
x="148" 
y="1176" 
class="s5_340"
>,</text>

<text 
x="156" 
y="1176" 
class="s6_340"
>'trains'</text>

<text 
x="219" 
y="1176" 
class="s5_340"
>,</text>

<text 
x="227" 
y="1176" 
class="s6_340"
>'logistic'</text>

<text 
x="306" 
y="1176" 
class="s5_340"
>,</text>

<text 
x="314" 
y="1176" 
dx="0,0,0,0,0,0,4.6,0,0,0,0,0,0,0" 
class="s6_340"
>'data science'</text>

<text 
x="424" 
y="1176" 
class="s5_340"
>,</text>

<text 
x="432" 
y="1176" 
class="s6_340"
>'about'</text>

<text 
x="487" 
y="1176" 
class="s5_340"
>,</text>

<text 
x="495" 
y="1176" 
class="s6_340"
>'logistic'</text>

<text 
x="574" 
y="1176" 
class="s5_340"
>,</text>

<text 
x="582" 
y="1176" 
class="s6_340"
>'Python'</text>

<text 
x="646" 
y="1176" 
class="s5_340"
>]</text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: LiberationSerif-Italic_l;
	src: url("fonts/LiberationSerif-Italic_l.woff") format("woff");
}

@font-face {
	font-family: LiberationMono_1q;
	src: url("fonts/LiberationMono_1q.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif-Bold_b;
	src: url("fonts/LiberationSerif-Bold_b.woff") format("woff");
}

@font-face {
	font-family: LiberationSerif_e;
	src: url("fonts/LiberationSerif_e.woff") format("woff");
}

]]></style>

</svg>
